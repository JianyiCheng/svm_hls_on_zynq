// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="svm_classifier,hls_ip_2016_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=8.607490,HLS_SYN_LAT=90,HLS_SYN_TPT=87,HLS_SYN_MEM=126,HLS_SYN_DSP=216,HLS_SYN_FF=25568,HLS_SYN_LUT=49511}" *)

module svm_classifier (
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        ap_clk,
        ap_rst_n,
        interrupt
);

parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    ap_const_int64_8 = 8;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_S_AXI_ADDR_WIDTH = 32;

parameter C_S_AXI_AXILITES_WSTRB_WIDTH = (C_S_AXI_AXILITES_DATA_WIDTH / ap_const_int64_8);
parameter C_S_AXI_WSTRB_WIDTH = (C_S_AXI_DATA_WIDTH / ap_const_int64_8);

input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1 : 0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1 : 0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1 : 0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1 : 0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1 : 0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
input   ap_clk;
input   ap_rst_n;
output   interrupt;

reg    ap_rst_n_inv;
wire    ap_start;
wire    ap_ready;
wire    ap_done;
reg    ap_idle;
wire   [255:0] in_V;
wire    out_r;
wire    svm_classifier_svm_classifier_entry3_U0_ap_start;
wire    svm_classifier_svm_classifier_entry3_U0_ap_done;
wire    svm_classifier_svm_classifier_entry3_U0_ap_continue;
wire    svm_classifier_svm_classifier_entry3_U0_ap_idle;
wire    svm_classifier_svm_classifier_entry3_U0_ap_ready;
wire   [255:0] svm_classifier_svm_classifier_entry3_U0_in_V_out_din;
wire    svm_classifier_svm_classifier_entry3_U0_in_V_out_write;
reg    svm_classifier_Block_proc_U0_ap_start;
wire    svm_classifier_Block_proc_U0_ap_done;
reg    svm_classifier_Block_proc_U0_ap_continue;
wire    svm_classifier_Block_proc_U0_ap_idle;
wire    svm_classifier_Block_proc_U0_ap_ready;
wire    svm_classifier_Block_proc_U0_in_V_read;
wire   [12:0] svm_classifier_Block_proc_U0_ap_return_0;
wire   [12:0] svm_classifier_Block_proc_U0_ap_return_1;
wire   [12:0] svm_classifier_Block_proc_U0_ap_return_2;
wire   [12:0] svm_classifier_Block_proc_U0_ap_return_3;
wire   [12:0] svm_classifier_Block_proc_U0_ap_return_4;
wire   [12:0] svm_classifier_Block_proc_U0_ap_return_5;
wire   [12:0] svm_classifier_Block_proc_U0_ap_return_6;
wire   [12:0] svm_classifier_Block_proc_U0_ap_return_7;
wire   [12:0] svm_classifier_Block_proc_U0_ap_return_8;
wire   [12:0] svm_classifier_Block_proc_U0_ap_return_9;
wire   [12:0] svm_classifier_Block_proc_U0_ap_return_10;
wire   [12:0] svm_classifier_Block_proc_U0_ap_return_11;
wire   [12:0] svm_classifier_Block_proc_U0_ap_return_12;
wire   [12:0] svm_classifier_Block_proc_U0_ap_return_13;
wire   [12:0] svm_classifier_Block_proc_U0_ap_return_14;
wire   [12:0] svm_classifier_Block_proc_U0_ap_return_15;
wire    s_in_11_V_loc_channel_full_n;
reg    ap_reg_s_in_11_V_loc_channel_full_n;
reg    ap_sig_s_in_11_V_loc_channel_full_n;
reg    ap_chn_write_svm_classifier_Block_proc_U0_s_in_11_V_loc_channel;
wire    s_in_9_V_loc_channel_full_n;
reg    ap_reg_s_in_9_V_loc_channel_full_n;
reg    ap_sig_s_in_9_V_loc_channel_full_n;
reg    ap_chn_write_svm_classifier_Block_proc_U0_s_in_9_V_loc_channel;
wire    s_in_4_V_loc_channel_full_n;
reg    ap_reg_s_in_4_V_loc_channel_full_n;
reg    ap_sig_s_in_4_V_loc_channel_full_n;
reg    ap_chn_write_svm_classifier_Block_proc_U0_s_in_4_V_loc_channel;
wire    s_in_3_V_loc_channel_full_n;
reg    ap_reg_s_in_3_V_loc_channel_full_n;
reg    ap_sig_s_in_3_V_loc_channel_full_n;
reg    ap_chn_write_svm_classifier_Block_proc_U0_s_in_3_V_loc_channel;
wire    s_in_1_V_loc_channel_full_n;
reg    ap_reg_s_in_1_V_loc_channel_full_n;
reg    ap_sig_s_in_1_V_loc_channel_full_n;
reg    ap_chn_write_svm_classifier_Block_proc_U0_s_in_1_V_loc_channel;
wire    s_in_10_V_loc_channel_full_n;
reg    ap_reg_s_in_10_V_loc_channel_full_n;
reg    ap_sig_s_in_10_V_loc_channel_full_n;
reg    ap_chn_write_svm_classifier_Block_proc_U0_s_in_10_V_loc_channel;
wire    s_in_0_V_loc_channel_full_n;
reg    ap_reg_s_in_0_V_loc_channel_full_n;
reg    ap_sig_s_in_0_V_loc_channel_full_n;
reg    ap_chn_write_svm_classifier_Block_proc_U0_s_in_0_V_loc_channel;
wire    s_in_8_V_loc_channel_full_n;
reg    ap_reg_s_in_8_V_loc_channel_full_n;
reg    ap_sig_s_in_8_V_loc_channel_full_n;
reg    ap_chn_write_svm_classifier_Block_proc_U0_s_in_8_V_loc_channel;
wire    s_in_5_V_loc_channel_full_n;
reg    ap_reg_s_in_5_V_loc_channel_full_n;
reg    ap_sig_s_in_5_V_loc_channel_full_n;
reg    ap_chn_write_svm_classifier_Block_proc_U0_s_in_5_V_loc_channel;
wire    s_in_12_V_loc_channel_full_n;
reg    ap_reg_s_in_12_V_loc_channel_full_n;
reg    ap_sig_s_in_12_V_loc_channel_full_n;
reg    ap_chn_write_svm_classifier_Block_proc_U0_s_in_12_V_loc_channel;
wire    s_in_7_V_loc_channel_full_n;
reg    ap_reg_s_in_7_V_loc_channel_full_n;
reg    ap_sig_s_in_7_V_loc_channel_full_n;
reg    ap_chn_write_svm_classifier_Block_proc_U0_s_in_7_V_loc_channel;
wire    s_in_6_V_loc_channel_full_n;
reg    ap_reg_s_in_6_V_loc_channel_full_n;
reg    ap_sig_s_in_6_V_loc_channel_full_n;
reg    ap_chn_write_svm_classifier_Block_proc_U0_s_in_6_V_loc_channel;
wire    s_in_2_V_loc_channel_full_n;
reg    ap_reg_s_in_2_V_loc_channel_full_n;
reg    ap_sig_s_in_2_V_loc_channel_full_n;
reg    ap_chn_write_svm_classifier_Block_proc_U0_s_in_2_V_loc_channel;
wire    s_in_13_V_loc_channel_full_n;
reg    ap_reg_s_in_13_V_loc_channel_full_n;
reg    ap_sig_s_in_13_V_loc_channel_full_n;
reg    ap_chn_write_svm_classifier_Block_proc_U0_s_in_13_V_loc_channel;
wire    s_in_14_V_loc_channel_full_n;
reg    ap_reg_s_in_14_V_loc_channel_full_n;
reg    ap_sig_s_in_14_V_loc_channel_full_n;
reg    ap_chn_write_svm_classifier_Block_proc_U0_s_in_14_V_loc_channel;
wire    s_in_15_V_loc_channel_full_n;
reg    ap_reg_s_in_15_V_loc_channel_full_n;
reg    ap_sig_s_in_15_V_loc_channel_full_n;
reg    ap_chn_write_svm_classifier_Block_proc_U0_s_in_15_V_loc_channel;
wire    svm_classifier_Loop_Sum_loop_proc1_U0_ap_start;
wire    svm_classifier_Loop_Sum_loop_proc1_U0_ap_done;
reg    svm_classifier_Loop_Sum_loop_proc1_U0_ap_continue;
wire    svm_classifier_Loop_Sum_loop_proc1_U0_ap_idle;
wire    svm_classifier_Loop_Sum_loop_proc1_U0_ap_ready;
wire   [17:0] svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_0;
wire   [17:0] svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_1;
wire   [17:0] svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_2;
wire   [17:0] svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_3;
wire   [17:0] svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_4;
wire   [17:0] svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_5;
wire   [17:0] svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_6;
wire   [17:0] svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_7;
wire   [17:0] svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_8;
wire   [17:0] svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_9;
wire   [17:0] svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_10;
wire   [17:0] svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_11;
wire   [17:0] svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_12;
wire   [17:0] svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_13;
wire   [17:0] svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_14;
wire   [17:0] svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_15;
wire   [17:0] svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_16;
wire   [17:0] svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_17;
wire    ch_sums_V_14_0_loc_channel_full_n;
reg    ap_reg_ch_sums_V_14_0_loc_channel_full_n;
reg    ap_sig_ch_sums_V_14_0_loc_channel_full_n;
reg    ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_14_0_loc_channel;
wire    ch_sums_V_17_0_loc_channel_full_n;
reg    ap_reg_ch_sums_V_17_0_loc_channel_full_n;
reg    ap_sig_ch_sums_V_17_0_loc_channel_full_n;
reg    ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_17_0_loc_channel;
wire    ch_sums_V_16_0_loc_channel_full_n;
reg    ap_reg_ch_sums_V_16_0_loc_channel_full_n;
reg    ap_sig_ch_sums_V_16_0_loc_channel_full_n;
reg    ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_16_0_loc_channel;
wire    ch_sums_V_15_0_loc_channel_full_n;
reg    ap_reg_ch_sums_V_15_0_loc_channel_full_n;
reg    ap_sig_ch_sums_V_15_0_loc_channel_full_n;
reg    ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_15_0_loc_channel;
wire    ch_sums_V_13_0_loc_channel_full_n;
reg    ap_reg_ch_sums_V_13_0_loc_channel_full_n;
reg    ap_sig_ch_sums_V_13_0_loc_channel_full_n;
reg    ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_13_0_loc_channel;
wire    ch_sums_V_12_0_loc_channel_full_n;
reg    ap_reg_ch_sums_V_12_0_loc_channel_full_n;
reg    ap_sig_ch_sums_V_12_0_loc_channel_full_n;
reg    ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_12_0_loc_channel;
wire    ch_sums_V_11_0_loc_channel_full_n;
reg    ap_reg_ch_sums_V_11_0_loc_channel_full_n;
reg    ap_sig_ch_sums_V_11_0_loc_channel_full_n;
reg    ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_11_0_loc_channel;
wire    ch_sums_V_10_0_loc_channel_full_n;
reg    ap_reg_ch_sums_V_10_0_loc_channel_full_n;
reg    ap_sig_ch_sums_V_10_0_loc_channel_full_n;
reg    ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_10_0_loc_channel;
wire    ch_sums_V_9_0_loc_channel_full_n;
reg    ap_reg_ch_sums_V_9_0_loc_channel_full_n;
reg    ap_sig_ch_sums_V_9_0_loc_channel_full_n;
reg    ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_9_0_loc_channel;
wire    ch_sums_V_8_0_loc_channel_full_n;
reg    ap_reg_ch_sums_V_8_0_loc_channel_full_n;
reg    ap_sig_ch_sums_V_8_0_loc_channel_full_n;
reg    ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_8_0_loc_channel;
wire    ch_sums_V_7_0_loc_channel_full_n;
reg    ap_reg_ch_sums_V_7_0_loc_channel_full_n;
reg    ap_sig_ch_sums_V_7_0_loc_channel_full_n;
reg    ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_7_0_loc_channel;
wire    ch_sums_V_6_0_loc_channel_full_n;
reg    ap_reg_ch_sums_V_6_0_loc_channel_full_n;
reg    ap_sig_ch_sums_V_6_0_loc_channel_full_n;
reg    ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_6_0_loc_channel;
wire    ch_sums_0_0_V_loc_channel_full_n;
reg    ap_reg_ch_sums_0_0_V_loc_channel_full_n;
reg    ap_sig_ch_sums_0_0_V_loc_channel_full_n;
reg    ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_0_0_V_loc_channel;
wire    ch_sums_1_0_V_loc_channel_full_n;
reg    ap_reg_ch_sums_1_0_V_loc_channel_full_n;
reg    ap_sig_ch_sums_1_0_V_loc_channel_full_n;
reg    ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_1_0_V_loc_channel;
wire    ch_sums_2_0_V_loc_channel_full_n;
reg    ap_reg_ch_sums_2_0_V_loc_channel_full_n;
reg    ap_sig_ch_sums_2_0_V_loc_channel_full_n;
reg    ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_2_0_V_loc_channel;
wire    ch_sums_3_0_V_loc_channel_full_n;
reg    ap_reg_ch_sums_3_0_V_loc_channel_full_n;
reg    ap_sig_ch_sums_3_0_V_loc_channel_full_n;
reg    ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_3_0_V_loc_channel;
wire    ch_sums_4_0_V_loc_channel_full_n;
reg    ap_reg_ch_sums_4_0_V_loc_channel_full_n;
reg    ap_sig_ch_sums_4_0_V_loc_channel_full_n;
reg    ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_4_0_V_loc_channel;
wire    ch_sums_5_0_V_loc_channel_full_n;
reg    ap_reg_ch_sums_5_0_V_loc_channel_full_n;
reg    ap_sig_ch_sums_5_0_V_loc_channel_full_n;
reg    ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_5_0_V_loc_channel;
wire    svm_classifier_Block_preheader_0_proc1_U0_ap_start;
wire    svm_classifier_Block_preheader_0_proc1_U0_ap_done;
wire    svm_classifier_Block_preheader_0_proc1_U0_ap_continue;
wire    svm_classifier_Block_preheader_0_proc1_U0_ap_idle;
wire    svm_classifier_Block_preheader_0_proc1_U0_ap_ready;
wire   [0:0] svm_classifier_Block_preheader_0_proc1_U0_out_r;
wire    svm_classifier_Block_preheader_0_proc1_U0_out_r_ap_vld;
wire    ap_sig_hs_continue;
wire    in_V_channel_full_n;
wire   [255:0] in_V_channel_dout;
wire    in_V_channel_empty_n;
wire   [12:0] s_in_0_V_loc_channel_dout;
wire    s_in_0_V_loc_channel_empty_n;
wire   [12:0] s_in_1_V_loc_channel_dout;
wire    s_in_1_V_loc_channel_empty_n;
wire   [12:0] s_in_2_V_loc_channel_dout;
wire    s_in_2_V_loc_channel_empty_n;
wire   [12:0] s_in_3_V_loc_channel_dout;
wire    s_in_3_V_loc_channel_empty_n;
wire   [12:0] s_in_4_V_loc_channel_dout;
wire    s_in_4_V_loc_channel_empty_n;
wire   [12:0] s_in_5_V_loc_channel_dout;
wire    s_in_5_V_loc_channel_empty_n;
wire   [12:0] s_in_6_V_loc_channel_dout;
wire    s_in_6_V_loc_channel_empty_n;
wire   [12:0] s_in_7_V_loc_channel_dout;
wire    s_in_7_V_loc_channel_empty_n;
wire   [12:0] s_in_8_V_loc_channel_dout;
wire    s_in_8_V_loc_channel_empty_n;
wire   [12:0] s_in_9_V_loc_channel_dout;
wire    s_in_9_V_loc_channel_empty_n;
wire   [12:0] s_in_10_V_loc_channel_dout;
wire    s_in_10_V_loc_channel_empty_n;
wire   [12:0] s_in_11_V_loc_channel_dout;
wire    s_in_11_V_loc_channel_empty_n;
wire   [12:0] s_in_12_V_loc_channel_dout;
wire    s_in_12_V_loc_channel_empty_n;
wire   [12:0] s_in_13_V_loc_channel_dout;
wire    s_in_13_V_loc_channel_empty_n;
wire   [12:0] s_in_14_V_loc_channel_dout;
wire    s_in_14_V_loc_channel_empty_n;
wire   [12:0] s_in_15_V_loc_channel_dout;
wire    s_in_15_V_loc_channel_empty_n;
wire   [17:0] ch_sums_V_17_0_loc_channel_dout;
wire    ch_sums_V_17_0_loc_channel_empty_n;
wire   [17:0] ch_sums_V_16_0_loc_channel_dout;
wire    ch_sums_V_16_0_loc_channel_empty_n;
wire   [17:0] ch_sums_V_15_0_loc_channel_dout;
wire    ch_sums_V_15_0_loc_channel_empty_n;
wire   [17:0] ch_sums_V_14_0_loc_channel_dout;
wire    ch_sums_V_14_0_loc_channel_empty_n;
wire   [17:0] ch_sums_V_13_0_loc_channel_dout;
wire    ch_sums_V_13_0_loc_channel_empty_n;
wire   [17:0] ch_sums_V_12_0_loc_channel_dout;
wire    ch_sums_V_12_0_loc_channel_empty_n;
wire   [17:0] ch_sums_V_11_0_loc_channel_dout;
wire    ch_sums_V_11_0_loc_channel_empty_n;
wire   [17:0] ch_sums_V_10_0_loc_channel_dout;
wire    ch_sums_V_10_0_loc_channel_empty_n;
wire   [17:0] ch_sums_V_9_0_loc_channel_dout;
wire    ch_sums_V_9_0_loc_channel_empty_n;
wire   [17:0] ch_sums_V_8_0_loc_channel_dout;
wire    ch_sums_V_8_0_loc_channel_empty_n;
wire   [17:0] ch_sums_V_7_0_loc_channel_dout;
wire    ch_sums_V_7_0_loc_channel_empty_n;
wire   [17:0] ch_sums_V_6_0_loc_channel_dout;
wire    ch_sums_V_6_0_loc_channel_empty_n;
wire   [17:0] ch_sums_0_0_V_loc_channel_dout;
wire    ch_sums_0_0_V_loc_channel_empty_n;
wire   [17:0] ch_sums_1_0_V_loc_channel_dout;
wire    ch_sums_1_0_V_loc_channel_empty_n;
wire   [17:0] ch_sums_2_0_V_loc_channel_dout;
wire    ch_sums_2_0_V_loc_channel_empty_n;
wire   [17:0] ch_sums_3_0_V_loc_channel_dout;
wire    ch_sums_3_0_V_loc_channel_empty_n;
wire   [17:0] ch_sums_4_0_V_loc_channel_dout;
wire    ch_sums_4_0_V_loc_channel_empty_n;
wire   [17:0] ch_sums_5_0_V_loc_channel_dout;
wire    ch_sums_5_0_V_loc_channel_empty_n;
reg    ap_sig_hs_done;
wire    ap_sig_hs_ready;

// power-on initialization
initial begin
#0 svm_classifier_Block_proc_U0_ap_start = 1'b0;
#0 ap_reg_s_in_11_V_loc_channel_full_n = 1'b0;
#0 ap_reg_s_in_9_V_loc_channel_full_n = 1'b0;
#0 ap_reg_s_in_4_V_loc_channel_full_n = 1'b0;
#0 ap_reg_s_in_3_V_loc_channel_full_n = 1'b0;
#0 ap_reg_s_in_1_V_loc_channel_full_n = 1'b0;
#0 ap_reg_s_in_10_V_loc_channel_full_n = 1'b0;
#0 ap_reg_s_in_0_V_loc_channel_full_n = 1'b0;
#0 ap_reg_s_in_8_V_loc_channel_full_n = 1'b0;
#0 ap_reg_s_in_5_V_loc_channel_full_n = 1'b0;
#0 ap_reg_s_in_12_V_loc_channel_full_n = 1'b0;
#0 ap_reg_s_in_7_V_loc_channel_full_n = 1'b0;
#0 ap_reg_s_in_6_V_loc_channel_full_n = 1'b0;
#0 ap_reg_s_in_2_V_loc_channel_full_n = 1'b0;
#0 ap_reg_s_in_13_V_loc_channel_full_n = 1'b0;
#0 ap_reg_s_in_14_V_loc_channel_full_n = 1'b0;
#0 ap_reg_s_in_15_V_loc_channel_full_n = 1'b0;
#0 ap_reg_ch_sums_V_14_0_loc_channel_full_n = 1'b0;
#0 ap_reg_ch_sums_V_17_0_loc_channel_full_n = 1'b0;
#0 ap_reg_ch_sums_V_16_0_loc_channel_full_n = 1'b0;
#0 ap_reg_ch_sums_V_15_0_loc_channel_full_n = 1'b0;
#0 ap_reg_ch_sums_V_13_0_loc_channel_full_n = 1'b0;
#0 ap_reg_ch_sums_V_12_0_loc_channel_full_n = 1'b0;
#0 ap_reg_ch_sums_V_11_0_loc_channel_full_n = 1'b0;
#0 ap_reg_ch_sums_V_10_0_loc_channel_full_n = 1'b0;
#0 ap_reg_ch_sums_V_9_0_loc_channel_full_n = 1'b0;
#0 ap_reg_ch_sums_V_8_0_loc_channel_full_n = 1'b0;
#0 ap_reg_ch_sums_V_7_0_loc_channel_full_n = 1'b0;
#0 ap_reg_ch_sums_V_6_0_loc_channel_full_n = 1'b0;
#0 ap_reg_ch_sums_0_0_V_loc_channel_full_n = 1'b0;
#0 ap_reg_ch_sums_1_0_V_loc_channel_full_n = 1'b0;
#0 ap_reg_ch_sums_2_0_V_loc_channel_full_n = 1'b0;
#0 ap_reg_ch_sums_3_0_V_loc_channel_full_n = 1'b0;
#0 ap_reg_ch_sums_4_0_V_loc_channel_full_n = 1'b0;
#0 ap_reg_ch_sums_5_0_V_loc_channel_full_n = 1'b0;
end

svm_classifier_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
svm_classifier_AXILiteS_s_axi_U(
    .AWVALID(s_axi_AXILiteS_AWVALID),
    .AWREADY(s_axi_AXILiteS_AWREADY),
    .AWADDR(s_axi_AXILiteS_AWADDR),
    .WVALID(s_axi_AXILiteS_WVALID),
    .WREADY(s_axi_AXILiteS_WREADY),
    .WDATA(s_axi_AXILiteS_WDATA),
    .WSTRB(s_axi_AXILiteS_WSTRB),
    .ARVALID(s_axi_AXILiteS_ARVALID),
    .ARREADY(s_axi_AXILiteS_ARREADY),
    .ARADDR(s_axi_AXILiteS_ARADDR),
    .RVALID(s_axi_AXILiteS_RVALID),
    .RREADY(s_axi_AXILiteS_RREADY),
    .RDATA(s_axi_AXILiteS_RDATA),
    .RRESP(s_axi_AXILiteS_RRESP),
    .BVALID(s_axi_AXILiteS_BVALID),
    .BREADY(s_axi_AXILiteS_BREADY),
    .BRESP(s_axi_AXILiteS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .in_V(in_V),
    .out_r(out_r),
    .out_r_ap_vld(svm_classifier_Block_preheader_0_proc1_U0_out_r_ap_vld)
);

svm_classifier_svm_classifier_entry3 svm_classifier_svm_classifier_entry3_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(svm_classifier_svm_classifier_entry3_U0_ap_start),
    .ap_done(svm_classifier_svm_classifier_entry3_U0_ap_done),
    .ap_continue(svm_classifier_svm_classifier_entry3_U0_ap_continue),
    .ap_idle(svm_classifier_svm_classifier_entry3_U0_ap_idle),
    .ap_ready(svm_classifier_svm_classifier_entry3_U0_ap_ready),
    .in_V(in_V),
    .in_V_out_din(svm_classifier_svm_classifier_entry3_U0_in_V_out_din),
    .in_V_out_full_n(in_V_channel_full_n),
    .in_V_out_write(svm_classifier_svm_classifier_entry3_U0_in_V_out_write)
);

svm_classifier_Block_proc svm_classifier_Block_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(svm_classifier_Block_proc_U0_ap_start),
    .ap_done(svm_classifier_Block_proc_U0_ap_done),
    .ap_continue(svm_classifier_Block_proc_U0_ap_continue),
    .ap_idle(svm_classifier_Block_proc_U0_ap_idle),
    .ap_ready(svm_classifier_Block_proc_U0_ap_ready),
    .in_V_dout(in_V_channel_dout),
    .in_V_empty_n(in_V_channel_empty_n),
    .in_V_read(svm_classifier_Block_proc_U0_in_V_read),
    .ap_return_0(svm_classifier_Block_proc_U0_ap_return_0),
    .ap_return_1(svm_classifier_Block_proc_U0_ap_return_1),
    .ap_return_2(svm_classifier_Block_proc_U0_ap_return_2),
    .ap_return_3(svm_classifier_Block_proc_U0_ap_return_3),
    .ap_return_4(svm_classifier_Block_proc_U0_ap_return_4),
    .ap_return_5(svm_classifier_Block_proc_U0_ap_return_5),
    .ap_return_6(svm_classifier_Block_proc_U0_ap_return_6),
    .ap_return_7(svm_classifier_Block_proc_U0_ap_return_7),
    .ap_return_8(svm_classifier_Block_proc_U0_ap_return_8),
    .ap_return_9(svm_classifier_Block_proc_U0_ap_return_9),
    .ap_return_10(svm_classifier_Block_proc_U0_ap_return_10),
    .ap_return_11(svm_classifier_Block_proc_U0_ap_return_11),
    .ap_return_12(svm_classifier_Block_proc_U0_ap_return_12),
    .ap_return_13(svm_classifier_Block_proc_U0_ap_return_13),
    .ap_return_14(svm_classifier_Block_proc_U0_ap_return_14),
    .ap_return_15(svm_classifier_Block_proc_U0_ap_return_15)
);

svm_classifier_Loop_Sum_loop_proc1 svm_classifier_Loop_Sum_loop_proc1_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(svm_classifier_Loop_Sum_loop_proc1_U0_ap_start),
    .ap_done(svm_classifier_Loop_Sum_loop_proc1_U0_ap_done),
    .ap_continue(svm_classifier_Loop_Sum_loop_proc1_U0_ap_continue),
    .ap_idle(svm_classifier_Loop_Sum_loop_proc1_U0_ap_idle),
    .ap_ready(svm_classifier_Loop_Sum_loop_proc1_U0_ap_ready),
    .p_read(s_in_0_V_loc_channel_dout),
    .p_read1(s_in_1_V_loc_channel_dout),
    .p_read2(s_in_2_V_loc_channel_dout),
    .p_read3(s_in_3_V_loc_channel_dout),
    .p_read4(s_in_4_V_loc_channel_dout),
    .p_read5(s_in_5_V_loc_channel_dout),
    .p_read6(s_in_6_V_loc_channel_dout),
    .p_read7(s_in_7_V_loc_channel_dout),
    .p_read8(s_in_8_V_loc_channel_dout),
    .p_read9(s_in_9_V_loc_channel_dout),
    .p_read10(s_in_10_V_loc_channel_dout),
    .p_read11(s_in_11_V_loc_channel_dout),
    .p_read12(s_in_12_V_loc_channel_dout),
    .p_read13(s_in_13_V_loc_channel_dout),
    .p_read14(s_in_14_V_loc_channel_dout),
    .p_read15(s_in_15_V_loc_channel_dout),
    .ap_return_0(svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_0),
    .ap_return_1(svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_1),
    .ap_return_2(svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_2),
    .ap_return_3(svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_3),
    .ap_return_4(svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_4),
    .ap_return_5(svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_5),
    .ap_return_6(svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_6),
    .ap_return_7(svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_7),
    .ap_return_8(svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_8),
    .ap_return_9(svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_9),
    .ap_return_10(svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_10),
    .ap_return_11(svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_11),
    .ap_return_12(svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_12),
    .ap_return_13(svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_13),
    .ap_return_14(svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_14),
    .ap_return_15(svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_15),
    .ap_return_16(svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_16),
    .ap_return_17(svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_17)
);

svm_classifier_Block_preheader_0_proc1 svm_classifier_Block_preheader_0_proc1_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(svm_classifier_Block_preheader_0_proc1_U0_ap_start),
    .ap_done(svm_classifier_Block_preheader_0_proc1_U0_ap_done),
    .ap_continue(svm_classifier_Block_preheader_0_proc1_U0_ap_continue),
    .ap_idle(svm_classifier_Block_preheader_0_proc1_U0_ap_idle),
    .ap_ready(svm_classifier_Block_preheader_0_proc1_U0_ap_ready),
    .p_read(ch_sums_0_0_V_loc_channel_dout),
    .p_read1(ch_sums_1_0_V_loc_channel_dout),
    .p_read2(ch_sums_2_0_V_loc_channel_dout),
    .p_read3(ch_sums_3_0_V_loc_channel_dout),
    .p_read4(ch_sums_4_0_V_loc_channel_dout),
    .p_read5(ch_sums_5_0_V_loc_channel_dout),
    .p_read6(ch_sums_V_6_0_loc_channel_dout),
    .p_read7(ch_sums_V_7_0_loc_channel_dout),
    .p_read8(ch_sums_V_8_0_loc_channel_dout),
    .p_read9(ch_sums_V_9_0_loc_channel_dout),
    .p_read10(ch_sums_V_10_0_loc_channel_dout),
    .p_read11(ch_sums_V_11_0_loc_channel_dout),
    .p_read12(ch_sums_V_12_0_loc_channel_dout),
    .p_read13(ch_sums_V_13_0_loc_channel_dout),
    .p_read14(ch_sums_V_14_0_loc_channel_dout),
    .p_read15(ch_sums_V_15_0_loc_channel_dout),
    .p_read16(ch_sums_V_16_0_loc_channel_dout),
    .p_read17(ch_sums_V_17_0_loc_channel_dout),
    .out_r(svm_classifier_Block_preheader_0_proc1_U0_out_r),
    .out_r_ap_vld(svm_classifier_Block_preheader_0_proc1_U0_out_r_ap_vld)
);

FIFO_svm_classifier_in_V_channel in_V_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(svm_classifier_svm_classifier_entry3_U0_in_V_out_din),
    .if_full_n(in_V_channel_full_n),
    .if_write(svm_classifier_svm_classifier_entry3_U0_in_V_out_write),
    .if_dout(in_V_channel_dout),
    .if_empty_n(in_V_channel_empty_n),
    .if_read(svm_classifier_Block_proc_U0_in_V_read)
);

FIFO_svm_classifier_s_in_0_V_loc_channel s_in_0_V_loc_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(svm_classifier_Block_proc_U0_ap_return_0),
    .if_full_n(s_in_0_V_loc_channel_full_n),
    .if_write(ap_chn_write_svm_classifier_Block_proc_U0_s_in_0_V_loc_channel),
    .if_dout(s_in_0_V_loc_channel_dout),
    .if_empty_n(s_in_0_V_loc_channel_empty_n),
    .if_read(svm_classifier_Loop_Sum_loop_proc1_U0_ap_ready)
);

FIFO_svm_classifier_s_in_1_V_loc_channel s_in_1_V_loc_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(svm_classifier_Block_proc_U0_ap_return_1),
    .if_full_n(s_in_1_V_loc_channel_full_n),
    .if_write(ap_chn_write_svm_classifier_Block_proc_U0_s_in_1_V_loc_channel),
    .if_dout(s_in_1_V_loc_channel_dout),
    .if_empty_n(s_in_1_V_loc_channel_empty_n),
    .if_read(svm_classifier_Loop_Sum_loop_proc1_U0_ap_ready)
);

FIFO_svm_classifier_s_in_2_V_loc_channel s_in_2_V_loc_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(svm_classifier_Block_proc_U0_ap_return_2),
    .if_full_n(s_in_2_V_loc_channel_full_n),
    .if_write(ap_chn_write_svm_classifier_Block_proc_U0_s_in_2_V_loc_channel),
    .if_dout(s_in_2_V_loc_channel_dout),
    .if_empty_n(s_in_2_V_loc_channel_empty_n),
    .if_read(svm_classifier_Loop_Sum_loop_proc1_U0_ap_ready)
);

FIFO_svm_classifier_s_in_3_V_loc_channel s_in_3_V_loc_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(svm_classifier_Block_proc_U0_ap_return_3),
    .if_full_n(s_in_3_V_loc_channel_full_n),
    .if_write(ap_chn_write_svm_classifier_Block_proc_U0_s_in_3_V_loc_channel),
    .if_dout(s_in_3_V_loc_channel_dout),
    .if_empty_n(s_in_3_V_loc_channel_empty_n),
    .if_read(svm_classifier_Loop_Sum_loop_proc1_U0_ap_ready)
);

FIFO_svm_classifier_s_in_4_V_loc_channel s_in_4_V_loc_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(svm_classifier_Block_proc_U0_ap_return_4),
    .if_full_n(s_in_4_V_loc_channel_full_n),
    .if_write(ap_chn_write_svm_classifier_Block_proc_U0_s_in_4_V_loc_channel),
    .if_dout(s_in_4_V_loc_channel_dout),
    .if_empty_n(s_in_4_V_loc_channel_empty_n),
    .if_read(svm_classifier_Loop_Sum_loop_proc1_U0_ap_ready)
);

FIFO_svm_classifier_s_in_5_V_loc_channel s_in_5_V_loc_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(svm_classifier_Block_proc_U0_ap_return_5),
    .if_full_n(s_in_5_V_loc_channel_full_n),
    .if_write(ap_chn_write_svm_classifier_Block_proc_U0_s_in_5_V_loc_channel),
    .if_dout(s_in_5_V_loc_channel_dout),
    .if_empty_n(s_in_5_V_loc_channel_empty_n),
    .if_read(svm_classifier_Loop_Sum_loop_proc1_U0_ap_ready)
);

FIFO_svm_classifier_s_in_6_V_loc_channel s_in_6_V_loc_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(svm_classifier_Block_proc_U0_ap_return_6),
    .if_full_n(s_in_6_V_loc_channel_full_n),
    .if_write(ap_chn_write_svm_classifier_Block_proc_U0_s_in_6_V_loc_channel),
    .if_dout(s_in_6_V_loc_channel_dout),
    .if_empty_n(s_in_6_V_loc_channel_empty_n),
    .if_read(svm_classifier_Loop_Sum_loop_proc1_U0_ap_ready)
);

FIFO_svm_classifier_s_in_7_V_loc_channel s_in_7_V_loc_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(svm_classifier_Block_proc_U0_ap_return_7),
    .if_full_n(s_in_7_V_loc_channel_full_n),
    .if_write(ap_chn_write_svm_classifier_Block_proc_U0_s_in_7_V_loc_channel),
    .if_dout(s_in_7_V_loc_channel_dout),
    .if_empty_n(s_in_7_V_loc_channel_empty_n),
    .if_read(svm_classifier_Loop_Sum_loop_proc1_U0_ap_ready)
);

FIFO_svm_classifier_s_in_8_V_loc_channel s_in_8_V_loc_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(svm_classifier_Block_proc_U0_ap_return_8),
    .if_full_n(s_in_8_V_loc_channel_full_n),
    .if_write(ap_chn_write_svm_classifier_Block_proc_U0_s_in_8_V_loc_channel),
    .if_dout(s_in_8_V_loc_channel_dout),
    .if_empty_n(s_in_8_V_loc_channel_empty_n),
    .if_read(svm_classifier_Loop_Sum_loop_proc1_U0_ap_ready)
);

FIFO_svm_classifier_s_in_9_V_loc_channel s_in_9_V_loc_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(svm_classifier_Block_proc_U0_ap_return_9),
    .if_full_n(s_in_9_V_loc_channel_full_n),
    .if_write(ap_chn_write_svm_classifier_Block_proc_U0_s_in_9_V_loc_channel),
    .if_dout(s_in_9_V_loc_channel_dout),
    .if_empty_n(s_in_9_V_loc_channel_empty_n),
    .if_read(svm_classifier_Loop_Sum_loop_proc1_U0_ap_ready)
);

FIFO_svm_classifier_s_in_10_V_loc_channel s_in_10_V_loc_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(svm_classifier_Block_proc_U0_ap_return_10),
    .if_full_n(s_in_10_V_loc_channel_full_n),
    .if_write(ap_chn_write_svm_classifier_Block_proc_U0_s_in_10_V_loc_channel),
    .if_dout(s_in_10_V_loc_channel_dout),
    .if_empty_n(s_in_10_V_loc_channel_empty_n),
    .if_read(svm_classifier_Loop_Sum_loop_proc1_U0_ap_ready)
);

FIFO_svm_classifier_s_in_11_V_loc_channel s_in_11_V_loc_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(svm_classifier_Block_proc_U0_ap_return_11),
    .if_full_n(s_in_11_V_loc_channel_full_n),
    .if_write(ap_chn_write_svm_classifier_Block_proc_U0_s_in_11_V_loc_channel),
    .if_dout(s_in_11_V_loc_channel_dout),
    .if_empty_n(s_in_11_V_loc_channel_empty_n),
    .if_read(svm_classifier_Loop_Sum_loop_proc1_U0_ap_ready)
);

FIFO_svm_classifier_s_in_12_V_loc_channel s_in_12_V_loc_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(svm_classifier_Block_proc_U0_ap_return_12),
    .if_full_n(s_in_12_V_loc_channel_full_n),
    .if_write(ap_chn_write_svm_classifier_Block_proc_U0_s_in_12_V_loc_channel),
    .if_dout(s_in_12_V_loc_channel_dout),
    .if_empty_n(s_in_12_V_loc_channel_empty_n),
    .if_read(svm_classifier_Loop_Sum_loop_proc1_U0_ap_ready)
);

FIFO_svm_classifier_s_in_13_V_loc_channel s_in_13_V_loc_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(svm_classifier_Block_proc_U0_ap_return_13),
    .if_full_n(s_in_13_V_loc_channel_full_n),
    .if_write(ap_chn_write_svm_classifier_Block_proc_U0_s_in_13_V_loc_channel),
    .if_dout(s_in_13_V_loc_channel_dout),
    .if_empty_n(s_in_13_V_loc_channel_empty_n),
    .if_read(svm_classifier_Loop_Sum_loop_proc1_U0_ap_ready)
);

FIFO_svm_classifier_s_in_14_V_loc_channel s_in_14_V_loc_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(svm_classifier_Block_proc_U0_ap_return_14),
    .if_full_n(s_in_14_V_loc_channel_full_n),
    .if_write(ap_chn_write_svm_classifier_Block_proc_U0_s_in_14_V_loc_channel),
    .if_dout(s_in_14_V_loc_channel_dout),
    .if_empty_n(s_in_14_V_loc_channel_empty_n),
    .if_read(svm_classifier_Loop_Sum_loop_proc1_U0_ap_ready)
);

FIFO_svm_classifier_s_in_15_V_loc_channel s_in_15_V_loc_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(svm_classifier_Block_proc_U0_ap_return_15),
    .if_full_n(s_in_15_V_loc_channel_full_n),
    .if_write(ap_chn_write_svm_classifier_Block_proc_U0_s_in_15_V_loc_channel),
    .if_dout(s_in_15_V_loc_channel_dout),
    .if_empty_n(s_in_15_V_loc_channel_empty_n),
    .if_read(svm_classifier_Loop_Sum_loop_proc1_U0_ap_ready)
);

FIFO_svm_classifier_ch_sums_V_17_0_loc_channel ch_sums_V_17_0_loc_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_0),
    .if_full_n(ch_sums_V_17_0_loc_channel_full_n),
    .if_write(ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_17_0_loc_channel),
    .if_dout(ch_sums_V_17_0_loc_channel_dout),
    .if_empty_n(ch_sums_V_17_0_loc_channel_empty_n),
    .if_read(svm_classifier_Block_preheader_0_proc1_U0_ap_ready)
);

FIFO_svm_classifier_ch_sums_V_16_0_loc_channel ch_sums_V_16_0_loc_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_1),
    .if_full_n(ch_sums_V_16_0_loc_channel_full_n),
    .if_write(ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_16_0_loc_channel),
    .if_dout(ch_sums_V_16_0_loc_channel_dout),
    .if_empty_n(ch_sums_V_16_0_loc_channel_empty_n),
    .if_read(svm_classifier_Block_preheader_0_proc1_U0_ap_ready)
);

FIFO_svm_classifier_ch_sums_V_15_0_loc_channel ch_sums_V_15_0_loc_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_2),
    .if_full_n(ch_sums_V_15_0_loc_channel_full_n),
    .if_write(ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_15_0_loc_channel),
    .if_dout(ch_sums_V_15_0_loc_channel_dout),
    .if_empty_n(ch_sums_V_15_0_loc_channel_empty_n),
    .if_read(svm_classifier_Block_preheader_0_proc1_U0_ap_ready)
);

FIFO_svm_classifier_ch_sums_V_14_0_loc_channel ch_sums_V_14_0_loc_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_3),
    .if_full_n(ch_sums_V_14_0_loc_channel_full_n),
    .if_write(ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_14_0_loc_channel),
    .if_dout(ch_sums_V_14_0_loc_channel_dout),
    .if_empty_n(ch_sums_V_14_0_loc_channel_empty_n),
    .if_read(svm_classifier_Block_preheader_0_proc1_U0_ap_ready)
);

FIFO_svm_classifier_ch_sums_V_13_0_loc_channel ch_sums_V_13_0_loc_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_4),
    .if_full_n(ch_sums_V_13_0_loc_channel_full_n),
    .if_write(ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_13_0_loc_channel),
    .if_dout(ch_sums_V_13_0_loc_channel_dout),
    .if_empty_n(ch_sums_V_13_0_loc_channel_empty_n),
    .if_read(svm_classifier_Block_preheader_0_proc1_U0_ap_ready)
);

FIFO_svm_classifier_ch_sums_V_12_0_loc_channel ch_sums_V_12_0_loc_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_5),
    .if_full_n(ch_sums_V_12_0_loc_channel_full_n),
    .if_write(ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_12_0_loc_channel),
    .if_dout(ch_sums_V_12_0_loc_channel_dout),
    .if_empty_n(ch_sums_V_12_0_loc_channel_empty_n),
    .if_read(svm_classifier_Block_preheader_0_proc1_U0_ap_ready)
);

FIFO_svm_classifier_ch_sums_V_11_0_loc_channel ch_sums_V_11_0_loc_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_6),
    .if_full_n(ch_sums_V_11_0_loc_channel_full_n),
    .if_write(ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_11_0_loc_channel),
    .if_dout(ch_sums_V_11_0_loc_channel_dout),
    .if_empty_n(ch_sums_V_11_0_loc_channel_empty_n),
    .if_read(svm_classifier_Block_preheader_0_proc1_U0_ap_ready)
);

FIFO_svm_classifier_ch_sums_V_10_0_loc_channel ch_sums_V_10_0_loc_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_7),
    .if_full_n(ch_sums_V_10_0_loc_channel_full_n),
    .if_write(ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_10_0_loc_channel),
    .if_dout(ch_sums_V_10_0_loc_channel_dout),
    .if_empty_n(ch_sums_V_10_0_loc_channel_empty_n),
    .if_read(svm_classifier_Block_preheader_0_proc1_U0_ap_ready)
);

FIFO_svm_classifier_ch_sums_V_9_0_loc_channel ch_sums_V_9_0_loc_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_8),
    .if_full_n(ch_sums_V_9_0_loc_channel_full_n),
    .if_write(ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_9_0_loc_channel),
    .if_dout(ch_sums_V_9_0_loc_channel_dout),
    .if_empty_n(ch_sums_V_9_0_loc_channel_empty_n),
    .if_read(svm_classifier_Block_preheader_0_proc1_U0_ap_ready)
);

FIFO_svm_classifier_ch_sums_V_8_0_loc_channel ch_sums_V_8_0_loc_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_9),
    .if_full_n(ch_sums_V_8_0_loc_channel_full_n),
    .if_write(ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_8_0_loc_channel),
    .if_dout(ch_sums_V_8_0_loc_channel_dout),
    .if_empty_n(ch_sums_V_8_0_loc_channel_empty_n),
    .if_read(svm_classifier_Block_preheader_0_proc1_U0_ap_ready)
);

FIFO_svm_classifier_ch_sums_V_7_0_loc_channel ch_sums_V_7_0_loc_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_10),
    .if_full_n(ch_sums_V_7_0_loc_channel_full_n),
    .if_write(ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_7_0_loc_channel),
    .if_dout(ch_sums_V_7_0_loc_channel_dout),
    .if_empty_n(ch_sums_V_7_0_loc_channel_empty_n),
    .if_read(svm_classifier_Block_preheader_0_proc1_U0_ap_ready)
);

FIFO_svm_classifier_ch_sums_V_6_0_loc_channel ch_sums_V_6_0_loc_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_11),
    .if_full_n(ch_sums_V_6_0_loc_channel_full_n),
    .if_write(ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_6_0_loc_channel),
    .if_dout(ch_sums_V_6_0_loc_channel_dout),
    .if_empty_n(ch_sums_V_6_0_loc_channel_empty_n),
    .if_read(svm_classifier_Block_preheader_0_proc1_U0_ap_ready)
);

FIFO_svm_classifier_ch_sums_0_0_V_loc_channel ch_sums_0_0_V_loc_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_12),
    .if_full_n(ch_sums_0_0_V_loc_channel_full_n),
    .if_write(ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_0_0_V_loc_channel),
    .if_dout(ch_sums_0_0_V_loc_channel_dout),
    .if_empty_n(ch_sums_0_0_V_loc_channel_empty_n),
    .if_read(svm_classifier_Block_preheader_0_proc1_U0_ap_ready)
);

FIFO_svm_classifier_ch_sums_1_0_V_loc_channel ch_sums_1_0_V_loc_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_13),
    .if_full_n(ch_sums_1_0_V_loc_channel_full_n),
    .if_write(ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_1_0_V_loc_channel),
    .if_dout(ch_sums_1_0_V_loc_channel_dout),
    .if_empty_n(ch_sums_1_0_V_loc_channel_empty_n),
    .if_read(svm_classifier_Block_preheader_0_proc1_U0_ap_ready)
);

FIFO_svm_classifier_ch_sums_2_0_V_loc_channel ch_sums_2_0_V_loc_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_14),
    .if_full_n(ch_sums_2_0_V_loc_channel_full_n),
    .if_write(ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_2_0_V_loc_channel),
    .if_dout(ch_sums_2_0_V_loc_channel_dout),
    .if_empty_n(ch_sums_2_0_V_loc_channel_empty_n),
    .if_read(svm_classifier_Block_preheader_0_proc1_U0_ap_ready)
);

FIFO_svm_classifier_ch_sums_3_0_V_loc_channel ch_sums_3_0_V_loc_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_15),
    .if_full_n(ch_sums_3_0_V_loc_channel_full_n),
    .if_write(ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_3_0_V_loc_channel),
    .if_dout(ch_sums_3_0_V_loc_channel_dout),
    .if_empty_n(ch_sums_3_0_V_loc_channel_empty_n),
    .if_read(svm_classifier_Block_preheader_0_proc1_U0_ap_ready)
);

FIFO_svm_classifier_ch_sums_4_0_V_loc_channel ch_sums_4_0_V_loc_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_16),
    .if_full_n(ch_sums_4_0_V_loc_channel_full_n),
    .if_write(ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_4_0_V_loc_channel),
    .if_dout(ch_sums_4_0_V_loc_channel_dout),
    .if_empty_n(ch_sums_4_0_V_loc_channel_empty_n),
    .if_read(svm_classifier_Block_preheader_0_proc1_U0_ap_ready)
);

FIFO_svm_classifier_ch_sums_5_0_V_loc_channel ch_sums_5_0_V_loc_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_17),
    .if_full_n(ch_sums_5_0_V_loc_channel_full_n),
    .if_write(ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_5_0_V_loc_channel),
    .if_dout(ch_sums_5_0_V_loc_channel_dout),
    .if_empty_n(ch_sums_5_0_V_loc_channel_empty_n),
    .if_read(svm_classifier_Block_preheader_0_proc1_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ch_sums_0_0_V_loc_channel_full_n <= 1'b0;
    end else begin
        if (((1'b1 == svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) & (1'b1 == svm_classifier_Loop_Sum_loop_proc1_U0_ap_continue))) begin
            ap_reg_ch_sums_0_0_V_loc_channel_full_n <= 1'b0;
        end else if (((1'b1 == svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) & (1'b1 == ch_sums_0_0_V_loc_channel_full_n))) begin
            ap_reg_ch_sums_0_0_V_loc_channel_full_n <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ch_sums_1_0_V_loc_channel_full_n <= 1'b0;
    end else begin
        if (((1'b1 == svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) & (1'b1 == svm_classifier_Loop_Sum_loop_proc1_U0_ap_continue))) begin
            ap_reg_ch_sums_1_0_V_loc_channel_full_n <= 1'b0;
        end else if (((1'b1 == svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) & (1'b1 == ch_sums_1_0_V_loc_channel_full_n))) begin
            ap_reg_ch_sums_1_0_V_loc_channel_full_n <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ch_sums_2_0_V_loc_channel_full_n <= 1'b0;
    end else begin
        if (((1'b1 == svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) & (1'b1 == svm_classifier_Loop_Sum_loop_proc1_U0_ap_continue))) begin
            ap_reg_ch_sums_2_0_V_loc_channel_full_n <= 1'b0;
        end else if (((1'b1 == svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) & (1'b1 == ch_sums_2_0_V_loc_channel_full_n))) begin
            ap_reg_ch_sums_2_0_V_loc_channel_full_n <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ch_sums_3_0_V_loc_channel_full_n <= 1'b0;
    end else begin
        if (((1'b1 == svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) & (1'b1 == svm_classifier_Loop_Sum_loop_proc1_U0_ap_continue))) begin
            ap_reg_ch_sums_3_0_V_loc_channel_full_n <= 1'b0;
        end else if (((1'b1 == svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) & (1'b1 == ch_sums_3_0_V_loc_channel_full_n))) begin
            ap_reg_ch_sums_3_0_V_loc_channel_full_n <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ch_sums_4_0_V_loc_channel_full_n <= 1'b0;
    end else begin
        if (((1'b1 == svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) & (1'b1 == svm_classifier_Loop_Sum_loop_proc1_U0_ap_continue))) begin
            ap_reg_ch_sums_4_0_V_loc_channel_full_n <= 1'b0;
        end else if (((1'b1 == svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) & (1'b1 == ch_sums_4_0_V_loc_channel_full_n))) begin
            ap_reg_ch_sums_4_0_V_loc_channel_full_n <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ch_sums_5_0_V_loc_channel_full_n <= 1'b0;
    end else begin
        if (((1'b1 == svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) & (1'b1 == svm_classifier_Loop_Sum_loop_proc1_U0_ap_continue))) begin
            ap_reg_ch_sums_5_0_V_loc_channel_full_n <= 1'b0;
        end else if (((1'b1 == svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) & (1'b1 == ch_sums_5_0_V_loc_channel_full_n))) begin
            ap_reg_ch_sums_5_0_V_loc_channel_full_n <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ch_sums_V_10_0_loc_channel_full_n <= 1'b0;
    end else begin
        if (((1'b1 == svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) & (1'b1 == svm_classifier_Loop_Sum_loop_proc1_U0_ap_continue))) begin
            ap_reg_ch_sums_V_10_0_loc_channel_full_n <= 1'b0;
        end else if (((1'b1 == svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) & (1'b1 == ch_sums_V_10_0_loc_channel_full_n))) begin
            ap_reg_ch_sums_V_10_0_loc_channel_full_n <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ch_sums_V_11_0_loc_channel_full_n <= 1'b0;
    end else begin
        if (((1'b1 == svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) & (1'b1 == svm_classifier_Loop_Sum_loop_proc1_U0_ap_continue))) begin
            ap_reg_ch_sums_V_11_0_loc_channel_full_n <= 1'b0;
        end else if (((1'b1 == svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) & (1'b1 == ch_sums_V_11_0_loc_channel_full_n))) begin
            ap_reg_ch_sums_V_11_0_loc_channel_full_n <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ch_sums_V_12_0_loc_channel_full_n <= 1'b0;
    end else begin
        if (((1'b1 == svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) & (1'b1 == svm_classifier_Loop_Sum_loop_proc1_U0_ap_continue))) begin
            ap_reg_ch_sums_V_12_0_loc_channel_full_n <= 1'b0;
        end else if (((1'b1 == svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) & (1'b1 == ch_sums_V_12_0_loc_channel_full_n))) begin
            ap_reg_ch_sums_V_12_0_loc_channel_full_n <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ch_sums_V_13_0_loc_channel_full_n <= 1'b0;
    end else begin
        if (((1'b1 == svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) & (1'b1 == svm_classifier_Loop_Sum_loop_proc1_U0_ap_continue))) begin
            ap_reg_ch_sums_V_13_0_loc_channel_full_n <= 1'b0;
        end else if (((1'b1 == svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) & (1'b1 == ch_sums_V_13_0_loc_channel_full_n))) begin
            ap_reg_ch_sums_V_13_0_loc_channel_full_n <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ch_sums_V_14_0_loc_channel_full_n <= 1'b0;
    end else begin
        if (((1'b1 == svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) & (1'b1 == svm_classifier_Loop_Sum_loop_proc1_U0_ap_continue))) begin
            ap_reg_ch_sums_V_14_0_loc_channel_full_n <= 1'b0;
        end else if (((1'b1 == svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) & (1'b1 == ch_sums_V_14_0_loc_channel_full_n))) begin
            ap_reg_ch_sums_V_14_0_loc_channel_full_n <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ch_sums_V_15_0_loc_channel_full_n <= 1'b0;
    end else begin
        if (((1'b1 == svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) & (1'b1 == svm_classifier_Loop_Sum_loop_proc1_U0_ap_continue))) begin
            ap_reg_ch_sums_V_15_0_loc_channel_full_n <= 1'b0;
        end else if (((1'b1 == svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) & (1'b1 == ch_sums_V_15_0_loc_channel_full_n))) begin
            ap_reg_ch_sums_V_15_0_loc_channel_full_n <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ch_sums_V_16_0_loc_channel_full_n <= 1'b0;
    end else begin
        if (((1'b1 == svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) & (1'b1 == svm_classifier_Loop_Sum_loop_proc1_U0_ap_continue))) begin
            ap_reg_ch_sums_V_16_0_loc_channel_full_n <= 1'b0;
        end else if (((1'b1 == svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) & (1'b1 == ch_sums_V_16_0_loc_channel_full_n))) begin
            ap_reg_ch_sums_V_16_0_loc_channel_full_n <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ch_sums_V_17_0_loc_channel_full_n <= 1'b0;
    end else begin
        if (((1'b1 == svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) & (1'b1 == svm_classifier_Loop_Sum_loop_proc1_U0_ap_continue))) begin
            ap_reg_ch_sums_V_17_0_loc_channel_full_n <= 1'b0;
        end else if (((1'b1 == svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) & (1'b1 == ch_sums_V_17_0_loc_channel_full_n))) begin
            ap_reg_ch_sums_V_17_0_loc_channel_full_n <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ch_sums_V_6_0_loc_channel_full_n <= 1'b0;
    end else begin
        if (((1'b1 == svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) & (1'b1 == svm_classifier_Loop_Sum_loop_proc1_U0_ap_continue))) begin
            ap_reg_ch_sums_V_6_0_loc_channel_full_n <= 1'b0;
        end else if (((1'b1 == svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) & (1'b1 == ch_sums_V_6_0_loc_channel_full_n))) begin
            ap_reg_ch_sums_V_6_0_loc_channel_full_n <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ch_sums_V_7_0_loc_channel_full_n <= 1'b0;
    end else begin
        if (((1'b1 == svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) & (1'b1 == svm_classifier_Loop_Sum_loop_proc1_U0_ap_continue))) begin
            ap_reg_ch_sums_V_7_0_loc_channel_full_n <= 1'b0;
        end else if (((1'b1 == svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) & (1'b1 == ch_sums_V_7_0_loc_channel_full_n))) begin
            ap_reg_ch_sums_V_7_0_loc_channel_full_n <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ch_sums_V_8_0_loc_channel_full_n <= 1'b0;
    end else begin
        if (((1'b1 == svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) & (1'b1 == svm_classifier_Loop_Sum_loop_proc1_U0_ap_continue))) begin
            ap_reg_ch_sums_V_8_0_loc_channel_full_n <= 1'b0;
        end else if (((1'b1 == svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) & (1'b1 == ch_sums_V_8_0_loc_channel_full_n))) begin
            ap_reg_ch_sums_V_8_0_loc_channel_full_n <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ch_sums_V_9_0_loc_channel_full_n <= 1'b0;
    end else begin
        if (((1'b1 == svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) & (1'b1 == svm_classifier_Loop_Sum_loop_proc1_U0_ap_continue))) begin
            ap_reg_ch_sums_V_9_0_loc_channel_full_n <= 1'b0;
        end else if (((1'b1 == svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) & (1'b1 == ch_sums_V_9_0_loc_channel_full_n))) begin
            ap_reg_ch_sums_V_9_0_loc_channel_full_n <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_s_in_0_V_loc_channel_full_n <= 1'b0;
    end else begin
        if (((1'b1 == svm_classifier_Block_proc_U0_ap_done) & (1'b1 == svm_classifier_Block_proc_U0_ap_continue))) begin
            ap_reg_s_in_0_V_loc_channel_full_n <= 1'b0;
        end else if (((1'b1 == svm_classifier_Block_proc_U0_ap_done) & (1'b1 == s_in_0_V_loc_channel_full_n))) begin
            ap_reg_s_in_0_V_loc_channel_full_n <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_s_in_10_V_loc_channel_full_n <= 1'b0;
    end else begin
        if (((1'b1 == svm_classifier_Block_proc_U0_ap_done) & (1'b1 == svm_classifier_Block_proc_U0_ap_continue))) begin
            ap_reg_s_in_10_V_loc_channel_full_n <= 1'b0;
        end else if (((1'b1 == svm_classifier_Block_proc_U0_ap_done) & (1'b1 == s_in_10_V_loc_channel_full_n))) begin
            ap_reg_s_in_10_V_loc_channel_full_n <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_s_in_11_V_loc_channel_full_n <= 1'b0;
    end else begin
        if (((1'b1 == svm_classifier_Block_proc_U0_ap_done) & (1'b1 == svm_classifier_Block_proc_U0_ap_continue))) begin
            ap_reg_s_in_11_V_loc_channel_full_n <= 1'b0;
        end else if (((1'b1 == svm_classifier_Block_proc_U0_ap_done) & (1'b1 == s_in_11_V_loc_channel_full_n))) begin
            ap_reg_s_in_11_V_loc_channel_full_n <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_s_in_12_V_loc_channel_full_n <= 1'b0;
    end else begin
        if (((1'b1 == svm_classifier_Block_proc_U0_ap_done) & (1'b1 == svm_classifier_Block_proc_U0_ap_continue))) begin
            ap_reg_s_in_12_V_loc_channel_full_n <= 1'b0;
        end else if (((1'b1 == svm_classifier_Block_proc_U0_ap_done) & (1'b1 == s_in_12_V_loc_channel_full_n))) begin
            ap_reg_s_in_12_V_loc_channel_full_n <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_s_in_13_V_loc_channel_full_n <= 1'b0;
    end else begin
        if (((1'b1 == svm_classifier_Block_proc_U0_ap_done) & (1'b1 == svm_classifier_Block_proc_U0_ap_continue))) begin
            ap_reg_s_in_13_V_loc_channel_full_n <= 1'b0;
        end else if (((1'b1 == svm_classifier_Block_proc_U0_ap_done) & (1'b1 == s_in_13_V_loc_channel_full_n))) begin
            ap_reg_s_in_13_V_loc_channel_full_n <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_s_in_14_V_loc_channel_full_n <= 1'b0;
    end else begin
        if (((1'b1 == svm_classifier_Block_proc_U0_ap_done) & (1'b1 == svm_classifier_Block_proc_U0_ap_continue))) begin
            ap_reg_s_in_14_V_loc_channel_full_n <= 1'b0;
        end else if (((1'b1 == svm_classifier_Block_proc_U0_ap_done) & (1'b1 == s_in_14_V_loc_channel_full_n))) begin
            ap_reg_s_in_14_V_loc_channel_full_n <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_s_in_15_V_loc_channel_full_n <= 1'b0;
    end else begin
        if (((1'b1 == svm_classifier_Block_proc_U0_ap_done) & (1'b1 == svm_classifier_Block_proc_U0_ap_continue))) begin
            ap_reg_s_in_15_V_loc_channel_full_n <= 1'b0;
        end else if (((1'b1 == svm_classifier_Block_proc_U0_ap_done) & (1'b1 == s_in_15_V_loc_channel_full_n))) begin
            ap_reg_s_in_15_V_loc_channel_full_n <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_s_in_1_V_loc_channel_full_n <= 1'b0;
    end else begin
        if (((1'b1 == svm_classifier_Block_proc_U0_ap_done) & (1'b1 == svm_classifier_Block_proc_U0_ap_continue))) begin
            ap_reg_s_in_1_V_loc_channel_full_n <= 1'b0;
        end else if (((1'b1 == svm_classifier_Block_proc_U0_ap_done) & (1'b1 == s_in_1_V_loc_channel_full_n))) begin
            ap_reg_s_in_1_V_loc_channel_full_n <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_s_in_2_V_loc_channel_full_n <= 1'b0;
    end else begin
        if (((1'b1 == svm_classifier_Block_proc_U0_ap_done) & (1'b1 == svm_classifier_Block_proc_U0_ap_continue))) begin
            ap_reg_s_in_2_V_loc_channel_full_n <= 1'b0;
        end else if (((1'b1 == svm_classifier_Block_proc_U0_ap_done) & (1'b1 == s_in_2_V_loc_channel_full_n))) begin
            ap_reg_s_in_2_V_loc_channel_full_n <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_s_in_3_V_loc_channel_full_n <= 1'b0;
    end else begin
        if (((1'b1 == svm_classifier_Block_proc_U0_ap_done) & (1'b1 == svm_classifier_Block_proc_U0_ap_continue))) begin
            ap_reg_s_in_3_V_loc_channel_full_n <= 1'b0;
        end else if (((1'b1 == svm_classifier_Block_proc_U0_ap_done) & (1'b1 == s_in_3_V_loc_channel_full_n))) begin
            ap_reg_s_in_3_V_loc_channel_full_n <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_s_in_4_V_loc_channel_full_n <= 1'b0;
    end else begin
        if (((1'b1 == svm_classifier_Block_proc_U0_ap_done) & (1'b1 == svm_classifier_Block_proc_U0_ap_continue))) begin
            ap_reg_s_in_4_V_loc_channel_full_n <= 1'b0;
        end else if (((1'b1 == svm_classifier_Block_proc_U0_ap_done) & (1'b1 == s_in_4_V_loc_channel_full_n))) begin
            ap_reg_s_in_4_V_loc_channel_full_n <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_s_in_5_V_loc_channel_full_n <= 1'b0;
    end else begin
        if (((1'b1 == svm_classifier_Block_proc_U0_ap_done) & (1'b1 == svm_classifier_Block_proc_U0_ap_continue))) begin
            ap_reg_s_in_5_V_loc_channel_full_n <= 1'b0;
        end else if (((1'b1 == svm_classifier_Block_proc_U0_ap_done) & (1'b1 == s_in_5_V_loc_channel_full_n))) begin
            ap_reg_s_in_5_V_loc_channel_full_n <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_s_in_6_V_loc_channel_full_n <= 1'b0;
    end else begin
        if (((1'b1 == svm_classifier_Block_proc_U0_ap_done) & (1'b1 == svm_classifier_Block_proc_U0_ap_continue))) begin
            ap_reg_s_in_6_V_loc_channel_full_n <= 1'b0;
        end else if (((1'b1 == svm_classifier_Block_proc_U0_ap_done) & (1'b1 == s_in_6_V_loc_channel_full_n))) begin
            ap_reg_s_in_6_V_loc_channel_full_n <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_s_in_7_V_loc_channel_full_n <= 1'b0;
    end else begin
        if (((1'b1 == svm_classifier_Block_proc_U0_ap_done) & (1'b1 == svm_classifier_Block_proc_U0_ap_continue))) begin
            ap_reg_s_in_7_V_loc_channel_full_n <= 1'b0;
        end else if (((1'b1 == svm_classifier_Block_proc_U0_ap_done) & (1'b1 == s_in_7_V_loc_channel_full_n))) begin
            ap_reg_s_in_7_V_loc_channel_full_n <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_s_in_8_V_loc_channel_full_n <= 1'b0;
    end else begin
        if (((1'b1 == svm_classifier_Block_proc_U0_ap_done) & (1'b1 == svm_classifier_Block_proc_U0_ap_continue))) begin
            ap_reg_s_in_8_V_loc_channel_full_n <= 1'b0;
        end else if (((1'b1 == svm_classifier_Block_proc_U0_ap_done) & (1'b1 == s_in_8_V_loc_channel_full_n))) begin
            ap_reg_s_in_8_V_loc_channel_full_n <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_s_in_9_V_loc_channel_full_n <= 1'b0;
    end else begin
        if (((1'b1 == svm_classifier_Block_proc_U0_ap_done) & (1'b1 == svm_classifier_Block_proc_U0_ap_continue))) begin
            ap_reg_s_in_9_V_loc_channel_full_n <= 1'b0;
        end else if (((1'b1 == svm_classifier_Block_proc_U0_ap_done) & (1'b1 == s_in_9_V_loc_channel_full_n))) begin
            ap_reg_s_in_9_V_loc_channel_full_n <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        svm_classifier_Block_proc_U0_ap_start <= 1'b0;
    end else begin
        svm_classifier_Block_proc_U0_ap_start <= 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_s_in_0_V_loc_channel_full_n)) begin
        ap_chn_write_svm_classifier_Block_proc_U0_s_in_0_V_loc_channel = 1'b0;
    end else begin
        ap_chn_write_svm_classifier_Block_proc_U0_s_in_0_V_loc_channel = svm_classifier_Block_proc_U0_ap_done;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_s_in_10_V_loc_channel_full_n)) begin
        ap_chn_write_svm_classifier_Block_proc_U0_s_in_10_V_loc_channel = 1'b0;
    end else begin
        ap_chn_write_svm_classifier_Block_proc_U0_s_in_10_V_loc_channel = svm_classifier_Block_proc_U0_ap_done;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_s_in_11_V_loc_channel_full_n)) begin
        ap_chn_write_svm_classifier_Block_proc_U0_s_in_11_V_loc_channel = 1'b0;
    end else begin
        ap_chn_write_svm_classifier_Block_proc_U0_s_in_11_V_loc_channel = svm_classifier_Block_proc_U0_ap_done;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_s_in_12_V_loc_channel_full_n)) begin
        ap_chn_write_svm_classifier_Block_proc_U0_s_in_12_V_loc_channel = 1'b0;
    end else begin
        ap_chn_write_svm_classifier_Block_proc_U0_s_in_12_V_loc_channel = svm_classifier_Block_proc_U0_ap_done;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_s_in_13_V_loc_channel_full_n)) begin
        ap_chn_write_svm_classifier_Block_proc_U0_s_in_13_V_loc_channel = 1'b0;
    end else begin
        ap_chn_write_svm_classifier_Block_proc_U0_s_in_13_V_loc_channel = svm_classifier_Block_proc_U0_ap_done;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_s_in_14_V_loc_channel_full_n)) begin
        ap_chn_write_svm_classifier_Block_proc_U0_s_in_14_V_loc_channel = 1'b0;
    end else begin
        ap_chn_write_svm_classifier_Block_proc_U0_s_in_14_V_loc_channel = svm_classifier_Block_proc_U0_ap_done;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_s_in_15_V_loc_channel_full_n)) begin
        ap_chn_write_svm_classifier_Block_proc_U0_s_in_15_V_loc_channel = 1'b0;
    end else begin
        ap_chn_write_svm_classifier_Block_proc_U0_s_in_15_V_loc_channel = svm_classifier_Block_proc_U0_ap_done;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_s_in_1_V_loc_channel_full_n)) begin
        ap_chn_write_svm_classifier_Block_proc_U0_s_in_1_V_loc_channel = 1'b0;
    end else begin
        ap_chn_write_svm_classifier_Block_proc_U0_s_in_1_V_loc_channel = svm_classifier_Block_proc_U0_ap_done;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_s_in_2_V_loc_channel_full_n)) begin
        ap_chn_write_svm_classifier_Block_proc_U0_s_in_2_V_loc_channel = 1'b0;
    end else begin
        ap_chn_write_svm_classifier_Block_proc_U0_s_in_2_V_loc_channel = svm_classifier_Block_proc_U0_ap_done;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_s_in_3_V_loc_channel_full_n)) begin
        ap_chn_write_svm_classifier_Block_proc_U0_s_in_3_V_loc_channel = 1'b0;
    end else begin
        ap_chn_write_svm_classifier_Block_proc_U0_s_in_3_V_loc_channel = svm_classifier_Block_proc_U0_ap_done;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_s_in_4_V_loc_channel_full_n)) begin
        ap_chn_write_svm_classifier_Block_proc_U0_s_in_4_V_loc_channel = 1'b0;
    end else begin
        ap_chn_write_svm_classifier_Block_proc_U0_s_in_4_V_loc_channel = svm_classifier_Block_proc_U0_ap_done;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_s_in_5_V_loc_channel_full_n)) begin
        ap_chn_write_svm_classifier_Block_proc_U0_s_in_5_V_loc_channel = 1'b0;
    end else begin
        ap_chn_write_svm_classifier_Block_proc_U0_s_in_5_V_loc_channel = svm_classifier_Block_proc_U0_ap_done;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_s_in_6_V_loc_channel_full_n)) begin
        ap_chn_write_svm_classifier_Block_proc_U0_s_in_6_V_loc_channel = 1'b0;
    end else begin
        ap_chn_write_svm_classifier_Block_proc_U0_s_in_6_V_loc_channel = svm_classifier_Block_proc_U0_ap_done;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_s_in_7_V_loc_channel_full_n)) begin
        ap_chn_write_svm_classifier_Block_proc_U0_s_in_7_V_loc_channel = 1'b0;
    end else begin
        ap_chn_write_svm_classifier_Block_proc_U0_s_in_7_V_loc_channel = svm_classifier_Block_proc_U0_ap_done;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_s_in_8_V_loc_channel_full_n)) begin
        ap_chn_write_svm_classifier_Block_proc_U0_s_in_8_V_loc_channel = 1'b0;
    end else begin
        ap_chn_write_svm_classifier_Block_proc_U0_s_in_8_V_loc_channel = svm_classifier_Block_proc_U0_ap_done;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_s_in_9_V_loc_channel_full_n)) begin
        ap_chn_write_svm_classifier_Block_proc_U0_s_in_9_V_loc_channel = 1'b0;
    end else begin
        ap_chn_write_svm_classifier_Block_proc_U0_s_in_9_V_loc_channel = svm_classifier_Block_proc_U0_ap_done;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ch_sums_0_0_V_loc_channel_full_n)) begin
        ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_0_0_V_loc_channel = 1'b0;
    end else begin
        ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_0_0_V_loc_channel = svm_classifier_Loop_Sum_loop_proc1_U0_ap_done;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ch_sums_1_0_V_loc_channel_full_n)) begin
        ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_1_0_V_loc_channel = 1'b0;
    end else begin
        ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_1_0_V_loc_channel = svm_classifier_Loop_Sum_loop_proc1_U0_ap_done;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ch_sums_2_0_V_loc_channel_full_n)) begin
        ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_2_0_V_loc_channel = 1'b0;
    end else begin
        ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_2_0_V_loc_channel = svm_classifier_Loop_Sum_loop_proc1_U0_ap_done;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ch_sums_3_0_V_loc_channel_full_n)) begin
        ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_3_0_V_loc_channel = 1'b0;
    end else begin
        ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_3_0_V_loc_channel = svm_classifier_Loop_Sum_loop_proc1_U0_ap_done;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ch_sums_4_0_V_loc_channel_full_n)) begin
        ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_4_0_V_loc_channel = 1'b0;
    end else begin
        ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_4_0_V_loc_channel = svm_classifier_Loop_Sum_loop_proc1_U0_ap_done;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ch_sums_5_0_V_loc_channel_full_n)) begin
        ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_5_0_V_loc_channel = 1'b0;
    end else begin
        ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_5_0_V_loc_channel = svm_classifier_Loop_Sum_loop_proc1_U0_ap_done;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ch_sums_V_10_0_loc_channel_full_n)) begin
        ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_10_0_loc_channel = 1'b0;
    end else begin
        ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_10_0_loc_channel = svm_classifier_Loop_Sum_loop_proc1_U0_ap_done;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ch_sums_V_11_0_loc_channel_full_n)) begin
        ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_11_0_loc_channel = 1'b0;
    end else begin
        ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_11_0_loc_channel = svm_classifier_Loop_Sum_loop_proc1_U0_ap_done;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ch_sums_V_12_0_loc_channel_full_n)) begin
        ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_12_0_loc_channel = 1'b0;
    end else begin
        ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_12_0_loc_channel = svm_classifier_Loop_Sum_loop_proc1_U0_ap_done;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ch_sums_V_13_0_loc_channel_full_n)) begin
        ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_13_0_loc_channel = 1'b0;
    end else begin
        ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_13_0_loc_channel = svm_classifier_Loop_Sum_loop_proc1_U0_ap_done;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ch_sums_V_14_0_loc_channel_full_n)) begin
        ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_14_0_loc_channel = 1'b0;
    end else begin
        ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_14_0_loc_channel = svm_classifier_Loop_Sum_loop_proc1_U0_ap_done;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ch_sums_V_15_0_loc_channel_full_n)) begin
        ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_15_0_loc_channel = 1'b0;
    end else begin
        ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_15_0_loc_channel = svm_classifier_Loop_Sum_loop_proc1_U0_ap_done;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ch_sums_V_16_0_loc_channel_full_n)) begin
        ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_16_0_loc_channel = 1'b0;
    end else begin
        ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_16_0_loc_channel = svm_classifier_Loop_Sum_loop_proc1_U0_ap_done;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ch_sums_V_17_0_loc_channel_full_n)) begin
        ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_17_0_loc_channel = 1'b0;
    end else begin
        ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_17_0_loc_channel = svm_classifier_Loop_Sum_loop_proc1_U0_ap_done;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ch_sums_V_6_0_loc_channel_full_n)) begin
        ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_6_0_loc_channel = 1'b0;
    end else begin
        ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_6_0_loc_channel = svm_classifier_Loop_Sum_loop_proc1_U0_ap_done;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ch_sums_V_7_0_loc_channel_full_n)) begin
        ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_7_0_loc_channel = 1'b0;
    end else begin
        ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_7_0_loc_channel = svm_classifier_Loop_Sum_loop_proc1_U0_ap_done;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ch_sums_V_8_0_loc_channel_full_n)) begin
        ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_8_0_loc_channel = 1'b0;
    end else begin
        ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_8_0_loc_channel = svm_classifier_Loop_Sum_loop_proc1_U0_ap_done;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ch_sums_V_9_0_loc_channel_full_n)) begin
        ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_9_0_loc_channel = 1'b0;
    end else begin
        ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_9_0_loc_channel = svm_classifier_Loop_Sum_loop_proc1_U0_ap_done;
    end
end

always @ (*) begin
    if (((1'b1 == svm_classifier_svm_classifier_entry3_U0_ap_idle) & (1'b1 == svm_classifier_Block_proc_U0_ap_idle) & (1'b1 == svm_classifier_Loop_Sum_loop_proc1_U0_ap_idle) & (1'b1 == svm_classifier_Block_preheader_0_proc1_U0_ap_idle) & (1'b0 == s_in_0_V_loc_channel_empty_n) & (1'b0 == s_in_1_V_loc_channel_empty_n) & (1'b0 == s_in_2_V_loc_channel_empty_n) & (1'b0 == s_in_3_V_loc_channel_empty_n) & (1'b0 == s_in_4_V_loc_channel_empty_n) & (1'b0 == s_in_5_V_loc_channel_empty_n) & (1'b0 == s_in_6_V_loc_channel_empty_n) & (1'b0 == s_in_7_V_loc_channel_empty_n) & (1'b0 == s_in_8_V_loc_channel_empty_n) & (1'b0 == s_in_9_V_loc_channel_empty_n) & (1'b0 == s_in_10_V_loc_channel_empty_n) & (1'b0 == s_in_11_V_loc_channel_empty_n) & (1'b0 == s_in_12_V_loc_channel_empty_n) & (1'b0 == s_in_13_V_loc_channel_empty_n) & (1'b0 == s_in_14_V_loc_channel_empty_n) & (1'b0 == s_in_15_V_loc_channel_empty_n) & (1'b0 == ch_sums_V_17_0_loc_channel_empty_n) & (1'b0 == ch_sums_V_16_0_loc_channel_empty_n) & (1'b0 == ch_sums_V_15_0_loc_channel_empty_n) & (1'b0 == ch_sums_V_14_0_loc_channel_empty_n) & (1'b0 == ch_sums_V_13_0_loc_channel_empty_n) & (1'b0 == ch_sums_V_12_0_loc_channel_empty_n) & (1'b0 == ch_sums_V_11_0_loc_channel_empty_n) & (1'b0 == ch_sums_V_10_0_loc_channel_empty_n) & (1'b0 == ch_sums_V_9_0_loc_channel_empty_n) & (1'b0 == ch_sums_V_8_0_loc_channel_empty_n) & (1'b0 == ch_sums_V_7_0_loc_channel_empty_n) & (1'b0 == ch_sums_V_6_0_loc_channel_empty_n) & (1'b0 == ch_sums_0_0_V_loc_channel_empty_n) & (1'b0 == ch_sums_1_0_V_loc_channel_empty_n) & (1'b0 == ch_sums_2_0_V_loc_channel_empty_n) & (1'b0 == ch_sums_3_0_V_loc_channel_empty_n) & (1'b0 == ch_sums_4_0_V_loc_channel_empty_n) & (1'b0 == ch_sums_5_0_V_loc_channel_empty_n))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ch_sums_0_0_V_loc_channel_full_n)) begin
        ap_sig_ch_sums_0_0_V_loc_channel_full_n = ch_sums_0_0_V_loc_channel_full_n;
    end else begin
        ap_sig_ch_sums_0_0_V_loc_channel_full_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ch_sums_1_0_V_loc_channel_full_n)) begin
        ap_sig_ch_sums_1_0_V_loc_channel_full_n = ch_sums_1_0_V_loc_channel_full_n;
    end else begin
        ap_sig_ch_sums_1_0_V_loc_channel_full_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ch_sums_2_0_V_loc_channel_full_n)) begin
        ap_sig_ch_sums_2_0_V_loc_channel_full_n = ch_sums_2_0_V_loc_channel_full_n;
    end else begin
        ap_sig_ch_sums_2_0_V_loc_channel_full_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ch_sums_3_0_V_loc_channel_full_n)) begin
        ap_sig_ch_sums_3_0_V_loc_channel_full_n = ch_sums_3_0_V_loc_channel_full_n;
    end else begin
        ap_sig_ch_sums_3_0_V_loc_channel_full_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ch_sums_4_0_V_loc_channel_full_n)) begin
        ap_sig_ch_sums_4_0_V_loc_channel_full_n = ch_sums_4_0_V_loc_channel_full_n;
    end else begin
        ap_sig_ch_sums_4_0_V_loc_channel_full_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ch_sums_5_0_V_loc_channel_full_n)) begin
        ap_sig_ch_sums_5_0_V_loc_channel_full_n = ch_sums_5_0_V_loc_channel_full_n;
    end else begin
        ap_sig_ch_sums_5_0_V_loc_channel_full_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ch_sums_V_10_0_loc_channel_full_n)) begin
        ap_sig_ch_sums_V_10_0_loc_channel_full_n = ch_sums_V_10_0_loc_channel_full_n;
    end else begin
        ap_sig_ch_sums_V_10_0_loc_channel_full_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ch_sums_V_11_0_loc_channel_full_n)) begin
        ap_sig_ch_sums_V_11_0_loc_channel_full_n = ch_sums_V_11_0_loc_channel_full_n;
    end else begin
        ap_sig_ch_sums_V_11_0_loc_channel_full_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ch_sums_V_12_0_loc_channel_full_n)) begin
        ap_sig_ch_sums_V_12_0_loc_channel_full_n = ch_sums_V_12_0_loc_channel_full_n;
    end else begin
        ap_sig_ch_sums_V_12_0_loc_channel_full_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ch_sums_V_13_0_loc_channel_full_n)) begin
        ap_sig_ch_sums_V_13_0_loc_channel_full_n = ch_sums_V_13_0_loc_channel_full_n;
    end else begin
        ap_sig_ch_sums_V_13_0_loc_channel_full_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ch_sums_V_14_0_loc_channel_full_n)) begin
        ap_sig_ch_sums_V_14_0_loc_channel_full_n = ch_sums_V_14_0_loc_channel_full_n;
    end else begin
        ap_sig_ch_sums_V_14_0_loc_channel_full_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ch_sums_V_15_0_loc_channel_full_n)) begin
        ap_sig_ch_sums_V_15_0_loc_channel_full_n = ch_sums_V_15_0_loc_channel_full_n;
    end else begin
        ap_sig_ch_sums_V_15_0_loc_channel_full_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ch_sums_V_16_0_loc_channel_full_n)) begin
        ap_sig_ch_sums_V_16_0_loc_channel_full_n = ch_sums_V_16_0_loc_channel_full_n;
    end else begin
        ap_sig_ch_sums_V_16_0_loc_channel_full_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ch_sums_V_17_0_loc_channel_full_n)) begin
        ap_sig_ch_sums_V_17_0_loc_channel_full_n = ch_sums_V_17_0_loc_channel_full_n;
    end else begin
        ap_sig_ch_sums_V_17_0_loc_channel_full_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ch_sums_V_6_0_loc_channel_full_n)) begin
        ap_sig_ch_sums_V_6_0_loc_channel_full_n = ch_sums_V_6_0_loc_channel_full_n;
    end else begin
        ap_sig_ch_sums_V_6_0_loc_channel_full_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ch_sums_V_7_0_loc_channel_full_n)) begin
        ap_sig_ch_sums_V_7_0_loc_channel_full_n = ch_sums_V_7_0_loc_channel_full_n;
    end else begin
        ap_sig_ch_sums_V_7_0_loc_channel_full_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ch_sums_V_8_0_loc_channel_full_n)) begin
        ap_sig_ch_sums_V_8_0_loc_channel_full_n = ch_sums_V_8_0_loc_channel_full_n;
    end else begin
        ap_sig_ch_sums_V_8_0_loc_channel_full_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ch_sums_V_9_0_loc_channel_full_n)) begin
        ap_sig_ch_sums_V_9_0_loc_channel_full_n = ch_sums_V_9_0_loc_channel_full_n;
    end else begin
        ap_sig_ch_sums_V_9_0_loc_channel_full_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == svm_classifier_Block_preheader_0_proc1_U0_ap_done)) begin
        ap_sig_hs_done = 1'b1;
    end else begin
        ap_sig_hs_done = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_s_in_0_V_loc_channel_full_n)) begin
        ap_sig_s_in_0_V_loc_channel_full_n = s_in_0_V_loc_channel_full_n;
    end else begin
        ap_sig_s_in_0_V_loc_channel_full_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_s_in_10_V_loc_channel_full_n)) begin
        ap_sig_s_in_10_V_loc_channel_full_n = s_in_10_V_loc_channel_full_n;
    end else begin
        ap_sig_s_in_10_V_loc_channel_full_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_s_in_11_V_loc_channel_full_n)) begin
        ap_sig_s_in_11_V_loc_channel_full_n = s_in_11_V_loc_channel_full_n;
    end else begin
        ap_sig_s_in_11_V_loc_channel_full_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_s_in_12_V_loc_channel_full_n)) begin
        ap_sig_s_in_12_V_loc_channel_full_n = s_in_12_V_loc_channel_full_n;
    end else begin
        ap_sig_s_in_12_V_loc_channel_full_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_s_in_13_V_loc_channel_full_n)) begin
        ap_sig_s_in_13_V_loc_channel_full_n = s_in_13_V_loc_channel_full_n;
    end else begin
        ap_sig_s_in_13_V_loc_channel_full_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_s_in_14_V_loc_channel_full_n)) begin
        ap_sig_s_in_14_V_loc_channel_full_n = s_in_14_V_loc_channel_full_n;
    end else begin
        ap_sig_s_in_14_V_loc_channel_full_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_s_in_15_V_loc_channel_full_n)) begin
        ap_sig_s_in_15_V_loc_channel_full_n = s_in_15_V_loc_channel_full_n;
    end else begin
        ap_sig_s_in_15_V_loc_channel_full_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_s_in_1_V_loc_channel_full_n)) begin
        ap_sig_s_in_1_V_loc_channel_full_n = s_in_1_V_loc_channel_full_n;
    end else begin
        ap_sig_s_in_1_V_loc_channel_full_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_s_in_2_V_loc_channel_full_n)) begin
        ap_sig_s_in_2_V_loc_channel_full_n = s_in_2_V_loc_channel_full_n;
    end else begin
        ap_sig_s_in_2_V_loc_channel_full_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_s_in_3_V_loc_channel_full_n)) begin
        ap_sig_s_in_3_V_loc_channel_full_n = s_in_3_V_loc_channel_full_n;
    end else begin
        ap_sig_s_in_3_V_loc_channel_full_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_s_in_4_V_loc_channel_full_n)) begin
        ap_sig_s_in_4_V_loc_channel_full_n = s_in_4_V_loc_channel_full_n;
    end else begin
        ap_sig_s_in_4_V_loc_channel_full_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_s_in_5_V_loc_channel_full_n)) begin
        ap_sig_s_in_5_V_loc_channel_full_n = s_in_5_V_loc_channel_full_n;
    end else begin
        ap_sig_s_in_5_V_loc_channel_full_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_s_in_6_V_loc_channel_full_n)) begin
        ap_sig_s_in_6_V_loc_channel_full_n = s_in_6_V_loc_channel_full_n;
    end else begin
        ap_sig_s_in_6_V_loc_channel_full_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_s_in_7_V_loc_channel_full_n)) begin
        ap_sig_s_in_7_V_loc_channel_full_n = s_in_7_V_loc_channel_full_n;
    end else begin
        ap_sig_s_in_7_V_loc_channel_full_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_s_in_8_V_loc_channel_full_n)) begin
        ap_sig_s_in_8_V_loc_channel_full_n = s_in_8_V_loc_channel_full_n;
    end else begin
        ap_sig_s_in_8_V_loc_channel_full_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_s_in_9_V_loc_channel_full_n)) begin
        ap_sig_s_in_9_V_loc_channel_full_n = s_in_9_V_loc_channel_full_n;
    end else begin
        ap_sig_s_in_9_V_loc_channel_full_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_s_in_11_V_loc_channel_full_n) & (1'b1 == ap_sig_s_in_9_V_loc_channel_full_n) & (1'b1 == ap_sig_s_in_4_V_loc_channel_full_n) & (1'b1 == ap_sig_s_in_3_V_loc_channel_full_n) & (1'b1 == ap_sig_s_in_1_V_loc_channel_full_n) & (1'b1 == ap_sig_s_in_10_V_loc_channel_full_n) & (1'b1 == ap_sig_s_in_0_V_loc_channel_full_n) & (1'b1 == ap_sig_s_in_8_V_loc_channel_full_n) & (1'b1 == ap_sig_s_in_5_V_loc_channel_full_n) & (1'b1 == ap_sig_s_in_12_V_loc_channel_full_n) & (1'b1 == ap_sig_s_in_7_V_loc_channel_full_n) & (1'b1 == ap_sig_s_in_6_V_loc_channel_full_n) & (1'b1 == ap_sig_s_in_2_V_loc_channel_full_n) & (1'b1 == ap_sig_s_in_13_V_loc_channel_full_n) & (1'b1 == ap_sig_s_in_14_V_loc_channel_full_n) & (1'b1 == ap_sig_s_in_15_V_loc_channel_full_n))) begin
        svm_classifier_Block_proc_U0_ap_continue = 1'b1;
    end else begin
        svm_classifier_Block_proc_U0_ap_continue = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_ch_sums_V_14_0_loc_channel_full_n) & (1'b1 == ap_sig_ch_sums_V_17_0_loc_channel_full_n) & (1'b1 == ap_sig_ch_sums_V_16_0_loc_channel_full_n) & (1'b1 == ap_sig_ch_sums_V_15_0_loc_channel_full_n) & (1'b1 == ap_sig_ch_sums_V_13_0_loc_channel_full_n) & (1'b1 == ap_sig_ch_sums_V_12_0_loc_channel_full_n) & (1'b1 == ap_sig_ch_sums_V_11_0_loc_channel_full_n) & (1'b1 == ap_sig_ch_sums_V_10_0_loc_channel_full_n) & (1'b1 == ap_sig_ch_sums_V_9_0_loc_channel_full_n) & (1'b1 == ap_sig_ch_sums_V_8_0_loc_channel_full_n) & (1'b1 == ap_sig_ch_sums_V_7_0_loc_channel_full_n) & (1'b1 == ap_sig_ch_sums_V_6_0_loc_channel_full_n) & (1'b1 == ap_sig_ch_sums_0_0_V_loc_channel_full_n) & (1'b1 == ap_sig_ch_sums_1_0_V_loc_channel_full_n) & (1'b1 == ap_sig_ch_sums_2_0_V_loc_channel_full_n) & (1'b1 == ap_sig_ch_sums_3_0_V_loc_channel_full_n) & (1'b1 == ap_sig_ch_sums_4_0_V_loc_channel_full_n) & (1'b1 == ap_sig_ch_sums_5_0_V_loc_channel_full_n))) begin
        svm_classifier_Loop_Sum_loop_proc1_U0_ap_continue = 1'b1;
    end else begin
        svm_classifier_Loop_Sum_loop_proc1_U0_ap_continue = 1'b0;
    end
end

assign ap_done = ap_sig_hs_done;

assign ap_ready = svm_classifier_svm_classifier_entry3_U0_ap_ready;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sig_hs_continue = 1'b1;

assign ap_sig_hs_ready = svm_classifier_svm_classifier_entry3_U0_ap_ready;

assign out_r = svm_classifier_Block_preheader_0_proc1_U0_out_r;

assign svm_classifier_Block_preheader_0_proc1_U0_ap_continue = 1'b1;

assign svm_classifier_Block_preheader_0_proc1_U0_ap_start = (ch_sums_V_17_0_loc_channel_empty_n & ch_sums_V_16_0_loc_channel_empty_n & ch_sums_V_15_0_loc_channel_empty_n & ch_sums_V_14_0_loc_channel_empty_n & ch_sums_V_13_0_loc_channel_empty_n & ch_sums_V_12_0_loc_channel_empty_n & ch_sums_V_11_0_loc_channel_empty_n & ch_sums_V_10_0_loc_channel_empty_n & ch_sums_V_9_0_loc_channel_empty_n & ch_sums_V_8_0_loc_channel_empty_n & ch_sums_V_7_0_loc_channel_empty_n & ch_sums_V_6_0_loc_channel_empty_n & ch_sums_0_0_V_loc_channel_empty_n & ch_sums_1_0_V_loc_channel_empty_n & ch_sums_2_0_V_loc_channel_empty_n & ch_sums_3_0_V_loc_channel_empty_n & ch_sums_4_0_V_loc_channel_empty_n & ch_sums_5_0_V_loc_channel_empty_n);

assign svm_classifier_Loop_Sum_loop_proc1_U0_ap_start = (s_in_0_V_loc_channel_empty_n & s_in_1_V_loc_channel_empty_n & s_in_2_V_loc_channel_empty_n & s_in_3_V_loc_channel_empty_n & s_in_4_V_loc_channel_empty_n & s_in_5_V_loc_channel_empty_n & s_in_6_V_loc_channel_empty_n & s_in_7_V_loc_channel_empty_n & s_in_8_V_loc_channel_empty_n & s_in_9_V_loc_channel_empty_n & s_in_10_V_loc_channel_empty_n & s_in_11_V_loc_channel_empty_n & s_in_12_V_loc_channel_empty_n & s_in_13_V_loc_channel_empty_n & s_in_14_V_loc_channel_empty_n & s_in_15_V_loc_channel_empty_n);

assign svm_classifier_svm_classifier_entry3_U0_ap_continue = 1'b1;

assign svm_classifier_svm_classifier_entry3_U0_ap_start = ap_start;

endmodule //svm_classifier
