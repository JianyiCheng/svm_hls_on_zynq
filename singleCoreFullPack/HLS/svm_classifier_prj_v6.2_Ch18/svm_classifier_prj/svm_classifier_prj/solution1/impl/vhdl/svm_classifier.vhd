-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.2
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity svm_classifier is
generic (
    C_S_AXI_AXILITES_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_AXILITES_DATA_WIDTH : INTEGER := 32 );
port (
    s_axi_AXILiteS_AWVALID : IN STD_LOGIC;
    s_axi_AXILiteS_AWREADY : OUT STD_LOGIC;
    s_axi_AXILiteS_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_ADDR_WIDTH-1 downto 0);
    s_axi_AXILiteS_WVALID : IN STD_LOGIC;
    s_axi_AXILiteS_WREADY : OUT STD_LOGIC;
    s_axi_AXILiteS_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH-1 downto 0);
    s_axi_AXILiteS_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH/8-1 downto 0);
    s_axi_AXILiteS_ARVALID : IN STD_LOGIC;
    s_axi_AXILiteS_ARREADY : OUT STD_LOGIC;
    s_axi_AXILiteS_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_ADDR_WIDTH-1 downto 0);
    s_axi_AXILiteS_RVALID : OUT STD_LOGIC;
    s_axi_AXILiteS_RREADY : IN STD_LOGIC;
    s_axi_AXILiteS_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH-1 downto 0);
    s_axi_AXILiteS_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_AXILiteS_BVALID : OUT STD_LOGIC;
    s_axi_AXILiteS_BREADY : IN STD_LOGIC;
    s_axi_AXILiteS_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    interrupt : OUT STD_LOGIC );
end;


architecture behav of svm_classifier is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "svm_classifier,hls_ip_2016_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=8.607490,HLS_SYN_LAT=90,HLS_SYN_TPT=87,HLS_SYN_MEM=126,HLS_SYN_DSP=216,HLS_SYN_FF=25568,HLS_SYN_LUT=49511}";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_S_AXI_WSTRB_WIDTH : INTEGER range 63 downto 0 := 4;
    constant C_S_AXI_ADDR_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_true : BOOLEAN := true;

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_ready : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal in_V : STD_LOGIC_VECTOR (255 downto 0);
    signal out_r : STD_LOGIC;
    signal svm_classifier_svm_classifier_entry3_U0_ap_start : STD_LOGIC;
    signal svm_classifier_svm_classifier_entry3_U0_ap_done : STD_LOGIC;
    signal svm_classifier_svm_classifier_entry3_U0_ap_continue : STD_LOGIC;
    signal svm_classifier_svm_classifier_entry3_U0_ap_idle : STD_LOGIC;
    signal svm_classifier_svm_classifier_entry3_U0_ap_ready : STD_LOGIC;
    signal svm_classifier_svm_classifier_entry3_U0_in_V_out_din : STD_LOGIC_VECTOR (255 downto 0);
    signal svm_classifier_svm_classifier_entry3_U0_in_V_out_write : STD_LOGIC;
    signal svm_classifier_Block_proc_U0_ap_start : STD_LOGIC := '0';
    signal svm_classifier_Block_proc_U0_ap_done : STD_LOGIC;
    signal svm_classifier_Block_proc_U0_ap_continue : STD_LOGIC;
    signal svm_classifier_Block_proc_U0_ap_idle : STD_LOGIC;
    signal svm_classifier_Block_proc_U0_ap_ready : STD_LOGIC;
    signal svm_classifier_Block_proc_U0_in_V_read : STD_LOGIC;
    signal svm_classifier_Block_proc_U0_ap_return_0 : STD_LOGIC_VECTOR (12 downto 0);
    signal svm_classifier_Block_proc_U0_ap_return_1 : STD_LOGIC_VECTOR (12 downto 0);
    signal svm_classifier_Block_proc_U0_ap_return_2 : STD_LOGIC_VECTOR (12 downto 0);
    signal svm_classifier_Block_proc_U0_ap_return_3 : STD_LOGIC_VECTOR (12 downto 0);
    signal svm_classifier_Block_proc_U0_ap_return_4 : STD_LOGIC_VECTOR (12 downto 0);
    signal svm_classifier_Block_proc_U0_ap_return_5 : STD_LOGIC_VECTOR (12 downto 0);
    signal svm_classifier_Block_proc_U0_ap_return_6 : STD_LOGIC_VECTOR (12 downto 0);
    signal svm_classifier_Block_proc_U0_ap_return_7 : STD_LOGIC_VECTOR (12 downto 0);
    signal svm_classifier_Block_proc_U0_ap_return_8 : STD_LOGIC_VECTOR (12 downto 0);
    signal svm_classifier_Block_proc_U0_ap_return_9 : STD_LOGIC_VECTOR (12 downto 0);
    signal svm_classifier_Block_proc_U0_ap_return_10 : STD_LOGIC_VECTOR (12 downto 0);
    signal svm_classifier_Block_proc_U0_ap_return_11 : STD_LOGIC_VECTOR (12 downto 0);
    signal svm_classifier_Block_proc_U0_ap_return_12 : STD_LOGIC_VECTOR (12 downto 0);
    signal svm_classifier_Block_proc_U0_ap_return_13 : STD_LOGIC_VECTOR (12 downto 0);
    signal svm_classifier_Block_proc_U0_ap_return_14 : STD_LOGIC_VECTOR (12 downto 0);
    signal svm_classifier_Block_proc_U0_ap_return_15 : STD_LOGIC_VECTOR (12 downto 0);
    signal s_in_11_V_loc_channel_full_n : STD_LOGIC;
    signal ap_reg_s_in_11_V_loc_channel_full_n : STD_LOGIC := '0';
    signal ap_sig_s_in_11_V_loc_channel_full_n : STD_LOGIC;
    signal ap_chn_write_svm_classifier_Block_proc_U0_s_in_11_V_loc_channel : STD_LOGIC;
    signal s_in_9_V_loc_channel_full_n : STD_LOGIC;
    signal ap_reg_s_in_9_V_loc_channel_full_n : STD_LOGIC := '0';
    signal ap_sig_s_in_9_V_loc_channel_full_n : STD_LOGIC;
    signal ap_chn_write_svm_classifier_Block_proc_U0_s_in_9_V_loc_channel : STD_LOGIC;
    signal s_in_4_V_loc_channel_full_n : STD_LOGIC;
    signal ap_reg_s_in_4_V_loc_channel_full_n : STD_LOGIC := '0';
    signal ap_sig_s_in_4_V_loc_channel_full_n : STD_LOGIC;
    signal ap_chn_write_svm_classifier_Block_proc_U0_s_in_4_V_loc_channel : STD_LOGIC;
    signal s_in_3_V_loc_channel_full_n : STD_LOGIC;
    signal ap_reg_s_in_3_V_loc_channel_full_n : STD_LOGIC := '0';
    signal ap_sig_s_in_3_V_loc_channel_full_n : STD_LOGIC;
    signal ap_chn_write_svm_classifier_Block_proc_U0_s_in_3_V_loc_channel : STD_LOGIC;
    signal s_in_1_V_loc_channel_full_n : STD_LOGIC;
    signal ap_reg_s_in_1_V_loc_channel_full_n : STD_LOGIC := '0';
    signal ap_sig_s_in_1_V_loc_channel_full_n : STD_LOGIC;
    signal ap_chn_write_svm_classifier_Block_proc_U0_s_in_1_V_loc_channel : STD_LOGIC;
    signal s_in_10_V_loc_channel_full_n : STD_LOGIC;
    signal ap_reg_s_in_10_V_loc_channel_full_n : STD_LOGIC := '0';
    signal ap_sig_s_in_10_V_loc_channel_full_n : STD_LOGIC;
    signal ap_chn_write_svm_classifier_Block_proc_U0_s_in_10_V_loc_channel : STD_LOGIC;
    signal s_in_0_V_loc_channel_full_n : STD_LOGIC;
    signal ap_reg_s_in_0_V_loc_channel_full_n : STD_LOGIC := '0';
    signal ap_sig_s_in_0_V_loc_channel_full_n : STD_LOGIC;
    signal ap_chn_write_svm_classifier_Block_proc_U0_s_in_0_V_loc_channel : STD_LOGIC;
    signal s_in_8_V_loc_channel_full_n : STD_LOGIC;
    signal ap_reg_s_in_8_V_loc_channel_full_n : STD_LOGIC := '0';
    signal ap_sig_s_in_8_V_loc_channel_full_n : STD_LOGIC;
    signal ap_chn_write_svm_classifier_Block_proc_U0_s_in_8_V_loc_channel : STD_LOGIC;
    signal s_in_5_V_loc_channel_full_n : STD_LOGIC;
    signal ap_reg_s_in_5_V_loc_channel_full_n : STD_LOGIC := '0';
    signal ap_sig_s_in_5_V_loc_channel_full_n : STD_LOGIC;
    signal ap_chn_write_svm_classifier_Block_proc_U0_s_in_5_V_loc_channel : STD_LOGIC;
    signal s_in_12_V_loc_channel_full_n : STD_LOGIC;
    signal ap_reg_s_in_12_V_loc_channel_full_n : STD_LOGIC := '0';
    signal ap_sig_s_in_12_V_loc_channel_full_n : STD_LOGIC;
    signal ap_chn_write_svm_classifier_Block_proc_U0_s_in_12_V_loc_channel : STD_LOGIC;
    signal s_in_7_V_loc_channel_full_n : STD_LOGIC;
    signal ap_reg_s_in_7_V_loc_channel_full_n : STD_LOGIC := '0';
    signal ap_sig_s_in_7_V_loc_channel_full_n : STD_LOGIC;
    signal ap_chn_write_svm_classifier_Block_proc_U0_s_in_7_V_loc_channel : STD_LOGIC;
    signal s_in_6_V_loc_channel_full_n : STD_LOGIC;
    signal ap_reg_s_in_6_V_loc_channel_full_n : STD_LOGIC := '0';
    signal ap_sig_s_in_6_V_loc_channel_full_n : STD_LOGIC;
    signal ap_chn_write_svm_classifier_Block_proc_U0_s_in_6_V_loc_channel : STD_LOGIC;
    signal s_in_2_V_loc_channel_full_n : STD_LOGIC;
    signal ap_reg_s_in_2_V_loc_channel_full_n : STD_LOGIC := '0';
    signal ap_sig_s_in_2_V_loc_channel_full_n : STD_LOGIC;
    signal ap_chn_write_svm_classifier_Block_proc_U0_s_in_2_V_loc_channel : STD_LOGIC;
    signal s_in_13_V_loc_channel_full_n : STD_LOGIC;
    signal ap_reg_s_in_13_V_loc_channel_full_n : STD_LOGIC := '0';
    signal ap_sig_s_in_13_V_loc_channel_full_n : STD_LOGIC;
    signal ap_chn_write_svm_classifier_Block_proc_U0_s_in_13_V_loc_channel : STD_LOGIC;
    signal s_in_14_V_loc_channel_full_n : STD_LOGIC;
    signal ap_reg_s_in_14_V_loc_channel_full_n : STD_LOGIC := '0';
    signal ap_sig_s_in_14_V_loc_channel_full_n : STD_LOGIC;
    signal ap_chn_write_svm_classifier_Block_proc_U0_s_in_14_V_loc_channel : STD_LOGIC;
    signal s_in_15_V_loc_channel_full_n : STD_LOGIC;
    signal ap_reg_s_in_15_V_loc_channel_full_n : STD_LOGIC := '0';
    signal ap_sig_s_in_15_V_loc_channel_full_n : STD_LOGIC;
    signal ap_chn_write_svm_classifier_Block_proc_U0_s_in_15_V_loc_channel : STD_LOGIC;
    signal svm_classifier_Loop_Sum_loop_proc1_U0_ap_start : STD_LOGIC;
    signal svm_classifier_Loop_Sum_loop_proc1_U0_ap_done : STD_LOGIC;
    signal svm_classifier_Loop_Sum_loop_proc1_U0_ap_continue : STD_LOGIC;
    signal svm_classifier_Loop_Sum_loop_proc1_U0_ap_idle : STD_LOGIC;
    signal svm_classifier_Loop_Sum_loop_proc1_U0_ap_ready : STD_LOGIC;
    signal svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_0 : STD_LOGIC_VECTOR (17 downto 0);
    signal svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_1 : STD_LOGIC_VECTOR (17 downto 0);
    signal svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_2 : STD_LOGIC_VECTOR (17 downto 0);
    signal svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_3 : STD_LOGIC_VECTOR (17 downto 0);
    signal svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_4 : STD_LOGIC_VECTOR (17 downto 0);
    signal svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_5 : STD_LOGIC_VECTOR (17 downto 0);
    signal svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_6 : STD_LOGIC_VECTOR (17 downto 0);
    signal svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_7 : STD_LOGIC_VECTOR (17 downto 0);
    signal svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_8 : STD_LOGIC_VECTOR (17 downto 0);
    signal svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_9 : STD_LOGIC_VECTOR (17 downto 0);
    signal svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_10 : STD_LOGIC_VECTOR (17 downto 0);
    signal svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_11 : STD_LOGIC_VECTOR (17 downto 0);
    signal svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_12 : STD_LOGIC_VECTOR (17 downto 0);
    signal svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_13 : STD_LOGIC_VECTOR (17 downto 0);
    signal svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_14 : STD_LOGIC_VECTOR (17 downto 0);
    signal svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_15 : STD_LOGIC_VECTOR (17 downto 0);
    signal svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_16 : STD_LOGIC_VECTOR (17 downto 0);
    signal svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_17 : STD_LOGIC_VECTOR (17 downto 0);
    signal ch_sums_V_14_0_loc_channel_full_n : STD_LOGIC;
    signal ap_reg_ch_sums_V_14_0_loc_channel_full_n : STD_LOGIC := '0';
    signal ap_sig_ch_sums_V_14_0_loc_channel_full_n : STD_LOGIC;
    signal ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_14_0_loc_channel : STD_LOGIC;
    signal ch_sums_V_17_0_loc_channel_full_n : STD_LOGIC;
    signal ap_reg_ch_sums_V_17_0_loc_channel_full_n : STD_LOGIC := '0';
    signal ap_sig_ch_sums_V_17_0_loc_channel_full_n : STD_LOGIC;
    signal ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_17_0_loc_channel : STD_LOGIC;
    signal ch_sums_V_16_0_loc_channel_full_n : STD_LOGIC;
    signal ap_reg_ch_sums_V_16_0_loc_channel_full_n : STD_LOGIC := '0';
    signal ap_sig_ch_sums_V_16_0_loc_channel_full_n : STD_LOGIC;
    signal ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_16_0_loc_channel : STD_LOGIC;
    signal ch_sums_V_15_0_loc_channel_full_n : STD_LOGIC;
    signal ap_reg_ch_sums_V_15_0_loc_channel_full_n : STD_LOGIC := '0';
    signal ap_sig_ch_sums_V_15_0_loc_channel_full_n : STD_LOGIC;
    signal ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_15_0_loc_channel : STD_LOGIC;
    signal ch_sums_V_13_0_loc_channel_full_n : STD_LOGIC;
    signal ap_reg_ch_sums_V_13_0_loc_channel_full_n : STD_LOGIC := '0';
    signal ap_sig_ch_sums_V_13_0_loc_channel_full_n : STD_LOGIC;
    signal ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_13_0_loc_channel : STD_LOGIC;
    signal ch_sums_V_12_0_loc_channel_full_n : STD_LOGIC;
    signal ap_reg_ch_sums_V_12_0_loc_channel_full_n : STD_LOGIC := '0';
    signal ap_sig_ch_sums_V_12_0_loc_channel_full_n : STD_LOGIC;
    signal ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_12_0_loc_channel : STD_LOGIC;
    signal ch_sums_V_11_0_loc_channel_full_n : STD_LOGIC;
    signal ap_reg_ch_sums_V_11_0_loc_channel_full_n : STD_LOGIC := '0';
    signal ap_sig_ch_sums_V_11_0_loc_channel_full_n : STD_LOGIC;
    signal ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_11_0_loc_channel : STD_LOGIC;
    signal ch_sums_V_10_0_loc_channel_full_n : STD_LOGIC;
    signal ap_reg_ch_sums_V_10_0_loc_channel_full_n : STD_LOGIC := '0';
    signal ap_sig_ch_sums_V_10_0_loc_channel_full_n : STD_LOGIC;
    signal ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_10_0_loc_channel : STD_LOGIC;
    signal ch_sums_V_9_0_loc_channel_full_n : STD_LOGIC;
    signal ap_reg_ch_sums_V_9_0_loc_channel_full_n : STD_LOGIC := '0';
    signal ap_sig_ch_sums_V_9_0_loc_channel_full_n : STD_LOGIC;
    signal ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_9_0_loc_channel : STD_LOGIC;
    signal ch_sums_V_8_0_loc_channel_full_n : STD_LOGIC;
    signal ap_reg_ch_sums_V_8_0_loc_channel_full_n : STD_LOGIC := '0';
    signal ap_sig_ch_sums_V_8_0_loc_channel_full_n : STD_LOGIC;
    signal ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_8_0_loc_channel : STD_LOGIC;
    signal ch_sums_V_7_0_loc_channel_full_n : STD_LOGIC;
    signal ap_reg_ch_sums_V_7_0_loc_channel_full_n : STD_LOGIC := '0';
    signal ap_sig_ch_sums_V_7_0_loc_channel_full_n : STD_LOGIC;
    signal ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_7_0_loc_channel : STD_LOGIC;
    signal ch_sums_V_6_0_loc_channel_full_n : STD_LOGIC;
    signal ap_reg_ch_sums_V_6_0_loc_channel_full_n : STD_LOGIC := '0';
    signal ap_sig_ch_sums_V_6_0_loc_channel_full_n : STD_LOGIC;
    signal ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_6_0_loc_channel : STD_LOGIC;
    signal ch_sums_0_0_V_loc_channel_full_n : STD_LOGIC;
    signal ap_reg_ch_sums_0_0_V_loc_channel_full_n : STD_LOGIC := '0';
    signal ap_sig_ch_sums_0_0_V_loc_channel_full_n : STD_LOGIC;
    signal ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_0_0_V_loc_channel : STD_LOGIC;
    signal ch_sums_1_0_V_loc_channel_full_n : STD_LOGIC;
    signal ap_reg_ch_sums_1_0_V_loc_channel_full_n : STD_LOGIC := '0';
    signal ap_sig_ch_sums_1_0_V_loc_channel_full_n : STD_LOGIC;
    signal ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_1_0_V_loc_channel : STD_LOGIC;
    signal ch_sums_2_0_V_loc_channel_full_n : STD_LOGIC;
    signal ap_reg_ch_sums_2_0_V_loc_channel_full_n : STD_LOGIC := '0';
    signal ap_sig_ch_sums_2_0_V_loc_channel_full_n : STD_LOGIC;
    signal ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_2_0_V_loc_channel : STD_LOGIC;
    signal ch_sums_3_0_V_loc_channel_full_n : STD_LOGIC;
    signal ap_reg_ch_sums_3_0_V_loc_channel_full_n : STD_LOGIC := '0';
    signal ap_sig_ch_sums_3_0_V_loc_channel_full_n : STD_LOGIC;
    signal ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_3_0_V_loc_channel : STD_LOGIC;
    signal ch_sums_4_0_V_loc_channel_full_n : STD_LOGIC;
    signal ap_reg_ch_sums_4_0_V_loc_channel_full_n : STD_LOGIC := '0';
    signal ap_sig_ch_sums_4_0_V_loc_channel_full_n : STD_LOGIC;
    signal ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_4_0_V_loc_channel : STD_LOGIC;
    signal ch_sums_5_0_V_loc_channel_full_n : STD_LOGIC;
    signal ap_reg_ch_sums_5_0_V_loc_channel_full_n : STD_LOGIC := '0';
    signal ap_sig_ch_sums_5_0_V_loc_channel_full_n : STD_LOGIC;
    signal ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_5_0_V_loc_channel : STD_LOGIC;
    signal svm_classifier_Block_preheader_0_proc1_U0_ap_start : STD_LOGIC;
    signal svm_classifier_Block_preheader_0_proc1_U0_ap_done : STD_LOGIC;
    signal svm_classifier_Block_preheader_0_proc1_U0_ap_continue : STD_LOGIC;
    signal svm_classifier_Block_preheader_0_proc1_U0_ap_idle : STD_LOGIC;
    signal svm_classifier_Block_preheader_0_proc1_U0_ap_ready : STD_LOGIC;
    signal svm_classifier_Block_preheader_0_proc1_U0_out_r : STD_LOGIC_VECTOR (0 downto 0);
    signal svm_classifier_Block_preheader_0_proc1_U0_out_r_ap_vld : STD_LOGIC;
    signal ap_sig_hs_continue : STD_LOGIC;
    signal in_V_channel_full_n : STD_LOGIC;
    signal in_V_channel_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal in_V_channel_empty_n : STD_LOGIC;
    signal s_in_0_V_loc_channel_dout : STD_LOGIC_VECTOR (12 downto 0);
    signal s_in_0_V_loc_channel_empty_n : STD_LOGIC;
    signal s_in_1_V_loc_channel_dout : STD_LOGIC_VECTOR (12 downto 0);
    signal s_in_1_V_loc_channel_empty_n : STD_LOGIC;
    signal s_in_2_V_loc_channel_dout : STD_LOGIC_VECTOR (12 downto 0);
    signal s_in_2_V_loc_channel_empty_n : STD_LOGIC;
    signal s_in_3_V_loc_channel_dout : STD_LOGIC_VECTOR (12 downto 0);
    signal s_in_3_V_loc_channel_empty_n : STD_LOGIC;
    signal s_in_4_V_loc_channel_dout : STD_LOGIC_VECTOR (12 downto 0);
    signal s_in_4_V_loc_channel_empty_n : STD_LOGIC;
    signal s_in_5_V_loc_channel_dout : STD_LOGIC_VECTOR (12 downto 0);
    signal s_in_5_V_loc_channel_empty_n : STD_LOGIC;
    signal s_in_6_V_loc_channel_dout : STD_LOGIC_VECTOR (12 downto 0);
    signal s_in_6_V_loc_channel_empty_n : STD_LOGIC;
    signal s_in_7_V_loc_channel_dout : STD_LOGIC_VECTOR (12 downto 0);
    signal s_in_7_V_loc_channel_empty_n : STD_LOGIC;
    signal s_in_8_V_loc_channel_dout : STD_LOGIC_VECTOR (12 downto 0);
    signal s_in_8_V_loc_channel_empty_n : STD_LOGIC;
    signal s_in_9_V_loc_channel_dout : STD_LOGIC_VECTOR (12 downto 0);
    signal s_in_9_V_loc_channel_empty_n : STD_LOGIC;
    signal s_in_10_V_loc_channel_dout : STD_LOGIC_VECTOR (12 downto 0);
    signal s_in_10_V_loc_channel_empty_n : STD_LOGIC;
    signal s_in_11_V_loc_channel_dout : STD_LOGIC_VECTOR (12 downto 0);
    signal s_in_11_V_loc_channel_empty_n : STD_LOGIC;
    signal s_in_12_V_loc_channel_dout : STD_LOGIC_VECTOR (12 downto 0);
    signal s_in_12_V_loc_channel_empty_n : STD_LOGIC;
    signal s_in_13_V_loc_channel_dout : STD_LOGIC_VECTOR (12 downto 0);
    signal s_in_13_V_loc_channel_empty_n : STD_LOGIC;
    signal s_in_14_V_loc_channel_dout : STD_LOGIC_VECTOR (12 downto 0);
    signal s_in_14_V_loc_channel_empty_n : STD_LOGIC;
    signal s_in_15_V_loc_channel_dout : STD_LOGIC_VECTOR (12 downto 0);
    signal s_in_15_V_loc_channel_empty_n : STD_LOGIC;
    signal ch_sums_V_17_0_loc_channel_dout : STD_LOGIC_VECTOR (17 downto 0);
    signal ch_sums_V_17_0_loc_channel_empty_n : STD_LOGIC;
    signal ch_sums_V_16_0_loc_channel_dout : STD_LOGIC_VECTOR (17 downto 0);
    signal ch_sums_V_16_0_loc_channel_empty_n : STD_LOGIC;
    signal ch_sums_V_15_0_loc_channel_dout : STD_LOGIC_VECTOR (17 downto 0);
    signal ch_sums_V_15_0_loc_channel_empty_n : STD_LOGIC;
    signal ch_sums_V_14_0_loc_channel_dout : STD_LOGIC_VECTOR (17 downto 0);
    signal ch_sums_V_14_0_loc_channel_empty_n : STD_LOGIC;
    signal ch_sums_V_13_0_loc_channel_dout : STD_LOGIC_VECTOR (17 downto 0);
    signal ch_sums_V_13_0_loc_channel_empty_n : STD_LOGIC;
    signal ch_sums_V_12_0_loc_channel_dout : STD_LOGIC_VECTOR (17 downto 0);
    signal ch_sums_V_12_0_loc_channel_empty_n : STD_LOGIC;
    signal ch_sums_V_11_0_loc_channel_dout : STD_LOGIC_VECTOR (17 downto 0);
    signal ch_sums_V_11_0_loc_channel_empty_n : STD_LOGIC;
    signal ch_sums_V_10_0_loc_channel_dout : STD_LOGIC_VECTOR (17 downto 0);
    signal ch_sums_V_10_0_loc_channel_empty_n : STD_LOGIC;
    signal ch_sums_V_9_0_loc_channel_dout : STD_LOGIC_VECTOR (17 downto 0);
    signal ch_sums_V_9_0_loc_channel_empty_n : STD_LOGIC;
    signal ch_sums_V_8_0_loc_channel_dout : STD_LOGIC_VECTOR (17 downto 0);
    signal ch_sums_V_8_0_loc_channel_empty_n : STD_LOGIC;
    signal ch_sums_V_7_0_loc_channel_dout : STD_LOGIC_VECTOR (17 downto 0);
    signal ch_sums_V_7_0_loc_channel_empty_n : STD_LOGIC;
    signal ch_sums_V_6_0_loc_channel_dout : STD_LOGIC_VECTOR (17 downto 0);
    signal ch_sums_V_6_0_loc_channel_empty_n : STD_LOGIC;
    signal ch_sums_0_0_V_loc_channel_dout : STD_LOGIC_VECTOR (17 downto 0);
    signal ch_sums_0_0_V_loc_channel_empty_n : STD_LOGIC;
    signal ch_sums_1_0_V_loc_channel_dout : STD_LOGIC_VECTOR (17 downto 0);
    signal ch_sums_1_0_V_loc_channel_empty_n : STD_LOGIC;
    signal ch_sums_2_0_V_loc_channel_dout : STD_LOGIC_VECTOR (17 downto 0);
    signal ch_sums_2_0_V_loc_channel_empty_n : STD_LOGIC;
    signal ch_sums_3_0_V_loc_channel_dout : STD_LOGIC_VECTOR (17 downto 0);
    signal ch_sums_3_0_V_loc_channel_empty_n : STD_LOGIC;
    signal ch_sums_4_0_V_loc_channel_dout : STD_LOGIC_VECTOR (17 downto 0);
    signal ch_sums_4_0_V_loc_channel_empty_n : STD_LOGIC;
    signal ch_sums_5_0_V_loc_channel_dout : STD_LOGIC_VECTOR (17 downto 0);
    signal ch_sums_5_0_V_loc_channel_empty_n : STD_LOGIC;
    signal ap_sig_hs_done : STD_LOGIC;
    signal ap_sig_hs_ready : STD_LOGIC;

    component svm_classifier_svm_classifier_entry3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_V : IN STD_LOGIC_VECTOR (255 downto 0);
        in_V_out_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        in_V_out_full_n : IN STD_LOGIC;
        in_V_out_write : OUT STD_LOGIC );
    end component;


    component svm_classifier_Block_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        in_V_empty_n : IN STD_LOGIC;
        in_V_read : OUT STD_LOGIC;
        ap_return_0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (12 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (12 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (12 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (12 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (12 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (12 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (12 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (12 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (12 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (12 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (12 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (12 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (12 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (12 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (12 downto 0) );
    end component;


    component svm_classifier_Loop_Sum_loop_proc1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (12 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (12 downto 0);
        p_read2 : IN STD_LOGIC_VECTOR (12 downto 0);
        p_read3 : IN STD_LOGIC_VECTOR (12 downto 0);
        p_read4 : IN STD_LOGIC_VECTOR (12 downto 0);
        p_read5 : IN STD_LOGIC_VECTOR (12 downto 0);
        p_read6 : IN STD_LOGIC_VECTOR (12 downto 0);
        p_read7 : IN STD_LOGIC_VECTOR (12 downto 0);
        p_read8 : IN STD_LOGIC_VECTOR (12 downto 0);
        p_read9 : IN STD_LOGIC_VECTOR (12 downto 0);
        p_read10 : IN STD_LOGIC_VECTOR (12 downto 0);
        p_read11 : IN STD_LOGIC_VECTOR (12 downto 0);
        p_read12 : IN STD_LOGIC_VECTOR (12 downto 0);
        p_read13 : IN STD_LOGIC_VECTOR (12 downto 0);
        p_read14 : IN STD_LOGIC_VECTOR (12 downto 0);
        p_read15 : IN STD_LOGIC_VECTOR (12 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (17 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (17 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (17 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (17 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (17 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (17 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (17 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (17 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (17 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (17 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (17 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (17 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (17 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (17 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (17 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (17 downto 0);
        ap_return_16 : OUT STD_LOGIC_VECTOR (17 downto 0);
        ap_return_17 : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component svm_classifier_Block_preheader_0_proc1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (17 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (17 downto 0);
        p_read2 : IN STD_LOGIC_VECTOR (17 downto 0);
        p_read3 : IN STD_LOGIC_VECTOR (17 downto 0);
        p_read4 : IN STD_LOGIC_VECTOR (17 downto 0);
        p_read5 : IN STD_LOGIC_VECTOR (17 downto 0);
        p_read6 : IN STD_LOGIC_VECTOR (17 downto 0);
        p_read7 : IN STD_LOGIC_VECTOR (17 downto 0);
        p_read8 : IN STD_LOGIC_VECTOR (17 downto 0);
        p_read9 : IN STD_LOGIC_VECTOR (17 downto 0);
        p_read10 : IN STD_LOGIC_VECTOR (17 downto 0);
        p_read11 : IN STD_LOGIC_VECTOR (17 downto 0);
        p_read12 : IN STD_LOGIC_VECTOR (17 downto 0);
        p_read13 : IN STD_LOGIC_VECTOR (17 downto 0);
        p_read14 : IN STD_LOGIC_VECTOR (17 downto 0);
        p_read15 : IN STD_LOGIC_VECTOR (17 downto 0);
        p_read16 : IN STD_LOGIC_VECTOR (17 downto 0);
        p_read17 : IN STD_LOGIC_VECTOR (17 downto 0);
        out_r : OUT STD_LOGIC_VECTOR (0 downto 0);
        out_r_ap_vld : OUT STD_LOGIC );
    end component;


    component FIFO_svm_classifier_in_V_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (255 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (255 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_svm_classifier_s_in_0_V_loc_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (12 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (12 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_svm_classifier_s_in_1_V_loc_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (12 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (12 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_svm_classifier_s_in_2_V_loc_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (12 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (12 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_svm_classifier_s_in_3_V_loc_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (12 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (12 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_svm_classifier_s_in_4_V_loc_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (12 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (12 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_svm_classifier_s_in_5_V_loc_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (12 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (12 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_svm_classifier_s_in_6_V_loc_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (12 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (12 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_svm_classifier_s_in_7_V_loc_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (12 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (12 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_svm_classifier_s_in_8_V_loc_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (12 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (12 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_svm_classifier_s_in_9_V_loc_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (12 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (12 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_svm_classifier_s_in_10_V_loc_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (12 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (12 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_svm_classifier_s_in_11_V_loc_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (12 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (12 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_svm_classifier_s_in_12_V_loc_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (12 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (12 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_svm_classifier_s_in_13_V_loc_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (12 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (12 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_svm_classifier_s_in_14_V_loc_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (12 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (12 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_svm_classifier_s_in_15_V_loc_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (12 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (12 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_svm_classifier_ch_sums_V_17_0_loc_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (17 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (17 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_svm_classifier_ch_sums_V_16_0_loc_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (17 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (17 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_svm_classifier_ch_sums_V_15_0_loc_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (17 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (17 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_svm_classifier_ch_sums_V_14_0_loc_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (17 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (17 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_svm_classifier_ch_sums_V_13_0_loc_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (17 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (17 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_svm_classifier_ch_sums_V_12_0_loc_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (17 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (17 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_svm_classifier_ch_sums_V_11_0_loc_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (17 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (17 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_svm_classifier_ch_sums_V_10_0_loc_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (17 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (17 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_svm_classifier_ch_sums_V_9_0_loc_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (17 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (17 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_svm_classifier_ch_sums_V_8_0_loc_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (17 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (17 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_svm_classifier_ch_sums_V_7_0_loc_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (17 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (17 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_svm_classifier_ch_sums_V_6_0_loc_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (17 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (17 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_svm_classifier_ch_sums_0_0_V_loc_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (17 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (17 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_svm_classifier_ch_sums_1_0_V_loc_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (17 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (17 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_svm_classifier_ch_sums_2_0_V_loc_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (17 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (17 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_svm_classifier_ch_sums_3_0_V_loc_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (17 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (17 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_svm_classifier_ch_sums_4_0_V_loc_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (17 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (17 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_svm_classifier_ch_sums_5_0_V_loc_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (17 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (17 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component svm_classifier_AXILiteS_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC;
        in_V : OUT STD_LOGIC_VECTOR (255 downto 0);
        out_r : IN STD_LOGIC;
        out_r_ap_vld : IN STD_LOGIC );
    end component;



begin
    svm_classifier_AXILiteS_s_axi_U : component svm_classifier_AXILiteS_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_AXILITES_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_AXILITES_DATA_WIDTH)
    port map (
        AWVALID => s_axi_AXILiteS_AWVALID,
        AWREADY => s_axi_AXILiteS_AWREADY,
        AWADDR => s_axi_AXILiteS_AWADDR,
        WVALID => s_axi_AXILiteS_WVALID,
        WREADY => s_axi_AXILiteS_WREADY,
        WDATA => s_axi_AXILiteS_WDATA,
        WSTRB => s_axi_AXILiteS_WSTRB,
        ARVALID => s_axi_AXILiteS_ARVALID,
        ARREADY => s_axi_AXILiteS_ARREADY,
        ARADDR => s_axi_AXILiteS_ARADDR,
        RVALID => s_axi_AXILiteS_RVALID,
        RREADY => s_axi_AXILiteS_RREADY,
        RDATA => s_axi_AXILiteS_RDATA,
        RRESP => s_axi_AXILiteS_RRESP,
        BVALID => s_axi_AXILiteS_BVALID,
        BREADY => s_axi_AXILiteS_BREADY,
        BRESP => s_axi_AXILiteS_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle,
        in_V => in_V,
        out_r => out_r,
        out_r_ap_vld => svm_classifier_Block_preheader_0_proc1_U0_out_r_ap_vld);

    svm_classifier_svm_classifier_entry3_U0 : component svm_classifier_svm_classifier_entry3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => svm_classifier_svm_classifier_entry3_U0_ap_start,
        ap_done => svm_classifier_svm_classifier_entry3_U0_ap_done,
        ap_continue => svm_classifier_svm_classifier_entry3_U0_ap_continue,
        ap_idle => svm_classifier_svm_classifier_entry3_U0_ap_idle,
        ap_ready => svm_classifier_svm_classifier_entry3_U0_ap_ready,
        in_V => in_V,
        in_V_out_din => svm_classifier_svm_classifier_entry3_U0_in_V_out_din,
        in_V_out_full_n => in_V_channel_full_n,
        in_V_out_write => svm_classifier_svm_classifier_entry3_U0_in_V_out_write);

    svm_classifier_Block_proc_U0 : component svm_classifier_Block_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => svm_classifier_Block_proc_U0_ap_start,
        ap_done => svm_classifier_Block_proc_U0_ap_done,
        ap_continue => svm_classifier_Block_proc_U0_ap_continue,
        ap_idle => svm_classifier_Block_proc_U0_ap_idle,
        ap_ready => svm_classifier_Block_proc_U0_ap_ready,
        in_V_dout => in_V_channel_dout,
        in_V_empty_n => in_V_channel_empty_n,
        in_V_read => svm_classifier_Block_proc_U0_in_V_read,
        ap_return_0 => svm_classifier_Block_proc_U0_ap_return_0,
        ap_return_1 => svm_classifier_Block_proc_U0_ap_return_1,
        ap_return_2 => svm_classifier_Block_proc_U0_ap_return_2,
        ap_return_3 => svm_classifier_Block_proc_U0_ap_return_3,
        ap_return_4 => svm_classifier_Block_proc_U0_ap_return_4,
        ap_return_5 => svm_classifier_Block_proc_U0_ap_return_5,
        ap_return_6 => svm_classifier_Block_proc_U0_ap_return_6,
        ap_return_7 => svm_classifier_Block_proc_U0_ap_return_7,
        ap_return_8 => svm_classifier_Block_proc_U0_ap_return_8,
        ap_return_9 => svm_classifier_Block_proc_U0_ap_return_9,
        ap_return_10 => svm_classifier_Block_proc_U0_ap_return_10,
        ap_return_11 => svm_classifier_Block_proc_U0_ap_return_11,
        ap_return_12 => svm_classifier_Block_proc_U0_ap_return_12,
        ap_return_13 => svm_classifier_Block_proc_U0_ap_return_13,
        ap_return_14 => svm_classifier_Block_proc_U0_ap_return_14,
        ap_return_15 => svm_classifier_Block_proc_U0_ap_return_15);

    svm_classifier_Loop_Sum_loop_proc1_U0 : component svm_classifier_Loop_Sum_loop_proc1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => svm_classifier_Loop_Sum_loop_proc1_U0_ap_start,
        ap_done => svm_classifier_Loop_Sum_loop_proc1_U0_ap_done,
        ap_continue => svm_classifier_Loop_Sum_loop_proc1_U0_ap_continue,
        ap_idle => svm_classifier_Loop_Sum_loop_proc1_U0_ap_idle,
        ap_ready => svm_classifier_Loop_Sum_loop_proc1_U0_ap_ready,
        p_read => s_in_0_V_loc_channel_dout,
        p_read1 => s_in_1_V_loc_channel_dout,
        p_read2 => s_in_2_V_loc_channel_dout,
        p_read3 => s_in_3_V_loc_channel_dout,
        p_read4 => s_in_4_V_loc_channel_dout,
        p_read5 => s_in_5_V_loc_channel_dout,
        p_read6 => s_in_6_V_loc_channel_dout,
        p_read7 => s_in_7_V_loc_channel_dout,
        p_read8 => s_in_8_V_loc_channel_dout,
        p_read9 => s_in_9_V_loc_channel_dout,
        p_read10 => s_in_10_V_loc_channel_dout,
        p_read11 => s_in_11_V_loc_channel_dout,
        p_read12 => s_in_12_V_loc_channel_dout,
        p_read13 => s_in_13_V_loc_channel_dout,
        p_read14 => s_in_14_V_loc_channel_dout,
        p_read15 => s_in_15_V_loc_channel_dout,
        ap_return_0 => svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_0,
        ap_return_1 => svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_1,
        ap_return_2 => svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_2,
        ap_return_3 => svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_3,
        ap_return_4 => svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_4,
        ap_return_5 => svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_5,
        ap_return_6 => svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_6,
        ap_return_7 => svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_7,
        ap_return_8 => svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_8,
        ap_return_9 => svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_9,
        ap_return_10 => svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_10,
        ap_return_11 => svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_11,
        ap_return_12 => svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_12,
        ap_return_13 => svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_13,
        ap_return_14 => svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_14,
        ap_return_15 => svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_15,
        ap_return_16 => svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_16,
        ap_return_17 => svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_17);

    svm_classifier_Block_preheader_0_proc1_U0 : component svm_classifier_Block_preheader_0_proc1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => svm_classifier_Block_preheader_0_proc1_U0_ap_start,
        ap_done => svm_classifier_Block_preheader_0_proc1_U0_ap_done,
        ap_continue => svm_classifier_Block_preheader_0_proc1_U0_ap_continue,
        ap_idle => svm_classifier_Block_preheader_0_proc1_U0_ap_idle,
        ap_ready => svm_classifier_Block_preheader_0_proc1_U0_ap_ready,
        p_read => ch_sums_0_0_V_loc_channel_dout,
        p_read1 => ch_sums_1_0_V_loc_channel_dout,
        p_read2 => ch_sums_2_0_V_loc_channel_dout,
        p_read3 => ch_sums_3_0_V_loc_channel_dout,
        p_read4 => ch_sums_4_0_V_loc_channel_dout,
        p_read5 => ch_sums_5_0_V_loc_channel_dout,
        p_read6 => ch_sums_V_6_0_loc_channel_dout,
        p_read7 => ch_sums_V_7_0_loc_channel_dout,
        p_read8 => ch_sums_V_8_0_loc_channel_dout,
        p_read9 => ch_sums_V_9_0_loc_channel_dout,
        p_read10 => ch_sums_V_10_0_loc_channel_dout,
        p_read11 => ch_sums_V_11_0_loc_channel_dout,
        p_read12 => ch_sums_V_12_0_loc_channel_dout,
        p_read13 => ch_sums_V_13_0_loc_channel_dout,
        p_read14 => ch_sums_V_14_0_loc_channel_dout,
        p_read15 => ch_sums_V_15_0_loc_channel_dout,
        p_read16 => ch_sums_V_16_0_loc_channel_dout,
        p_read17 => ch_sums_V_17_0_loc_channel_dout,
        out_r => svm_classifier_Block_preheader_0_proc1_U0_out_r,
        out_r_ap_vld => svm_classifier_Block_preheader_0_proc1_U0_out_r_ap_vld);

    in_V_channel_U : component FIFO_svm_classifier_in_V_channel
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => svm_classifier_svm_classifier_entry3_U0_in_V_out_din,
        if_full_n => in_V_channel_full_n,
        if_write => svm_classifier_svm_classifier_entry3_U0_in_V_out_write,
        if_dout => in_V_channel_dout,
        if_empty_n => in_V_channel_empty_n,
        if_read => svm_classifier_Block_proc_U0_in_V_read);

    s_in_0_V_loc_channel_U : component FIFO_svm_classifier_s_in_0_V_loc_channel
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => svm_classifier_Block_proc_U0_ap_return_0,
        if_full_n => s_in_0_V_loc_channel_full_n,
        if_write => ap_chn_write_svm_classifier_Block_proc_U0_s_in_0_V_loc_channel,
        if_dout => s_in_0_V_loc_channel_dout,
        if_empty_n => s_in_0_V_loc_channel_empty_n,
        if_read => svm_classifier_Loop_Sum_loop_proc1_U0_ap_ready);

    s_in_1_V_loc_channel_U : component FIFO_svm_classifier_s_in_1_V_loc_channel
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => svm_classifier_Block_proc_U0_ap_return_1,
        if_full_n => s_in_1_V_loc_channel_full_n,
        if_write => ap_chn_write_svm_classifier_Block_proc_U0_s_in_1_V_loc_channel,
        if_dout => s_in_1_V_loc_channel_dout,
        if_empty_n => s_in_1_V_loc_channel_empty_n,
        if_read => svm_classifier_Loop_Sum_loop_proc1_U0_ap_ready);

    s_in_2_V_loc_channel_U : component FIFO_svm_classifier_s_in_2_V_loc_channel
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => svm_classifier_Block_proc_U0_ap_return_2,
        if_full_n => s_in_2_V_loc_channel_full_n,
        if_write => ap_chn_write_svm_classifier_Block_proc_U0_s_in_2_V_loc_channel,
        if_dout => s_in_2_V_loc_channel_dout,
        if_empty_n => s_in_2_V_loc_channel_empty_n,
        if_read => svm_classifier_Loop_Sum_loop_proc1_U0_ap_ready);

    s_in_3_V_loc_channel_U : component FIFO_svm_classifier_s_in_3_V_loc_channel
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => svm_classifier_Block_proc_U0_ap_return_3,
        if_full_n => s_in_3_V_loc_channel_full_n,
        if_write => ap_chn_write_svm_classifier_Block_proc_U0_s_in_3_V_loc_channel,
        if_dout => s_in_3_V_loc_channel_dout,
        if_empty_n => s_in_3_V_loc_channel_empty_n,
        if_read => svm_classifier_Loop_Sum_loop_proc1_U0_ap_ready);

    s_in_4_V_loc_channel_U : component FIFO_svm_classifier_s_in_4_V_loc_channel
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => svm_classifier_Block_proc_U0_ap_return_4,
        if_full_n => s_in_4_V_loc_channel_full_n,
        if_write => ap_chn_write_svm_classifier_Block_proc_U0_s_in_4_V_loc_channel,
        if_dout => s_in_4_V_loc_channel_dout,
        if_empty_n => s_in_4_V_loc_channel_empty_n,
        if_read => svm_classifier_Loop_Sum_loop_proc1_U0_ap_ready);

    s_in_5_V_loc_channel_U : component FIFO_svm_classifier_s_in_5_V_loc_channel
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => svm_classifier_Block_proc_U0_ap_return_5,
        if_full_n => s_in_5_V_loc_channel_full_n,
        if_write => ap_chn_write_svm_classifier_Block_proc_U0_s_in_5_V_loc_channel,
        if_dout => s_in_5_V_loc_channel_dout,
        if_empty_n => s_in_5_V_loc_channel_empty_n,
        if_read => svm_classifier_Loop_Sum_loop_proc1_U0_ap_ready);

    s_in_6_V_loc_channel_U : component FIFO_svm_classifier_s_in_6_V_loc_channel
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => svm_classifier_Block_proc_U0_ap_return_6,
        if_full_n => s_in_6_V_loc_channel_full_n,
        if_write => ap_chn_write_svm_classifier_Block_proc_U0_s_in_6_V_loc_channel,
        if_dout => s_in_6_V_loc_channel_dout,
        if_empty_n => s_in_6_V_loc_channel_empty_n,
        if_read => svm_classifier_Loop_Sum_loop_proc1_U0_ap_ready);

    s_in_7_V_loc_channel_U : component FIFO_svm_classifier_s_in_7_V_loc_channel
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => svm_classifier_Block_proc_U0_ap_return_7,
        if_full_n => s_in_7_V_loc_channel_full_n,
        if_write => ap_chn_write_svm_classifier_Block_proc_U0_s_in_7_V_loc_channel,
        if_dout => s_in_7_V_loc_channel_dout,
        if_empty_n => s_in_7_V_loc_channel_empty_n,
        if_read => svm_classifier_Loop_Sum_loop_proc1_U0_ap_ready);

    s_in_8_V_loc_channel_U : component FIFO_svm_classifier_s_in_8_V_loc_channel
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => svm_classifier_Block_proc_U0_ap_return_8,
        if_full_n => s_in_8_V_loc_channel_full_n,
        if_write => ap_chn_write_svm_classifier_Block_proc_U0_s_in_8_V_loc_channel,
        if_dout => s_in_8_V_loc_channel_dout,
        if_empty_n => s_in_8_V_loc_channel_empty_n,
        if_read => svm_classifier_Loop_Sum_loop_proc1_U0_ap_ready);

    s_in_9_V_loc_channel_U : component FIFO_svm_classifier_s_in_9_V_loc_channel
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => svm_classifier_Block_proc_U0_ap_return_9,
        if_full_n => s_in_9_V_loc_channel_full_n,
        if_write => ap_chn_write_svm_classifier_Block_proc_U0_s_in_9_V_loc_channel,
        if_dout => s_in_9_V_loc_channel_dout,
        if_empty_n => s_in_9_V_loc_channel_empty_n,
        if_read => svm_classifier_Loop_Sum_loop_proc1_U0_ap_ready);

    s_in_10_V_loc_channel_U : component FIFO_svm_classifier_s_in_10_V_loc_channel
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => svm_classifier_Block_proc_U0_ap_return_10,
        if_full_n => s_in_10_V_loc_channel_full_n,
        if_write => ap_chn_write_svm_classifier_Block_proc_U0_s_in_10_V_loc_channel,
        if_dout => s_in_10_V_loc_channel_dout,
        if_empty_n => s_in_10_V_loc_channel_empty_n,
        if_read => svm_classifier_Loop_Sum_loop_proc1_U0_ap_ready);

    s_in_11_V_loc_channel_U : component FIFO_svm_classifier_s_in_11_V_loc_channel
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => svm_classifier_Block_proc_U0_ap_return_11,
        if_full_n => s_in_11_V_loc_channel_full_n,
        if_write => ap_chn_write_svm_classifier_Block_proc_U0_s_in_11_V_loc_channel,
        if_dout => s_in_11_V_loc_channel_dout,
        if_empty_n => s_in_11_V_loc_channel_empty_n,
        if_read => svm_classifier_Loop_Sum_loop_proc1_U0_ap_ready);

    s_in_12_V_loc_channel_U : component FIFO_svm_classifier_s_in_12_V_loc_channel
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => svm_classifier_Block_proc_U0_ap_return_12,
        if_full_n => s_in_12_V_loc_channel_full_n,
        if_write => ap_chn_write_svm_classifier_Block_proc_U0_s_in_12_V_loc_channel,
        if_dout => s_in_12_V_loc_channel_dout,
        if_empty_n => s_in_12_V_loc_channel_empty_n,
        if_read => svm_classifier_Loop_Sum_loop_proc1_U0_ap_ready);

    s_in_13_V_loc_channel_U : component FIFO_svm_classifier_s_in_13_V_loc_channel
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => svm_classifier_Block_proc_U0_ap_return_13,
        if_full_n => s_in_13_V_loc_channel_full_n,
        if_write => ap_chn_write_svm_classifier_Block_proc_U0_s_in_13_V_loc_channel,
        if_dout => s_in_13_V_loc_channel_dout,
        if_empty_n => s_in_13_V_loc_channel_empty_n,
        if_read => svm_classifier_Loop_Sum_loop_proc1_U0_ap_ready);

    s_in_14_V_loc_channel_U : component FIFO_svm_classifier_s_in_14_V_loc_channel
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => svm_classifier_Block_proc_U0_ap_return_14,
        if_full_n => s_in_14_V_loc_channel_full_n,
        if_write => ap_chn_write_svm_classifier_Block_proc_U0_s_in_14_V_loc_channel,
        if_dout => s_in_14_V_loc_channel_dout,
        if_empty_n => s_in_14_V_loc_channel_empty_n,
        if_read => svm_classifier_Loop_Sum_loop_proc1_U0_ap_ready);

    s_in_15_V_loc_channel_U : component FIFO_svm_classifier_s_in_15_V_loc_channel
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => svm_classifier_Block_proc_U0_ap_return_15,
        if_full_n => s_in_15_V_loc_channel_full_n,
        if_write => ap_chn_write_svm_classifier_Block_proc_U0_s_in_15_V_loc_channel,
        if_dout => s_in_15_V_loc_channel_dout,
        if_empty_n => s_in_15_V_loc_channel_empty_n,
        if_read => svm_classifier_Loop_Sum_loop_proc1_U0_ap_ready);

    ch_sums_V_17_0_loc_channel_U : component FIFO_svm_classifier_ch_sums_V_17_0_loc_channel
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_0,
        if_full_n => ch_sums_V_17_0_loc_channel_full_n,
        if_write => ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_17_0_loc_channel,
        if_dout => ch_sums_V_17_0_loc_channel_dout,
        if_empty_n => ch_sums_V_17_0_loc_channel_empty_n,
        if_read => svm_classifier_Block_preheader_0_proc1_U0_ap_ready);

    ch_sums_V_16_0_loc_channel_U : component FIFO_svm_classifier_ch_sums_V_16_0_loc_channel
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_1,
        if_full_n => ch_sums_V_16_0_loc_channel_full_n,
        if_write => ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_16_0_loc_channel,
        if_dout => ch_sums_V_16_0_loc_channel_dout,
        if_empty_n => ch_sums_V_16_0_loc_channel_empty_n,
        if_read => svm_classifier_Block_preheader_0_proc1_U0_ap_ready);

    ch_sums_V_15_0_loc_channel_U : component FIFO_svm_classifier_ch_sums_V_15_0_loc_channel
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_2,
        if_full_n => ch_sums_V_15_0_loc_channel_full_n,
        if_write => ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_15_0_loc_channel,
        if_dout => ch_sums_V_15_0_loc_channel_dout,
        if_empty_n => ch_sums_V_15_0_loc_channel_empty_n,
        if_read => svm_classifier_Block_preheader_0_proc1_U0_ap_ready);

    ch_sums_V_14_0_loc_channel_U : component FIFO_svm_classifier_ch_sums_V_14_0_loc_channel
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_3,
        if_full_n => ch_sums_V_14_0_loc_channel_full_n,
        if_write => ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_14_0_loc_channel,
        if_dout => ch_sums_V_14_0_loc_channel_dout,
        if_empty_n => ch_sums_V_14_0_loc_channel_empty_n,
        if_read => svm_classifier_Block_preheader_0_proc1_U0_ap_ready);

    ch_sums_V_13_0_loc_channel_U : component FIFO_svm_classifier_ch_sums_V_13_0_loc_channel
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_4,
        if_full_n => ch_sums_V_13_0_loc_channel_full_n,
        if_write => ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_13_0_loc_channel,
        if_dout => ch_sums_V_13_0_loc_channel_dout,
        if_empty_n => ch_sums_V_13_0_loc_channel_empty_n,
        if_read => svm_classifier_Block_preheader_0_proc1_U0_ap_ready);

    ch_sums_V_12_0_loc_channel_U : component FIFO_svm_classifier_ch_sums_V_12_0_loc_channel
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_5,
        if_full_n => ch_sums_V_12_0_loc_channel_full_n,
        if_write => ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_12_0_loc_channel,
        if_dout => ch_sums_V_12_0_loc_channel_dout,
        if_empty_n => ch_sums_V_12_0_loc_channel_empty_n,
        if_read => svm_classifier_Block_preheader_0_proc1_U0_ap_ready);

    ch_sums_V_11_0_loc_channel_U : component FIFO_svm_classifier_ch_sums_V_11_0_loc_channel
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_6,
        if_full_n => ch_sums_V_11_0_loc_channel_full_n,
        if_write => ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_11_0_loc_channel,
        if_dout => ch_sums_V_11_0_loc_channel_dout,
        if_empty_n => ch_sums_V_11_0_loc_channel_empty_n,
        if_read => svm_classifier_Block_preheader_0_proc1_U0_ap_ready);

    ch_sums_V_10_0_loc_channel_U : component FIFO_svm_classifier_ch_sums_V_10_0_loc_channel
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_7,
        if_full_n => ch_sums_V_10_0_loc_channel_full_n,
        if_write => ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_10_0_loc_channel,
        if_dout => ch_sums_V_10_0_loc_channel_dout,
        if_empty_n => ch_sums_V_10_0_loc_channel_empty_n,
        if_read => svm_classifier_Block_preheader_0_proc1_U0_ap_ready);

    ch_sums_V_9_0_loc_channel_U : component FIFO_svm_classifier_ch_sums_V_9_0_loc_channel
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_8,
        if_full_n => ch_sums_V_9_0_loc_channel_full_n,
        if_write => ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_9_0_loc_channel,
        if_dout => ch_sums_V_9_0_loc_channel_dout,
        if_empty_n => ch_sums_V_9_0_loc_channel_empty_n,
        if_read => svm_classifier_Block_preheader_0_proc1_U0_ap_ready);

    ch_sums_V_8_0_loc_channel_U : component FIFO_svm_classifier_ch_sums_V_8_0_loc_channel
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_9,
        if_full_n => ch_sums_V_8_0_loc_channel_full_n,
        if_write => ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_8_0_loc_channel,
        if_dout => ch_sums_V_8_0_loc_channel_dout,
        if_empty_n => ch_sums_V_8_0_loc_channel_empty_n,
        if_read => svm_classifier_Block_preheader_0_proc1_U0_ap_ready);

    ch_sums_V_7_0_loc_channel_U : component FIFO_svm_classifier_ch_sums_V_7_0_loc_channel
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_10,
        if_full_n => ch_sums_V_7_0_loc_channel_full_n,
        if_write => ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_7_0_loc_channel,
        if_dout => ch_sums_V_7_0_loc_channel_dout,
        if_empty_n => ch_sums_V_7_0_loc_channel_empty_n,
        if_read => svm_classifier_Block_preheader_0_proc1_U0_ap_ready);

    ch_sums_V_6_0_loc_channel_U : component FIFO_svm_classifier_ch_sums_V_6_0_loc_channel
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_11,
        if_full_n => ch_sums_V_6_0_loc_channel_full_n,
        if_write => ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_6_0_loc_channel,
        if_dout => ch_sums_V_6_0_loc_channel_dout,
        if_empty_n => ch_sums_V_6_0_loc_channel_empty_n,
        if_read => svm_classifier_Block_preheader_0_proc1_U0_ap_ready);

    ch_sums_0_0_V_loc_channel_U : component FIFO_svm_classifier_ch_sums_0_0_V_loc_channel
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_12,
        if_full_n => ch_sums_0_0_V_loc_channel_full_n,
        if_write => ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_0_0_V_loc_channel,
        if_dout => ch_sums_0_0_V_loc_channel_dout,
        if_empty_n => ch_sums_0_0_V_loc_channel_empty_n,
        if_read => svm_classifier_Block_preheader_0_proc1_U0_ap_ready);

    ch_sums_1_0_V_loc_channel_U : component FIFO_svm_classifier_ch_sums_1_0_V_loc_channel
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_13,
        if_full_n => ch_sums_1_0_V_loc_channel_full_n,
        if_write => ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_1_0_V_loc_channel,
        if_dout => ch_sums_1_0_V_loc_channel_dout,
        if_empty_n => ch_sums_1_0_V_loc_channel_empty_n,
        if_read => svm_classifier_Block_preheader_0_proc1_U0_ap_ready);

    ch_sums_2_0_V_loc_channel_U : component FIFO_svm_classifier_ch_sums_2_0_V_loc_channel
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_14,
        if_full_n => ch_sums_2_0_V_loc_channel_full_n,
        if_write => ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_2_0_V_loc_channel,
        if_dout => ch_sums_2_0_V_loc_channel_dout,
        if_empty_n => ch_sums_2_0_V_loc_channel_empty_n,
        if_read => svm_classifier_Block_preheader_0_proc1_U0_ap_ready);

    ch_sums_3_0_V_loc_channel_U : component FIFO_svm_classifier_ch_sums_3_0_V_loc_channel
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_15,
        if_full_n => ch_sums_3_0_V_loc_channel_full_n,
        if_write => ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_3_0_V_loc_channel,
        if_dout => ch_sums_3_0_V_loc_channel_dout,
        if_empty_n => ch_sums_3_0_V_loc_channel_empty_n,
        if_read => svm_classifier_Block_preheader_0_proc1_U0_ap_ready);

    ch_sums_4_0_V_loc_channel_U : component FIFO_svm_classifier_ch_sums_4_0_V_loc_channel
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_16,
        if_full_n => ch_sums_4_0_V_loc_channel_full_n,
        if_write => ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_4_0_V_loc_channel,
        if_dout => ch_sums_4_0_V_loc_channel_dout,
        if_empty_n => ch_sums_4_0_V_loc_channel_empty_n,
        if_read => svm_classifier_Block_preheader_0_proc1_U0_ap_ready);

    ch_sums_5_0_V_loc_channel_U : component FIFO_svm_classifier_ch_sums_5_0_V_loc_channel
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_17,
        if_full_n => ch_sums_5_0_V_loc_channel_full_n,
        if_write => ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_5_0_V_loc_channel,
        if_dout => ch_sums_5_0_V_loc_channel_dout,
        if_empty_n => ch_sums_5_0_V_loc_channel_empty_n,
        if_read => svm_classifier_Block_preheader_0_proc1_U0_ap_ready);





    ap_reg_ch_sums_0_0_V_loc_channel_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ch_sums_0_0_V_loc_channel_full_n <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) and (ap_const_logic_1 = svm_classifier_Loop_Sum_loop_proc1_U0_ap_continue))) then 
                    ap_reg_ch_sums_0_0_V_loc_channel_full_n <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) and (ap_const_logic_1 = ch_sums_0_0_V_loc_channel_full_n))) then 
                    ap_reg_ch_sums_0_0_V_loc_channel_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ch_sums_1_0_V_loc_channel_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ch_sums_1_0_V_loc_channel_full_n <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) and (ap_const_logic_1 = svm_classifier_Loop_Sum_loop_proc1_U0_ap_continue))) then 
                    ap_reg_ch_sums_1_0_V_loc_channel_full_n <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) and (ap_const_logic_1 = ch_sums_1_0_V_loc_channel_full_n))) then 
                    ap_reg_ch_sums_1_0_V_loc_channel_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ch_sums_2_0_V_loc_channel_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ch_sums_2_0_V_loc_channel_full_n <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) and (ap_const_logic_1 = svm_classifier_Loop_Sum_loop_proc1_U0_ap_continue))) then 
                    ap_reg_ch_sums_2_0_V_loc_channel_full_n <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) and (ap_const_logic_1 = ch_sums_2_0_V_loc_channel_full_n))) then 
                    ap_reg_ch_sums_2_0_V_loc_channel_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ch_sums_3_0_V_loc_channel_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ch_sums_3_0_V_loc_channel_full_n <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) and (ap_const_logic_1 = svm_classifier_Loop_Sum_loop_proc1_U0_ap_continue))) then 
                    ap_reg_ch_sums_3_0_V_loc_channel_full_n <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) and (ap_const_logic_1 = ch_sums_3_0_V_loc_channel_full_n))) then 
                    ap_reg_ch_sums_3_0_V_loc_channel_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ch_sums_4_0_V_loc_channel_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ch_sums_4_0_V_loc_channel_full_n <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) and (ap_const_logic_1 = svm_classifier_Loop_Sum_loop_proc1_U0_ap_continue))) then 
                    ap_reg_ch_sums_4_0_V_loc_channel_full_n <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) and (ap_const_logic_1 = ch_sums_4_0_V_loc_channel_full_n))) then 
                    ap_reg_ch_sums_4_0_V_loc_channel_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ch_sums_5_0_V_loc_channel_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ch_sums_5_0_V_loc_channel_full_n <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) and (ap_const_logic_1 = svm_classifier_Loop_Sum_loop_proc1_U0_ap_continue))) then 
                    ap_reg_ch_sums_5_0_V_loc_channel_full_n <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) and (ap_const_logic_1 = ch_sums_5_0_V_loc_channel_full_n))) then 
                    ap_reg_ch_sums_5_0_V_loc_channel_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ch_sums_V_10_0_loc_channel_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ch_sums_V_10_0_loc_channel_full_n <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) and (ap_const_logic_1 = svm_classifier_Loop_Sum_loop_proc1_U0_ap_continue))) then 
                    ap_reg_ch_sums_V_10_0_loc_channel_full_n <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) and (ap_const_logic_1 = ch_sums_V_10_0_loc_channel_full_n))) then 
                    ap_reg_ch_sums_V_10_0_loc_channel_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ch_sums_V_11_0_loc_channel_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ch_sums_V_11_0_loc_channel_full_n <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) and (ap_const_logic_1 = svm_classifier_Loop_Sum_loop_proc1_U0_ap_continue))) then 
                    ap_reg_ch_sums_V_11_0_loc_channel_full_n <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) and (ap_const_logic_1 = ch_sums_V_11_0_loc_channel_full_n))) then 
                    ap_reg_ch_sums_V_11_0_loc_channel_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ch_sums_V_12_0_loc_channel_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ch_sums_V_12_0_loc_channel_full_n <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) and (ap_const_logic_1 = svm_classifier_Loop_Sum_loop_proc1_U0_ap_continue))) then 
                    ap_reg_ch_sums_V_12_0_loc_channel_full_n <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) and (ap_const_logic_1 = ch_sums_V_12_0_loc_channel_full_n))) then 
                    ap_reg_ch_sums_V_12_0_loc_channel_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ch_sums_V_13_0_loc_channel_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ch_sums_V_13_0_loc_channel_full_n <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) and (ap_const_logic_1 = svm_classifier_Loop_Sum_loop_proc1_U0_ap_continue))) then 
                    ap_reg_ch_sums_V_13_0_loc_channel_full_n <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) and (ap_const_logic_1 = ch_sums_V_13_0_loc_channel_full_n))) then 
                    ap_reg_ch_sums_V_13_0_loc_channel_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ch_sums_V_14_0_loc_channel_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ch_sums_V_14_0_loc_channel_full_n <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) and (ap_const_logic_1 = svm_classifier_Loop_Sum_loop_proc1_U0_ap_continue))) then 
                    ap_reg_ch_sums_V_14_0_loc_channel_full_n <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) and (ap_const_logic_1 = ch_sums_V_14_0_loc_channel_full_n))) then 
                    ap_reg_ch_sums_V_14_0_loc_channel_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ch_sums_V_15_0_loc_channel_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ch_sums_V_15_0_loc_channel_full_n <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) and (ap_const_logic_1 = svm_classifier_Loop_Sum_loop_proc1_U0_ap_continue))) then 
                    ap_reg_ch_sums_V_15_0_loc_channel_full_n <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) and (ap_const_logic_1 = ch_sums_V_15_0_loc_channel_full_n))) then 
                    ap_reg_ch_sums_V_15_0_loc_channel_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ch_sums_V_16_0_loc_channel_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ch_sums_V_16_0_loc_channel_full_n <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) and (ap_const_logic_1 = svm_classifier_Loop_Sum_loop_proc1_U0_ap_continue))) then 
                    ap_reg_ch_sums_V_16_0_loc_channel_full_n <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) and (ap_const_logic_1 = ch_sums_V_16_0_loc_channel_full_n))) then 
                    ap_reg_ch_sums_V_16_0_loc_channel_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ch_sums_V_17_0_loc_channel_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ch_sums_V_17_0_loc_channel_full_n <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) and (ap_const_logic_1 = svm_classifier_Loop_Sum_loop_proc1_U0_ap_continue))) then 
                    ap_reg_ch_sums_V_17_0_loc_channel_full_n <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) and (ap_const_logic_1 = ch_sums_V_17_0_loc_channel_full_n))) then 
                    ap_reg_ch_sums_V_17_0_loc_channel_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ch_sums_V_6_0_loc_channel_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ch_sums_V_6_0_loc_channel_full_n <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) and (ap_const_logic_1 = svm_classifier_Loop_Sum_loop_proc1_U0_ap_continue))) then 
                    ap_reg_ch_sums_V_6_0_loc_channel_full_n <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) and (ap_const_logic_1 = ch_sums_V_6_0_loc_channel_full_n))) then 
                    ap_reg_ch_sums_V_6_0_loc_channel_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ch_sums_V_7_0_loc_channel_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ch_sums_V_7_0_loc_channel_full_n <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) and (ap_const_logic_1 = svm_classifier_Loop_Sum_loop_proc1_U0_ap_continue))) then 
                    ap_reg_ch_sums_V_7_0_loc_channel_full_n <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) and (ap_const_logic_1 = ch_sums_V_7_0_loc_channel_full_n))) then 
                    ap_reg_ch_sums_V_7_0_loc_channel_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ch_sums_V_8_0_loc_channel_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ch_sums_V_8_0_loc_channel_full_n <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) and (ap_const_logic_1 = svm_classifier_Loop_Sum_loop_proc1_U0_ap_continue))) then 
                    ap_reg_ch_sums_V_8_0_loc_channel_full_n <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) and (ap_const_logic_1 = ch_sums_V_8_0_loc_channel_full_n))) then 
                    ap_reg_ch_sums_V_8_0_loc_channel_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ch_sums_V_9_0_loc_channel_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ch_sums_V_9_0_loc_channel_full_n <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) and (ap_const_logic_1 = svm_classifier_Loop_Sum_loop_proc1_U0_ap_continue))) then 
                    ap_reg_ch_sums_V_9_0_loc_channel_full_n <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = svm_classifier_Loop_Sum_loop_proc1_U0_ap_done) and (ap_const_logic_1 = ch_sums_V_9_0_loc_channel_full_n))) then 
                    ap_reg_ch_sums_V_9_0_loc_channel_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_s_in_0_V_loc_channel_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_s_in_0_V_loc_channel_full_n <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = svm_classifier_Block_proc_U0_ap_done) and (ap_const_logic_1 = svm_classifier_Block_proc_U0_ap_continue))) then 
                    ap_reg_s_in_0_V_loc_channel_full_n <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = svm_classifier_Block_proc_U0_ap_done) and (ap_const_logic_1 = s_in_0_V_loc_channel_full_n))) then 
                    ap_reg_s_in_0_V_loc_channel_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_s_in_10_V_loc_channel_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_s_in_10_V_loc_channel_full_n <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = svm_classifier_Block_proc_U0_ap_done) and (ap_const_logic_1 = svm_classifier_Block_proc_U0_ap_continue))) then 
                    ap_reg_s_in_10_V_loc_channel_full_n <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = svm_classifier_Block_proc_U0_ap_done) and (ap_const_logic_1 = s_in_10_V_loc_channel_full_n))) then 
                    ap_reg_s_in_10_V_loc_channel_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_s_in_11_V_loc_channel_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_s_in_11_V_loc_channel_full_n <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = svm_classifier_Block_proc_U0_ap_done) and (ap_const_logic_1 = svm_classifier_Block_proc_U0_ap_continue))) then 
                    ap_reg_s_in_11_V_loc_channel_full_n <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = svm_classifier_Block_proc_U0_ap_done) and (ap_const_logic_1 = s_in_11_V_loc_channel_full_n))) then 
                    ap_reg_s_in_11_V_loc_channel_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_s_in_12_V_loc_channel_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_s_in_12_V_loc_channel_full_n <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = svm_classifier_Block_proc_U0_ap_done) and (ap_const_logic_1 = svm_classifier_Block_proc_U0_ap_continue))) then 
                    ap_reg_s_in_12_V_loc_channel_full_n <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = svm_classifier_Block_proc_U0_ap_done) and (ap_const_logic_1 = s_in_12_V_loc_channel_full_n))) then 
                    ap_reg_s_in_12_V_loc_channel_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_s_in_13_V_loc_channel_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_s_in_13_V_loc_channel_full_n <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = svm_classifier_Block_proc_U0_ap_done) and (ap_const_logic_1 = svm_classifier_Block_proc_U0_ap_continue))) then 
                    ap_reg_s_in_13_V_loc_channel_full_n <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = svm_classifier_Block_proc_U0_ap_done) and (ap_const_logic_1 = s_in_13_V_loc_channel_full_n))) then 
                    ap_reg_s_in_13_V_loc_channel_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_s_in_14_V_loc_channel_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_s_in_14_V_loc_channel_full_n <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = svm_classifier_Block_proc_U0_ap_done) and (ap_const_logic_1 = svm_classifier_Block_proc_U0_ap_continue))) then 
                    ap_reg_s_in_14_V_loc_channel_full_n <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = svm_classifier_Block_proc_U0_ap_done) and (ap_const_logic_1 = s_in_14_V_loc_channel_full_n))) then 
                    ap_reg_s_in_14_V_loc_channel_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_s_in_15_V_loc_channel_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_s_in_15_V_loc_channel_full_n <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = svm_classifier_Block_proc_U0_ap_done) and (ap_const_logic_1 = svm_classifier_Block_proc_U0_ap_continue))) then 
                    ap_reg_s_in_15_V_loc_channel_full_n <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = svm_classifier_Block_proc_U0_ap_done) and (ap_const_logic_1 = s_in_15_V_loc_channel_full_n))) then 
                    ap_reg_s_in_15_V_loc_channel_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_s_in_1_V_loc_channel_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_s_in_1_V_loc_channel_full_n <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = svm_classifier_Block_proc_U0_ap_done) and (ap_const_logic_1 = svm_classifier_Block_proc_U0_ap_continue))) then 
                    ap_reg_s_in_1_V_loc_channel_full_n <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = svm_classifier_Block_proc_U0_ap_done) and (ap_const_logic_1 = s_in_1_V_loc_channel_full_n))) then 
                    ap_reg_s_in_1_V_loc_channel_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_s_in_2_V_loc_channel_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_s_in_2_V_loc_channel_full_n <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = svm_classifier_Block_proc_U0_ap_done) and (ap_const_logic_1 = svm_classifier_Block_proc_U0_ap_continue))) then 
                    ap_reg_s_in_2_V_loc_channel_full_n <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = svm_classifier_Block_proc_U0_ap_done) and (ap_const_logic_1 = s_in_2_V_loc_channel_full_n))) then 
                    ap_reg_s_in_2_V_loc_channel_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_s_in_3_V_loc_channel_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_s_in_3_V_loc_channel_full_n <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = svm_classifier_Block_proc_U0_ap_done) and (ap_const_logic_1 = svm_classifier_Block_proc_U0_ap_continue))) then 
                    ap_reg_s_in_3_V_loc_channel_full_n <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = svm_classifier_Block_proc_U0_ap_done) and (ap_const_logic_1 = s_in_3_V_loc_channel_full_n))) then 
                    ap_reg_s_in_3_V_loc_channel_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_s_in_4_V_loc_channel_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_s_in_4_V_loc_channel_full_n <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = svm_classifier_Block_proc_U0_ap_done) and (ap_const_logic_1 = svm_classifier_Block_proc_U0_ap_continue))) then 
                    ap_reg_s_in_4_V_loc_channel_full_n <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = svm_classifier_Block_proc_U0_ap_done) and (ap_const_logic_1 = s_in_4_V_loc_channel_full_n))) then 
                    ap_reg_s_in_4_V_loc_channel_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_s_in_5_V_loc_channel_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_s_in_5_V_loc_channel_full_n <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = svm_classifier_Block_proc_U0_ap_done) and (ap_const_logic_1 = svm_classifier_Block_proc_U0_ap_continue))) then 
                    ap_reg_s_in_5_V_loc_channel_full_n <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = svm_classifier_Block_proc_U0_ap_done) and (ap_const_logic_1 = s_in_5_V_loc_channel_full_n))) then 
                    ap_reg_s_in_5_V_loc_channel_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_s_in_6_V_loc_channel_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_s_in_6_V_loc_channel_full_n <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = svm_classifier_Block_proc_U0_ap_done) and (ap_const_logic_1 = svm_classifier_Block_proc_U0_ap_continue))) then 
                    ap_reg_s_in_6_V_loc_channel_full_n <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = svm_classifier_Block_proc_U0_ap_done) and (ap_const_logic_1 = s_in_6_V_loc_channel_full_n))) then 
                    ap_reg_s_in_6_V_loc_channel_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_s_in_7_V_loc_channel_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_s_in_7_V_loc_channel_full_n <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = svm_classifier_Block_proc_U0_ap_done) and (ap_const_logic_1 = svm_classifier_Block_proc_U0_ap_continue))) then 
                    ap_reg_s_in_7_V_loc_channel_full_n <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = svm_classifier_Block_proc_U0_ap_done) and (ap_const_logic_1 = s_in_7_V_loc_channel_full_n))) then 
                    ap_reg_s_in_7_V_loc_channel_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_s_in_8_V_loc_channel_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_s_in_8_V_loc_channel_full_n <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = svm_classifier_Block_proc_U0_ap_done) and (ap_const_logic_1 = svm_classifier_Block_proc_U0_ap_continue))) then 
                    ap_reg_s_in_8_V_loc_channel_full_n <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = svm_classifier_Block_proc_U0_ap_done) and (ap_const_logic_1 = s_in_8_V_loc_channel_full_n))) then 
                    ap_reg_s_in_8_V_loc_channel_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_s_in_9_V_loc_channel_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_s_in_9_V_loc_channel_full_n <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = svm_classifier_Block_proc_U0_ap_done) and (ap_const_logic_1 = svm_classifier_Block_proc_U0_ap_continue))) then 
                    ap_reg_s_in_9_V_loc_channel_full_n <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = svm_classifier_Block_proc_U0_ap_done) and (ap_const_logic_1 = s_in_9_V_loc_channel_full_n))) then 
                    ap_reg_s_in_9_V_loc_channel_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    svm_classifier_Block_proc_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                svm_classifier_Block_proc_U0_ap_start <= ap_const_logic_0;
            else
                svm_classifier_Block_proc_U0_ap_start <= ap_const_logic_1;
            end if;
        end if;
    end process;


    ap_chn_write_svm_classifier_Block_proc_U0_s_in_0_V_loc_channel_assign_proc : process(svm_classifier_Block_proc_U0_ap_done, ap_reg_s_in_0_V_loc_channel_full_n)
    begin
        if ((ap_const_logic_1 = ap_reg_s_in_0_V_loc_channel_full_n)) then 
            ap_chn_write_svm_classifier_Block_proc_U0_s_in_0_V_loc_channel <= ap_const_logic_0;
        else 
            ap_chn_write_svm_classifier_Block_proc_U0_s_in_0_V_loc_channel <= svm_classifier_Block_proc_U0_ap_done;
        end if; 
    end process;


    ap_chn_write_svm_classifier_Block_proc_U0_s_in_10_V_loc_channel_assign_proc : process(svm_classifier_Block_proc_U0_ap_done, ap_reg_s_in_10_V_loc_channel_full_n)
    begin
        if ((ap_const_logic_1 = ap_reg_s_in_10_V_loc_channel_full_n)) then 
            ap_chn_write_svm_classifier_Block_proc_U0_s_in_10_V_loc_channel <= ap_const_logic_0;
        else 
            ap_chn_write_svm_classifier_Block_proc_U0_s_in_10_V_loc_channel <= svm_classifier_Block_proc_U0_ap_done;
        end if; 
    end process;


    ap_chn_write_svm_classifier_Block_proc_U0_s_in_11_V_loc_channel_assign_proc : process(svm_classifier_Block_proc_U0_ap_done, ap_reg_s_in_11_V_loc_channel_full_n)
    begin
        if ((ap_const_logic_1 = ap_reg_s_in_11_V_loc_channel_full_n)) then 
            ap_chn_write_svm_classifier_Block_proc_U0_s_in_11_V_loc_channel <= ap_const_logic_0;
        else 
            ap_chn_write_svm_classifier_Block_proc_U0_s_in_11_V_loc_channel <= svm_classifier_Block_proc_U0_ap_done;
        end if; 
    end process;


    ap_chn_write_svm_classifier_Block_proc_U0_s_in_12_V_loc_channel_assign_proc : process(svm_classifier_Block_proc_U0_ap_done, ap_reg_s_in_12_V_loc_channel_full_n)
    begin
        if ((ap_const_logic_1 = ap_reg_s_in_12_V_loc_channel_full_n)) then 
            ap_chn_write_svm_classifier_Block_proc_U0_s_in_12_V_loc_channel <= ap_const_logic_0;
        else 
            ap_chn_write_svm_classifier_Block_proc_U0_s_in_12_V_loc_channel <= svm_classifier_Block_proc_U0_ap_done;
        end if; 
    end process;


    ap_chn_write_svm_classifier_Block_proc_U0_s_in_13_V_loc_channel_assign_proc : process(svm_classifier_Block_proc_U0_ap_done, ap_reg_s_in_13_V_loc_channel_full_n)
    begin
        if ((ap_const_logic_1 = ap_reg_s_in_13_V_loc_channel_full_n)) then 
            ap_chn_write_svm_classifier_Block_proc_U0_s_in_13_V_loc_channel <= ap_const_logic_0;
        else 
            ap_chn_write_svm_classifier_Block_proc_U0_s_in_13_V_loc_channel <= svm_classifier_Block_proc_U0_ap_done;
        end if; 
    end process;


    ap_chn_write_svm_classifier_Block_proc_U0_s_in_14_V_loc_channel_assign_proc : process(svm_classifier_Block_proc_U0_ap_done, ap_reg_s_in_14_V_loc_channel_full_n)
    begin
        if ((ap_const_logic_1 = ap_reg_s_in_14_V_loc_channel_full_n)) then 
            ap_chn_write_svm_classifier_Block_proc_U0_s_in_14_V_loc_channel <= ap_const_logic_0;
        else 
            ap_chn_write_svm_classifier_Block_proc_U0_s_in_14_V_loc_channel <= svm_classifier_Block_proc_U0_ap_done;
        end if; 
    end process;


    ap_chn_write_svm_classifier_Block_proc_U0_s_in_15_V_loc_channel_assign_proc : process(svm_classifier_Block_proc_U0_ap_done, ap_reg_s_in_15_V_loc_channel_full_n)
    begin
        if ((ap_const_logic_1 = ap_reg_s_in_15_V_loc_channel_full_n)) then 
            ap_chn_write_svm_classifier_Block_proc_U0_s_in_15_V_loc_channel <= ap_const_logic_0;
        else 
            ap_chn_write_svm_classifier_Block_proc_U0_s_in_15_V_loc_channel <= svm_classifier_Block_proc_U0_ap_done;
        end if; 
    end process;


    ap_chn_write_svm_classifier_Block_proc_U0_s_in_1_V_loc_channel_assign_proc : process(svm_classifier_Block_proc_U0_ap_done, ap_reg_s_in_1_V_loc_channel_full_n)
    begin
        if ((ap_const_logic_1 = ap_reg_s_in_1_V_loc_channel_full_n)) then 
            ap_chn_write_svm_classifier_Block_proc_U0_s_in_1_V_loc_channel <= ap_const_logic_0;
        else 
            ap_chn_write_svm_classifier_Block_proc_U0_s_in_1_V_loc_channel <= svm_classifier_Block_proc_U0_ap_done;
        end if; 
    end process;


    ap_chn_write_svm_classifier_Block_proc_U0_s_in_2_V_loc_channel_assign_proc : process(svm_classifier_Block_proc_U0_ap_done, ap_reg_s_in_2_V_loc_channel_full_n)
    begin
        if ((ap_const_logic_1 = ap_reg_s_in_2_V_loc_channel_full_n)) then 
            ap_chn_write_svm_classifier_Block_proc_U0_s_in_2_V_loc_channel <= ap_const_logic_0;
        else 
            ap_chn_write_svm_classifier_Block_proc_U0_s_in_2_V_loc_channel <= svm_classifier_Block_proc_U0_ap_done;
        end if; 
    end process;


    ap_chn_write_svm_classifier_Block_proc_U0_s_in_3_V_loc_channel_assign_proc : process(svm_classifier_Block_proc_U0_ap_done, ap_reg_s_in_3_V_loc_channel_full_n)
    begin
        if ((ap_const_logic_1 = ap_reg_s_in_3_V_loc_channel_full_n)) then 
            ap_chn_write_svm_classifier_Block_proc_U0_s_in_3_V_loc_channel <= ap_const_logic_0;
        else 
            ap_chn_write_svm_classifier_Block_proc_U0_s_in_3_V_loc_channel <= svm_classifier_Block_proc_U0_ap_done;
        end if; 
    end process;


    ap_chn_write_svm_classifier_Block_proc_U0_s_in_4_V_loc_channel_assign_proc : process(svm_classifier_Block_proc_U0_ap_done, ap_reg_s_in_4_V_loc_channel_full_n)
    begin
        if ((ap_const_logic_1 = ap_reg_s_in_4_V_loc_channel_full_n)) then 
            ap_chn_write_svm_classifier_Block_proc_U0_s_in_4_V_loc_channel <= ap_const_logic_0;
        else 
            ap_chn_write_svm_classifier_Block_proc_U0_s_in_4_V_loc_channel <= svm_classifier_Block_proc_U0_ap_done;
        end if; 
    end process;


    ap_chn_write_svm_classifier_Block_proc_U0_s_in_5_V_loc_channel_assign_proc : process(svm_classifier_Block_proc_U0_ap_done, ap_reg_s_in_5_V_loc_channel_full_n)
    begin
        if ((ap_const_logic_1 = ap_reg_s_in_5_V_loc_channel_full_n)) then 
            ap_chn_write_svm_classifier_Block_proc_U0_s_in_5_V_loc_channel <= ap_const_logic_0;
        else 
            ap_chn_write_svm_classifier_Block_proc_U0_s_in_5_V_loc_channel <= svm_classifier_Block_proc_U0_ap_done;
        end if; 
    end process;


    ap_chn_write_svm_classifier_Block_proc_U0_s_in_6_V_loc_channel_assign_proc : process(svm_classifier_Block_proc_U0_ap_done, ap_reg_s_in_6_V_loc_channel_full_n)
    begin
        if ((ap_const_logic_1 = ap_reg_s_in_6_V_loc_channel_full_n)) then 
            ap_chn_write_svm_classifier_Block_proc_U0_s_in_6_V_loc_channel <= ap_const_logic_0;
        else 
            ap_chn_write_svm_classifier_Block_proc_U0_s_in_6_V_loc_channel <= svm_classifier_Block_proc_U0_ap_done;
        end if; 
    end process;


    ap_chn_write_svm_classifier_Block_proc_U0_s_in_7_V_loc_channel_assign_proc : process(svm_classifier_Block_proc_U0_ap_done, ap_reg_s_in_7_V_loc_channel_full_n)
    begin
        if ((ap_const_logic_1 = ap_reg_s_in_7_V_loc_channel_full_n)) then 
            ap_chn_write_svm_classifier_Block_proc_U0_s_in_7_V_loc_channel <= ap_const_logic_0;
        else 
            ap_chn_write_svm_classifier_Block_proc_U0_s_in_7_V_loc_channel <= svm_classifier_Block_proc_U0_ap_done;
        end if; 
    end process;


    ap_chn_write_svm_classifier_Block_proc_U0_s_in_8_V_loc_channel_assign_proc : process(svm_classifier_Block_proc_U0_ap_done, ap_reg_s_in_8_V_loc_channel_full_n)
    begin
        if ((ap_const_logic_1 = ap_reg_s_in_8_V_loc_channel_full_n)) then 
            ap_chn_write_svm_classifier_Block_proc_U0_s_in_8_V_loc_channel <= ap_const_logic_0;
        else 
            ap_chn_write_svm_classifier_Block_proc_U0_s_in_8_V_loc_channel <= svm_classifier_Block_proc_U0_ap_done;
        end if; 
    end process;


    ap_chn_write_svm_classifier_Block_proc_U0_s_in_9_V_loc_channel_assign_proc : process(svm_classifier_Block_proc_U0_ap_done, ap_reg_s_in_9_V_loc_channel_full_n)
    begin
        if ((ap_const_logic_1 = ap_reg_s_in_9_V_loc_channel_full_n)) then 
            ap_chn_write_svm_classifier_Block_proc_U0_s_in_9_V_loc_channel <= ap_const_logic_0;
        else 
            ap_chn_write_svm_classifier_Block_proc_U0_s_in_9_V_loc_channel <= svm_classifier_Block_proc_U0_ap_done;
        end if; 
    end process;


    ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_0_0_V_loc_channel_assign_proc : process(svm_classifier_Loop_Sum_loop_proc1_U0_ap_done, ap_reg_ch_sums_0_0_V_loc_channel_full_n)
    begin
        if ((ap_const_logic_1 = ap_reg_ch_sums_0_0_V_loc_channel_full_n)) then 
            ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_0_0_V_loc_channel <= ap_const_logic_0;
        else 
            ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_0_0_V_loc_channel <= svm_classifier_Loop_Sum_loop_proc1_U0_ap_done;
        end if; 
    end process;


    ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_1_0_V_loc_channel_assign_proc : process(svm_classifier_Loop_Sum_loop_proc1_U0_ap_done, ap_reg_ch_sums_1_0_V_loc_channel_full_n)
    begin
        if ((ap_const_logic_1 = ap_reg_ch_sums_1_0_V_loc_channel_full_n)) then 
            ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_1_0_V_loc_channel <= ap_const_logic_0;
        else 
            ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_1_0_V_loc_channel <= svm_classifier_Loop_Sum_loop_proc1_U0_ap_done;
        end if; 
    end process;


    ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_2_0_V_loc_channel_assign_proc : process(svm_classifier_Loop_Sum_loop_proc1_U0_ap_done, ap_reg_ch_sums_2_0_V_loc_channel_full_n)
    begin
        if ((ap_const_logic_1 = ap_reg_ch_sums_2_0_V_loc_channel_full_n)) then 
            ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_2_0_V_loc_channel <= ap_const_logic_0;
        else 
            ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_2_0_V_loc_channel <= svm_classifier_Loop_Sum_loop_proc1_U0_ap_done;
        end if; 
    end process;


    ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_3_0_V_loc_channel_assign_proc : process(svm_classifier_Loop_Sum_loop_proc1_U0_ap_done, ap_reg_ch_sums_3_0_V_loc_channel_full_n)
    begin
        if ((ap_const_logic_1 = ap_reg_ch_sums_3_0_V_loc_channel_full_n)) then 
            ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_3_0_V_loc_channel <= ap_const_logic_0;
        else 
            ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_3_0_V_loc_channel <= svm_classifier_Loop_Sum_loop_proc1_U0_ap_done;
        end if; 
    end process;


    ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_4_0_V_loc_channel_assign_proc : process(svm_classifier_Loop_Sum_loop_proc1_U0_ap_done, ap_reg_ch_sums_4_0_V_loc_channel_full_n)
    begin
        if ((ap_const_logic_1 = ap_reg_ch_sums_4_0_V_loc_channel_full_n)) then 
            ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_4_0_V_loc_channel <= ap_const_logic_0;
        else 
            ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_4_0_V_loc_channel <= svm_classifier_Loop_Sum_loop_proc1_U0_ap_done;
        end if; 
    end process;


    ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_5_0_V_loc_channel_assign_proc : process(svm_classifier_Loop_Sum_loop_proc1_U0_ap_done, ap_reg_ch_sums_5_0_V_loc_channel_full_n)
    begin
        if ((ap_const_logic_1 = ap_reg_ch_sums_5_0_V_loc_channel_full_n)) then 
            ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_5_0_V_loc_channel <= ap_const_logic_0;
        else 
            ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_5_0_V_loc_channel <= svm_classifier_Loop_Sum_loop_proc1_U0_ap_done;
        end if; 
    end process;


    ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_10_0_loc_channel_assign_proc : process(svm_classifier_Loop_Sum_loop_proc1_U0_ap_done, ap_reg_ch_sums_V_10_0_loc_channel_full_n)
    begin
        if ((ap_const_logic_1 = ap_reg_ch_sums_V_10_0_loc_channel_full_n)) then 
            ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_10_0_loc_channel <= ap_const_logic_0;
        else 
            ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_10_0_loc_channel <= svm_classifier_Loop_Sum_loop_proc1_U0_ap_done;
        end if; 
    end process;


    ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_11_0_loc_channel_assign_proc : process(svm_classifier_Loop_Sum_loop_proc1_U0_ap_done, ap_reg_ch_sums_V_11_0_loc_channel_full_n)
    begin
        if ((ap_const_logic_1 = ap_reg_ch_sums_V_11_0_loc_channel_full_n)) then 
            ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_11_0_loc_channel <= ap_const_logic_0;
        else 
            ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_11_0_loc_channel <= svm_classifier_Loop_Sum_loop_proc1_U0_ap_done;
        end if; 
    end process;


    ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_12_0_loc_channel_assign_proc : process(svm_classifier_Loop_Sum_loop_proc1_U0_ap_done, ap_reg_ch_sums_V_12_0_loc_channel_full_n)
    begin
        if ((ap_const_logic_1 = ap_reg_ch_sums_V_12_0_loc_channel_full_n)) then 
            ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_12_0_loc_channel <= ap_const_logic_0;
        else 
            ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_12_0_loc_channel <= svm_classifier_Loop_Sum_loop_proc1_U0_ap_done;
        end if; 
    end process;


    ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_13_0_loc_channel_assign_proc : process(svm_classifier_Loop_Sum_loop_proc1_U0_ap_done, ap_reg_ch_sums_V_13_0_loc_channel_full_n)
    begin
        if ((ap_const_logic_1 = ap_reg_ch_sums_V_13_0_loc_channel_full_n)) then 
            ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_13_0_loc_channel <= ap_const_logic_0;
        else 
            ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_13_0_loc_channel <= svm_classifier_Loop_Sum_loop_proc1_U0_ap_done;
        end if; 
    end process;


    ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_14_0_loc_channel_assign_proc : process(svm_classifier_Loop_Sum_loop_proc1_U0_ap_done, ap_reg_ch_sums_V_14_0_loc_channel_full_n)
    begin
        if ((ap_const_logic_1 = ap_reg_ch_sums_V_14_0_loc_channel_full_n)) then 
            ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_14_0_loc_channel <= ap_const_logic_0;
        else 
            ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_14_0_loc_channel <= svm_classifier_Loop_Sum_loop_proc1_U0_ap_done;
        end if; 
    end process;


    ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_15_0_loc_channel_assign_proc : process(svm_classifier_Loop_Sum_loop_proc1_U0_ap_done, ap_reg_ch_sums_V_15_0_loc_channel_full_n)
    begin
        if ((ap_const_logic_1 = ap_reg_ch_sums_V_15_0_loc_channel_full_n)) then 
            ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_15_0_loc_channel <= ap_const_logic_0;
        else 
            ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_15_0_loc_channel <= svm_classifier_Loop_Sum_loop_proc1_U0_ap_done;
        end if; 
    end process;


    ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_16_0_loc_channel_assign_proc : process(svm_classifier_Loop_Sum_loop_proc1_U0_ap_done, ap_reg_ch_sums_V_16_0_loc_channel_full_n)
    begin
        if ((ap_const_logic_1 = ap_reg_ch_sums_V_16_0_loc_channel_full_n)) then 
            ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_16_0_loc_channel <= ap_const_logic_0;
        else 
            ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_16_0_loc_channel <= svm_classifier_Loop_Sum_loop_proc1_U0_ap_done;
        end if; 
    end process;


    ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_17_0_loc_channel_assign_proc : process(svm_classifier_Loop_Sum_loop_proc1_U0_ap_done, ap_reg_ch_sums_V_17_0_loc_channel_full_n)
    begin
        if ((ap_const_logic_1 = ap_reg_ch_sums_V_17_0_loc_channel_full_n)) then 
            ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_17_0_loc_channel <= ap_const_logic_0;
        else 
            ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_17_0_loc_channel <= svm_classifier_Loop_Sum_loop_proc1_U0_ap_done;
        end if; 
    end process;


    ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_6_0_loc_channel_assign_proc : process(svm_classifier_Loop_Sum_loop_proc1_U0_ap_done, ap_reg_ch_sums_V_6_0_loc_channel_full_n)
    begin
        if ((ap_const_logic_1 = ap_reg_ch_sums_V_6_0_loc_channel_full_n)) then 
            ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_6_0_loc_channel <= ap_const_logic_0;
        else 
            ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_6_0_loc_channel <= svm_classifier_Loop_Sum_loop_proc1_U0_ap_done;
        end if; 
    end process;


    ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_7_0_loc_channel_assign_proc : process(svm_classifier_Loop_Sum_loop_proc1_U0_ap_done, ap_reg_ch_sums_V_7_0_loc_channel_full_n)
    begin
        if ((ap_const_logic_1 = ap_reg_ch_sums_V_7_0_loc_channel_full_n)) then 
            ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_7_0_loc_channel <= ap_const_logic_0;
        else 
            ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_7_0_loc_channel <= svm_classifier_Loop_Sum_loop_proc1_U0_ap_done;
        end if; 
    end process;


    ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_8_0_loc_channel_assign_proc : process(svm_classifier_Loop_Sum_loop_proc1_U0_ap_done, ap_reg_ch_sums_V_8_0_loc_channel_full_n)
    begin
        if ((ap_const_logic_1 = ap_reg_ch_sums_V_8_0_loc_channel_full_n)) then 
            ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_8_0_loc_channel <= ap_const_logic_0;
        else 
            ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_8_0_loc_channel <= svm_classifier_Loop_Sum_loop_proc1_U0_ap_done;
        end if; 
    end process;


    ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_9_0_loc_channel_assign_proc : process(svm_classifier_Loop_Sum_loop_proc1_U0_ap_done, ap_reg_ch_sums_V_9_0_loc_channel_full_n)
    begin
        if ((ap_const_logic_1 = ap_reg_ch_sums_V_9_0_loc_channel_full_n)) then 
            ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_9_0_loc_channel <= ap_const_logic_0;
        else 
            ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_9_0_loc_channel <= svm_classifier_Loop_Sum_loop_proc1_U0_ap_done;
        end if; 
    end process;

    ap_done <= ap_sig_hs_done;

    ap_idle_assign_proc : process(svm_classifier_svm_classifier_entry3_U0_ap_idle, svm_classifier_Block_proc_U0_ap_idle, svm_classifier_Loop_Sum_loop_proc1_U0_ap_idle, svm_classifier_Block_preheader_0_proc1_U0_ap_idle, s_in_0_V_loc_channel_empty_n, s_in_1_V_loc_channel_empty_n, s_in_2_V_loc_channel_empty_n, s_in_3_V_loc_channel_empty_n, s_in_4_V_loc_channel_empty_n, s_in_5_V_loc_channel_empty_n, s_in_6_V_loc_channel_empty_n, s_in_7_V_loc_channel_empty_n, s_in_8_V_loc_channel_empty_n, s_in_9_V_loc_channel_empty_n, s_in_10_V_loc_channel_empty_n, s_in_11_V_loc_channel_empty_n, s_in_12_V_loc_channel_empty_n, s_in_13_V_loc_channel_empty_n, s_in_14_V_loc_channel_empty_n, s_in_15_V_loc_channel_empty_n, ch_sums_V_17_0_loc_channel_empty_n, ch_sums_V_16_0_loc_channel_empty_n, ch_sums_V_15_0_loc_channel_empty_n, ch_sums_V_14_0_loc_channel_empty_n, ch_sums_V_13_0_loc_channel_empty_n, ch_sums_V_12_0_loc_channel_empty_n, ch_sums_V_11_0_loc_channel_empty_n, ch_sums_V_10_0_loc_channel_empty_n, ch_sums_V_9_0_loc_channel_empty_n, ch_sums_V_8_0_loc_channel_empty_n, ch_sums_V_7_0_loc_channel_empty_n, ch_sums_V_6_0_loc_channel_empty_n, ch_sums_0_0_V_loc_channel_empty_n, ch_sums_1_0_V_loc_channel_empty_n, ch_sums_2_0_V_loc_channel_empty_n, ch_sums_3_0_V_loc_channel_empty_n, ch_sums_4_0_V_loc_channel_empty_n, ch_sums_5_0_V_loc_channel_empty_n)
    begin
        if (((ap_const_logic_1 = svm_classifier_svm_classifier_entry3_U0_ap_idle) and (ap_const_logic_1 = svm_classifier_Block_proc_U0_ap_idle) and (ap_const_logic_1 = svm_classifier_Loop_Sum_loop_proc1_U0_ap_idle) and (ap_const_logic_1 = svm_classifier_Block_preheader_0_proc1_U0_ap_idle) and (ap_const_logic_0 = s_in_0_V_loc_channel_empty_n) and (ap_const_logic_0 = s_in_1_V_loc_channel_empty_n) and (ap_const_logic_0 = s_in_2_V_loc_channel_empty_n) and (ap_const_logic_0 = s_in_3_V_loc_channel_empty_n) and (ap_const_logic_0 = s_in_4_V_loc_channel_empty_n) and (ap_const_logic_0 = s_in_5_V_loc_channel_empty_n) and (ap_const_logic_0 = s_in_6_V_loc_channel_empty_n) and (ap_const_logic_0 = s_in_7_V_loc_channel_empty_n) and (ap_const_logic_0 = s_in_8_V_loc_channel_empty_n) and (ap_const_logic_0 = s_in_9_V_loc_channel_empty_n) and (ap_const_logic_0 = s_in_10_V_loc_channel_empty_n) and (ap_const_logic_0 = s_in_11_V_loc_channel_empty_n) and (ap_const_logic_0 = s_in_12_V_loc_channel_empty_n) and (ap_const_logic_0 = s_in_13_V_loc_channel_empty_n) and (ap_const_logic_0 = s_in_14_V_loc_channel_empty_n) and (ap_const_logic_0 = s_in_15_V_loc_channel_empty_n) and (ap_const_logic_0 = ch_sums_V_17_0_loc_channel_empty_n) and (ap_const_logic_0 = ch_sums_V_16_0_loc_channel_empty_n) and (ap_const_logic_0 = ch_sums_V_15_0_loc_channel_empty_n) and (ap_const_logic_0 = ch_sums_V_14_0_loc_channel_empty_n) and (ap_const_logic_0 = ch_sums_V_13_0_loc_channel_empty_n) and (ap_const_logic_0 = ch_sums_V_12_0_loc_channel_empty_n) and (ap_const_logic_0 = ch_sums_V_11_0_loc_channel_empty_n) and (ap_const_logic_0 = ch_sums_V_10_0_loc_channel_empty_n) and (ap_const_logic_0 = ch_sums_V_9_0_loc_channel_empty_n) and (ap_const_logic_0 = ch_sums_V_8_0_loc_channel_empty_n) and (ap_const_logic_0 = ch_sums_V_7_0_loc_channel_empty_n) and (ap_const_logic_0 = ch_sums_V_6_0_loc_channel_empty_n) and (ap_const_logic_0 = ch_sums_0_0_V_loc_channel_empty_n) and (ap_const_logic_0 = ch_sums_1_0_V_loc_channel_empty_n) and (ap_const_logic_0 = ch_sums_2_0_V_loc_channel_empty_n) and (ap_const_logic_0 = ch_sums_3_0_V_loc_channel_empty_n) and (ap_const_logic_0 = ch_sums_4_0_V_loc_channel_empty_n) and (ap_const_logic_0 = ch_sums_5_0_V_loc_channel_empty_n))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= svm_classifier_svm_classifier_entry3_U0_ap_ready;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    ap_sig_ch_sums_0_0_V_loc_channel_full_n_assign_proc : process(ch_sums_0_0_V_loc_channel_full_n, ap_reg_ch_sums_0_0_V_loc_channel_full_n)
    begin
        if ((ap_const_logic_0 = ap_reg_ch_sums_0_0_V_loc_channel_full_n)) then 
            ap_sig_ch_sums_0_0_V_loc_channel_full_n <= ch_sums_0_0_V_loc_channel_full_n;
        else 
            ap_sig_ch_sums_0_0_V_loc_channel_full_n <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ch_sums_1_0_V_loc_channel_full_n_assign_proc : process(ch_sums_1_0_V_loc_channel_full_n, ap_reg_ch_sums_1_0_V_loc_channel_full_n)
    begin
        if ((ap_const_logic_0 = ap_reg_ch_sums_1_0_V_loc_channel_full_n)) then 
            ap_sig_ch_sums_1_0_V_loc_channel_full_n <= ch_sums_1_0_V_loc_channel_full_n;
        else 
            ap_sig_ch_sums_1_0_V_loc_channel_full_n <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ch_sums_2_0_V_loc_channel_full_n_assign_proc : process(ch_sums_2_0_V_loc_channel_full_n, ap_reg_ch_sums_2_0_V_loc_channel_full_n)
    begin
        if ((ap_const_logic_0 = ap_reg_ch_sums_2_0_V_loc_channel_full_n)) then 
            ap_sig_ch_sums_2_0_V_loc_channel_full_n <= ch_sums_2_0_V_loc_channel_full_n;
        else 
            ap_sig_ch_sums_2_0_V_loc_channel_full_n <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ch_sums_3_0_V_loc_channel_full_n_assign_proc : process(ch_sums_3_0_V_loc_channel_full_n, ap_reg_ch_sums_3_0_V_loc_channel_full_n)
    begin
        if ((ap_const_logic_0 = ap_reg_ch_sums_3_0_V_loc_channel_full_n)) then 
            ap_sig_ch_sums_3_0_V_loc_channel_full_n <= ch_sums_3_0_V_loc_channel_full_n;
        else 
            ap_sig_ch_sums_3_0_V_loc_channel_full_n <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ch_sums_4_0_V_loc_channel_full_n_assign_proc : process(ch_sums_4_0_V_loc_channel_full_n, ap_reg_ch_sums_4_0_V_loc_channel_full_n)
    begin
        if ((ap_const_logic_0 = ap_reg_ch_sums_4_0_V_loc_channel_full_n)) then 
            ap_sig_ch_sums_4_0_V_loc_channel_full_n <= ch_sums_4_0_V_loc_channel_full_n;
        else 
            ap_sig_ch_sums_4_0_V_loc_channel_full_n <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ch_sums_5_0_V_loc_channel_full_n_assign_proc : process(ch_sums_5_0_V_loc_channel_full_n, ap_reg_ch_sums_5_0_V_loc_channel_full_n)
    begin
        if ((ap_const_logic_0 = ap_reg_ch_sums_5_0_V_loc_channel_full_n)) then 
            ap_sig_ch_sums_5_0_V_loc_channel_full_n <= ch_sums_5_0_V_loc_channel_full_n;
        else 
            ap_sig_ch_sums_5_0_V_loc_channel_full_n <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ch_sums_V_10_0_loc_channel_full_n_assign_proc : process(ch_sums_V_10_0_loc_channel_full_n, ap_reg_ch_sums_V_10_0_loc_channel_full_n)
    begin
        if ((ap_const_logic_0 = ap_reg_ch_sums_V_10_0_loc_channel_full_n)) then 
            ap_sig_ch_sums_V_10_0_loc_channel_full_n <= ch_sums_V_10_0_loc_channel_full_n;
        else 
            ap_sig_ch_sums_V_10_0_loc_channel_full_n <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ch_sums_V_11_0_loc_channel_full_n_assign_proc : process(ch_sums_V_11_0_loc_channel_full_n, ap_reg_ch_sums_V_11_0_loc_channel_full_n)
    begin
        if ((ap_const_logic_0 = ap_reg_ch_sums_V_11_0_loc_channel_full_n)) then 
            ap_sig_ch_sums_V_11_0_loc_channel_full_n <= ch_sums_V_11_0_loc_channel_full_n;
        else 
            ap_sig_ch_sums_V_11_0_loc_channel_full_n <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ch_sums_V_12_0_loc_channel_full_n_assign_proc : process(ch_sums_V_12_0_loc_channel_full_n, ap_reg_ch_sums_V_12_0_loc_channel_full_n)
    begin
        if ((ap_const_logic_0 = ap_reg_ch_sums_V_12_0_loc_channel_full_n)) then 
            ap_sig_ch_sums_V_12_0_loc_channel_full_n <= ch_sums_V_12_0_loc_channel_full_n;
        else 
            ap_sig_ch_sums_V_12_0_loc_channel_full_n <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ch_sums_V_13_0_loc_channel_full_n_assign_proc : process(ch_sums_V_13_0_loc_channel_full_n, ap_reg_ch_sums_V_13_0_loc_channel_full_n)
    begin
        if ((ap_const_logic_0 = ap_reg_ch_sums_V_13_0_loc_channel_full_n)) then 
            ap_sig_ch_sums_V_13_0_loc_channel_full_n <= ch_sums_V_13_0_loc_channel_full_n;
        else 
            ap_sig_ch_sums_V_13_0_loc_channel_full_n <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ch_sums_V_14_0_loc_channel_full_n_assign_proc : process(ch_sums_V_14_0_loc_channel_full_n, ap_reg_ch_sums_V_14_0_loc_channel_full_n)
    begin
        if ((ap_const_logic_0 = ap_reg_ch_sums_V_14_0_loc_channel_full_n)) then 
            ap_sig_ch_sums_V_14_0_loc_channel_full_n <= ch_sums_V_14_0_loc_channel_full_n;
        else 
            ap_sig_ch_sums_V_14_0_loc_channel_full_n <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ch_sums_V_15_0_loc_channel_full_n_assign_proc : process(ch_sums_V_15_0_loc_channel_full_n, ap_reg_ch_sums_V_15_0_loc_channel_full_n)
    begin
        if ((ap_const_logic_0 = ap_reg_ch_sums_V_15_0_loc_channel_full_n)) then 
            ap_sig_ch_sums_V_15_0_loc_channel_full_n <= ch_sums_V_15_0_loc_channel_full_n;
        else 
            ap_sig_ch_sums_V_15_0_loc_channel_full_n <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ch_sums_V_16_0_loc_channel_full_n_assign_proc : process(ch_sums_V_16_0_loc_channel_full_n, ap_reg_ch_sums_V_16_0_loc_channel_full_n)
    begin
        if ((ap_const_logic_0 = ap_reg_ch_sums_V_16_0_loc_channel_full_n)) then 
            ap_sig_ch_sums_V_16_0_loc_channel_full_n <= ch_sums_V_16_0_loc_channel_full_n;
        else 
            ap_sig_ch_sums_V_16_0_loc_channel_full_n <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ch_sums_V_17_0_loc_channel_full_n_assign_proc : process(ch_sums_V_17_0_loc_channel_full_n, ap_reg_ch_sums_V_17_0_loc_channel_full_n)
    begin
        if ((ap_const_logic_0 = ap_reg_ch_sums_V_17_0_loc_channel_full_n)) then 
            ap_sig_ch_sums_V_17_0_loc_channel_full_n <= ch_sums_V_17_0_loc_channel_full_n;
        else 
            ap_sig_ch_sums_V_17_0_loc_channel_full_n <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ch_sums_V_6_0_loc_channel_full_n_assign_proc : process(ch_sums_V_6_0_loc_channel_full_n, ap_reg_ch_sums_V_6_0_loc_channel_full_n)
    begin
        if ((ap_const_logic_0 = ap_reg_ch_sums_V_6_0_loc_channel_full_n)) then 
            ap_sig_ch_sums_V_6_0_loc_channel_full_n <= ch_sums_V_6_0_loc_channel_full_n;
        else 
            ap_sig_ch_sums_V_6_0_loc_channel_full_n <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ch_sums_V_7_0_loc_channel_full_n_assign_proc : process(ch_sums_V_7_0_loc_channel_full_n, ap_reg_ch_sums_V_7_0_loc_channel_full_n)
    begin
        if ((ap_const_logic_0 = ap_reg_ch_sums_V_7_0_loc_channel_full_n)) then 
            ap_sig_ch_sums_V_7_0_loc_channel_full_n <= ch_sums_V_7_0_loc_channel_full_n;
        else 
            ap_sig_ch_sums_V_7_0_loc_channel_full_n <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ch_sums_V_8_0_loc_channel_full_n_assign_proc : process(ch_sums_V_8_0_loc_channel_full_n, ap_reg_ch_sums_V_8_0_loc_channel_full_n)
    begin
        if ((ap_const_logic_0 = ap_reg_ch_sums_V_8_0_loc_channel_full_n)) then 
            ap_sig_ch_sums_V_8_0_loc_channel_full_n <= ch_sums_V_8_0_loc_channel_full_n;
        else 
            ap_sig_ch_sums_V_8_0_loc_channel_full_n <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ch_sums_V_9_0_loc_channel_full_n_assign_proc : process(ch_sums_V_9_0_loc_channel_full_n, ap_reg_ch_sums_V_9_0_loc_channel_full_n)
    begin
        if ((ap_const_logic_0 = ap_reg_ch_sums_V_9_0_loc_channel_full_n)) then 
            ap_sig_ch_sums_V_9_0_loc_channel_full_n <= ch_sums_V_9_0_loc_channel_full_n;
        else 
            ap_sig_ch_sums_V_9_0_loc_channel_full_n <= ap_const_logic_1;
        end if; 
    end process;

    ap_sig_hs_continue <= ap_const_logic_1;

    ap_sig_hs_done_assign_proc : process(svm_classifier_Block_preheader_0_proc1_U0_ap_done)
    begin
        if ((ap_const_logic_1 = svm_classifier_Block_preheader_0_proc1_U0_ap_done)) then 
            ap_sig_hs_done <= ap_const_logic_1;
        else 
            ap_sig_hs_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_sig_hs_ready <= svm_classifier_svm_classifier_entry3_U0_ap_ready;

    ap_sig_s_in_0_V_loc_channel_full_n_assign_proc : process(s_in_0_V_loc_channel_full_n, ap_reg_s_in_0_V_loc_channel_full_n)
    begin
        if ((ap_const_logic_0 = ap_reg_s_in_0_V_loc_channel_full_n)) then 
            ap_sig_s_in_0_V_loc_channel_full_n <= s_in_0_V_loc_channel_full_n;
        else 
            ap_sig_s_in_0_V_loc_channel_full_n <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_s_in_10_V_loc_channel_full_n_assign_proc : process(s_in_10_V_loc_channel_full_n, ap_reg_s_in_10_V_loc_channel_full_n)
    begin
        if ((ap_const_logic_0 = ap_reg_s_in_10_V_loc_channel_full_n)) then 
            ap_sig_s_in_10_V_loc_channel_full_n <= s_in_10_V_loc_channel_full_n;
        else 
            ap_sig_s_in_10_V_loc_channel_full_n <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_s_in_11_V_loc_channel_full_n_assign_proc : process(s_in_11_V_loc_channel_full_n, ap_reg_s_in_11_V_loc_channel_full_n)
    begin
        if ((ap_const_logic_0 = ap_reg_s_in_11_V_loc_channel_full_n)) then 
            ap_sig_s_in_11_V_loc_channel_full_n <= s_in_11_V_loc_channel_full_n;
        else 
            ap_sig_s_in_11_V_loc_channel_full_n <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_s_in_12_V_loc_channel_full_n_assign_proc : process(s_in_12_V_loc_channel_full_n, ap_reg_s_in_12_V_loc_channel_full_n)
    begin
        if ((ap_const_logic_0 = ap_reg_s_in_12_V_loc_channel_full_n)) then 
            ap_sig_s_in_12_V_loc_channel_full_n <= s_in_12_V_loc_channel_full_n;
        else 
            ap_sig_s_in_12_V_loc_channel_full_n <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_s_in_13_V_loc_channel_full_n_assign_proc : process(s_in_13_V_loc_channel_full_n, ap_reg_s_in_13_V_loc_channel_full_n)
    begin
        if ((ap_const_logic_0 = ap_reg_s_in_13_V_loc_channel_full_n)) then 
            ap_sig_s_in_13_V_loc_channel_full_n <= s_in_13_V_loc_channel_full_n;
        else 
            ap_sig_s_in_13_V_loc_channel_full_n <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_s_in_14_V_loc_channel_full_n_assign_proc : process(s_in_14_V_loc_channel_full_n, ap_reg_s_in_14_V_loc_channel_full_n)
    begin
        if ((ap_const_logic_0 = ap_reg_s_in_14_V_loc_channel_full_n)) then 
            ap_sig_s_in_14_V_loc_channel_full_n <= s_in_14_V_loc_channel_full_n;
        else 
            ap_sig_s_in_14_V_loc_channel_full_n <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_s_in_15_V_loc_channel_full_n_assign_proc : process(s_in_15_V_loc_channel_full_n, ap_reg_s_in_15_V_loc_channel_full_n)
    begin
        if ((ap_const_logic_0 = ap_reg_s_in_15_V_loc_channel_full_n)) then 
            ap_sig_s_in_15_V_loc_channel_full_n <= s_in_15_V_loc_channel_full_n;
        else 
            ap_sig_s_in_15_V_loc_channel_full_n <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_s_in_1_V_loc_channel_full_n_assign_proc : process(s_in_1_V_loc_channel_full_n, ap_reg_s_in_1_V_loc_channel_full_n)
    begin
        if ((ap_const_logic_0 = ap_reg_s_in_1_V_loc_channel_full_n)) then 
            ap_sig_s_in_1_V_loc_channel_full_n <= s_in_1_V_loc_channel_full_n;
        else 
            ap_sig_s_in_1_V_loc_channel_full_n <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_s_in_2_V_loc_channel_full_n_assign_proc : process(s_in_2_V_loc_channel_full_n, ap_reg_s_in_2_V_loc_channel_full_n)
    begin
        if ((ap_const_logic_0 = ap_reg_s_in_2_V_loc_channel_full_n)) then 
            ap_sig_s_in_2_V_loc_channel_full_n <= s_in_2_V_loc_channel_full_n;
        else 
            ap_sig_s_in_2_V_loc_channel_full_n <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_s_in_3_V_loc_channel_full_n_assign_proc : process(s_in_3_V_loc_channel_full_n, ap_reg_s_in_3_V_loc_channel_full_n)
    begin
        if ((ap_const_logic_0 = ap_reg_s_in_3_V_loc_channel_full_n)) then 
            ap_sig_s_in_3_V_loc_channel_full_n <= s_in_3_V_loc_channel_full_n;
        else 
            ap_sig_s_in_3_V_loc_channel_full_n <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_s_in_4_V_loc_channel_full_n_assign_proc : process(s_in_4_V_loc_channel_full_n, ap_reg_s_in_4_V_loc_channel_full_n)
    begin
        if ((ap_const_logic_0 = ap_reg_s_in_4_V_loc_channel_full_n)) then 
            ap_sig_s_in_4_V_loc_channel_full_n <= s_in_4_V_loc_channel_full_n;
        else 
            ap_sig_s_in_4_V_loc_channel_full_n <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_s_in_5_V_loc_channel_full_n_assign_proc : process(s_in_5_V_loc_channel_full_n, ap_reg_s_in_5_V_loc_channel_full_n)
    begin
        if ((ap_const_logic_0 = ap_reg_s_in_5_V_loc_channel_full_n)) then 
            ap_sig_s_in_5_V_loc_channel_full_n <= s_in_5_V_loc_channel_full_n;
        else 
            ap_sig_s_in_5_V_loc_channel_full_n <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_s_in_6_V_loc_channel_full_n_assign_proc : process(s_in_6_V_loc_channel_full_n, ap_reg_s_in_6_V_loc_channel_full_n)
    begin
        if ((ap_const_logic_0 = ap_reg_s_in_6_V_loc_channel_full_n)) then 
            ap_sig_s_in_6_V_loc_channel_full_n <= s_in_6_V_loc_channel_full_n;
        else 
            ap_sig_s_in_6_V_loc_channel_full_n <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_s_in_7_V_loc_channel_full_n_assign_proc : process(s_in_7_V_loc_channel_full_n, ap_reg_s_in_7_V_loc_channel_full_n)
    begin
        if ((ap_const_logic_0 = ap_reg_s_in_7_V_loc_channel_full_n)) then 
            ap_sig_s_in_7_V_loc_channel_full_n <= s_in_7_V_loc_channel_full_n;
        else 
            ap_sig_s_in_7_V_loc_channel_full_n <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_s_in_8_V_loc_channel_full_n_assign_proc : process(s_in_8_V_loc_channel_full_n, ap_reg_s_in_8_V_loc_channel_full_n)
    begin
        if ((ap_const_logic_0 = ap_reg_s_in_8_V_loc_channel_full_n)) then 
            ap_sig_s_in_8_V_loc_channel_full_n <= s_in_8_V_loc_channel_full_n;
        else 
            ap_sig_s_in_8_V_loc_channel_full_n <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_s_in_9_V_loc_channel_full_n_assign_proc : process(s_in_9_V_loc_channel_full_n, ap_reg_s_in_9_V_loc_channel_full_n)
    begin
        if ((ap_const_logic_0 = ap_reg_s_in_9_V_loc_channel_full_n)) then 
            ap_sig_s_in_9_V_loc_channel_full_n <= s_in_9_V_loc_channel_full_n;
        else 
            ap_sig_s_in_9_V_loc_channel_full_n <= ap_const_logic_1;
        end if; 
    end process;

    out_r <= svm_classifier_Block_preheader_0_proc1_U0_out_r(0);
    svm_classifier_Block_preheader_0_proc1_U0_ap_continue <= ap_const_logic_1;
    svm_classifier_Block_preheader_0_proc1_U0_ap_start <= (ch_sums_V_17_0_loc_channel_empty_n and ch_sums_V_16_0_loc_channel_empty_n and ch_sums_V_15_0_loc_channel_empty_n and ch_sums_V_14_0_loc_channel_empty_n and ch_sums_V_13_0_loc_channel_empty_n and ch_sums_V_12_0_loc_channel_empty_n and ch_sums_V_11_0_loc_channel_empty_n and ch_sums_V_10_0_loc_channel_empty_n and ch_sums_V_9_0_loc_channel_empty_n and ch_sums_V_8_0_loc_channel_empty_n and ch_sums_V_7_0_loc_channel_empty_n and ch_sums_V_6_0_loc_channel_empty_n and ch_sums_0_0_V_loc_channel_empty_n and ch_sums_1_0_V_loc_channel_empty_n and ch_sums_2_0_V_loc_channel_empty_n and ch_sums_3_0_V_loc_channel_empty_n and ch_sums_4_0_V_loc_channel_empty_n and ch_sums_5_0_V_loc_channel_empty_n);

    svm_classifier_Block_proc_U0_ap_continue_assign_proc : process(ap_sig_s_in_11_V_loc_channel_full_n, ap_sig_s_in_9_V_loc_channel_full_n, ap_sig_s_in_4_V_loc_channel_full_n, ap_sig_s_in_3_V_loc_channel_full_n, ap_sig_s_in_1_V_loc_channel_full_n, ap_sig_s_in_10_V_loc_channel_full_n, ap_sig_s_in_0_V_loc_channel_full_n, ap_sig_s_in_8_V_loc_channel_full_n, ap_sig_s_in_5_V_loc_channel_full_n, ap_sig_s_in_12_V_loc_channel_full_n, ap_sig_s_in_7_V_loc_channel_full_n, ap_sig_s_in_6_V_loc_channel_full_n, ap_sig_s_in_2_V_loc_channel_full_n, ap_sig_s_in_13_V_loc_channel_full_n, ap_sig_s_in_14_V_loc_channel_full_n, ap_sig_s_in_15_V_loc_channel_full_n)
    begin
        if (((ap_const_logic_1 = ap_sig_s_in_11_V_loc_channel_full_n) and (ap_const_logic_1 = ap_sig_s_in_9_V_loc_channel_full_n) and (ap_const_logic_1 = ap_sig_s_in_4_V_loc_channel_full_n) and (ap_const_logic_1 = ap_sig_s_in_3_V_loc_channel_full_n) and (ap_const_logic_1 = ap_sig_s_in_1_V_loc_channel_full_n) and (ap_const_logic_1 = ap_sig_s_in_10_V_loc_channel_full_n) and (ap_const_logic_1 = ap_sig_s_in_0_V_loc_channel_full_n) and (ap_const_logic_1 = ap_sig_s_in_8_V_loc_channel_full_n) and (ap_const_logic_1 = ap_sig_s_in_5_V_loc_channel_full_n) and (ap_const_logic_1 = ap_sig_s_in_12_V_loc_channel_full_n) and (ap_const_logic_1 = ap_sig_s_in_7_V_loc_channel_full_n) and (ap_const_logic_1 = ap_sig_s_in_6_V_loc_channel_full_n) and (ap_const_logic_1 = ap_sig_s_in_2_V_loc_channel_full_n) and (ap_const_logic_1 = ap_sig_s_in_13_V_loc_channel_full_n) and (ap_const_logic_1 = ap_sig_s_in_14_V_loc_channel_full_n) and (ap_const_logic_1 = ap_sig_s_in_15_V_loc_channel_full_n))) then 
            svm_classifier_Block_proc_U0_ap_continue <= ap_const_logic_1;
        else 
            svm_classifier_Block_proc_U0_ap_continue <= ap_const_logic_0;
        end if; 
    end process;


    svm_classifier_Loop_Sum_loop_proc1_U0_ap_continue_assign_proc : process(ap_sig_ch_sums_V_14_0_loc_channel_full_n, ap_sig_ch_sums_V_17_0_loc_channel_full_n, ap_sig_ch_sums_V_16_0_loc_channel_full_n, ap_sig_ch_sums_V_15_0_loc_channel_full_n, ap_sig_ch_sums_V_13_0_loc_channel_full_n, ap_sig_ch_sums_V_12_0_loc_channel_full_n, ap_sig_ch_sums_V_11_0_loc_channel_full_n, ap_sig_ch_sums_V_10_0_loc_channel_full_n, ap_sig_ch_sums_V_9_0_loc_channel_full_n, ap_sig_ch_sums_V_8_0_loc_channel_full_n, ap_sig_ch_sums_V_7_0_loc_channel_full_n, ap_sig_ch_sums_V_6_0_loc_channel_full_n, ap_sig_ch_sums_0_0_V_loc_channel_full_n, ap_sig_ch_sums_1_0_V_loc_channel_full_n, ap_sig_ch_sums_2_0_V_loc_channel_full_n, ap_sig_ch_sums_3_0_V_loc_channel_full_n, ap_sig_ch_sums_4_0_V_loc_channel_full_n, ap_sig_ch_sums_5_0_V_loc_channel_full_n)
    begin
        if (((ap_const_logic_1 = ap_sig_ch_sums_V_14_0_loc_channel_full_n) and (ap_const_logic_1 = ap_sig_ch_sums_V_17_0_loc_channel_full_n) and (ap_const_logic_1 = ap_sig_ch_sums_V_16_0_loc_channel_full_n) and (ap_const_logic_1 = ap_sig_ch_sums_V_15_0_loc_channel_full_n) and (ap_const_logic_1 = ap_sig_ch_sums_V_13_0_loc_channel_full_n) and (ap_const_logic_1 = ap_sig_ch_sums_V_12_0_loc_channel_full_n) and (ap_const_logic_1 = ap_sig_ch_sums_V_11_0_loc_channel_full_n) and (ap_const_logic_1 = ap_sig_ch_sums_V_10_0_loc_channel_full_n) and (ap_const_logic_1 = ap_sig_ch_sums_V_9_0_loc_channel_full_n) and (ap_const_logic_1 = ap_sig_ch_sums_V_8_0_loc_channel_full_n) and (ap_const_logic_1 = ap_sig_ch_sums_V_7_0_loc_channel_full_n) and (ap_const_logic_1 = ap_sig_ch_sums_V_6_0_loc_channel_full_n) and (ap_const_logic_1 = ap_sig_ch_sums_0_0_V_loc_channel_full_n) and (ap_const_logic_1 = ap_sig_ch_sums_1_0_V_loc_channel_full_n) and (ap_const_logic_1 = ap_sig_ch_sums_2_0_V_loc_channel_full_n) and (ap_const_logic_1 = ap_sig_ch_sums_3_0_V_loc_channel_full_n) and (ap_const_logic_1 = ap_sig_ch_sums_4_0_V_loc_channel_full_n) and (ap_const_logic_1 = ap_sig_ch_sums_5_0_V_loc_channel_full_n))) then 
            svm_classifier_Loop_Sum_loop_proc1_U0_ap_continue <= ap_const_logic_1;
        else 
            svm_classifier_Loop_Sum_loop_proc1_U0_ap_continue <= ap_const_logic_0;
        end if; 
    end process;

    svm_classifier_Loop_Sum_loop_proc1_U0_ap_start <= (s_in_0_V_loc_channel_empty_n and s_in_1_V_loc_channel_empty_n and s_in_2_V_loc_channel_empty_n and s_in_3_V_loc_channel_empty_n and s_in_4_V_loc_channel_empty_n and s_in_5_V_loc_channel_empty_n and s_in_6_V_loc_channel_empty_n and s_in_7_V_loc_channel_empty_n and s_in_8_V_loc_channel_empty_n and s_in_9_V_loc_channel_empty_n and s_in_10_V_loc_channel_empty_n and s_in_11_V_loc_channel_empty_n and s_in_12_V_loc_channel_empty_n and s_in_13_V_loc_channel_empty_n and s_in_14_V_loc_channel_empty_n and s_in_15_V_loc_channel_empty_n);
    svm_classifier_svm_classifier_entry3_U0_ap_continue <= ap_const_logic_1;
    svm_classifier_svm_classifier_entry3_U0_ap_start <= ap_start;
end behav;
