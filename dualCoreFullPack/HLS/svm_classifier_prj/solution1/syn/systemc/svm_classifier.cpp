// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "svm_classifier.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const int svm_classifier::C_S_AXI_DATA_WIDTH = "100000";
const int svm_classifier::C_S_AXI_WSTRB_WIDTH = "100";
const int svm_classifier::C_S_AXI_ADDR_WIDTH = "100000";
const sc_logic svm_classifier::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic svm_classifier::ap_const_logic_0 = sc_dt::Log_0;
const bool svm_classifier::ap_true = true;

svm_classifier::svm_classifier(sc_module_name name) : sc_module(name), mVcdFile(0) {
    svm_classifier_AXILiteS_s_axi_U = new svm_classifier_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>("svm_classifier_AXILiteS_s_axi_U");
    svm_classifier_AXILiteS_s_axi_U->AWVALID(s_axi_AXILiteS_AWVALID);
    svm_classifier_AXILiteS_s_axi_U->AWREADY(s_axi_AXILiteS_AWREADY);
    svm_classifier_AXILiteS_s_axi_U->AWADDR(s_axi_AXILiteS_AWADDR);
    svm_classifier_AXILiteS_s_axi_U->WVALID(s_axi_AXILiteS_WVALID);
    svm_classifier_AXILiteS_s_axi_U->WREADY(s_axi_AXILiteS_WREADY);
    svm_classifier_AXILiteS_s_axi_U->WDATA(s_axi_AXILiteS_WDATA);
    svm_classifier_AXILiteS_s_axi_U->WSTRB(s_axi_AXILiteS_WSTRB);
    svm_classifier_AXILiteS_s_axi_U->ARVALID(s_axi_AXILiteS_ARVALID);
    svm_classifier_AXILiteS_s_axi_U->ARREADY(s_axi_AXILiteS_ARREADY);
    svm_classifier_AXILiteS_s_axi_U->ARADDR(s_axi_AXILiteS_ARADDR);
    svm_classifier_AXILiteS_s_axi_U->RVALID(s_axi_AXILiteS_RVALID);
    svm_classifier_AXILiteS_s_axi_U->RREADY(s_axi_AXILiteS_RREADY);
    svm_classifier_AXILiteS_s_axi_U->RDATA(s_axi_AXILiteS_RDATA);
    svm_classifier_AXILiteS_s_axi_U->RRESP(s_axi_AXILiteS_RRESP);
    svm_classifier_AXILiteS_s_axi_U->BVALID(s_axi_AXILiteS_BVALID);
    svm_classifier_AXILiteS_s_axi_U->BREADY(s_axi_AXILiteS_BREADY);
    svm_classifier_AXILiteS_s_axi_U->BRESP(s_axi_AXILiteS_BRESP);
    svm_classifier_AXILiteS_s_axi_U->ACLK(ap_clk);
    svm_classifier_AXILiteS_s_axi_U->ARESET(ap_rst_n_inv);
    svm_classifier_AXILiteS_s_axi_U->ACLK_EN(ap_var_for_const0);
    svm_classifier_AXILiteS_s_axi_U->ap_start(ap_start);
    svm_classifier_AXILiteS_s_axi_U->interrupt(interrupt);
    svm_classifier_AXILiteS_s_axi_U->ap_ready(ap_ready);
    svm_classifier_AXILiteS_s_axi_U->ap_done(ap_done);
    svm_classifier_AXILiteS_s_axi_U->ap_idle(ap_idle);
    svm_classifier_AXILiteS_s_axi_U->in_V(in_V);
    svm_classifier_AXILiteS_s_axi_U->out_r(out_r);
    svm_classifier_AXILiteS_s_axi_U->out_r_ap_vld(svm_classifier_Block_preheader_0_proc1_U0_out_r_ap_vld);
    svm_classifier_svm_classifier_entry3_U0 = new svm_classifier_svm_classifier_entry3("svm_classifier_svm_classifier_entry3_U0");
    svm_classifier_svm_classifier_entry3_U0->ap_clk(ap_clk);
    svm_classifier_svm_classifier_entry3_U0->ap_rst(ap_rst_n_inv);
    svm_classifier_svm_classifier_entry3_U0->ap_start(svm_classifier_svm_classifier_entry3_U0_ap_start);
    svm_classifier_svm_classifier_entry3_U0->ap_done(svm_classifier_svm_classifier_entry3_U0_ap_done);
    svm_classifier_svm_classifier_entry3_U0->ap_continue(svm_classifier_svm_classifier_entry3_U0_ap_continue);
    svm_classifier_svm_classifier_entry3_U0->ap_idle(svm_classifier_svm_classifier_entry3_U0_ap_idle);
    svm_classifier_svm_classifier_entry3_U0->ap_ready(svm_classifier_svm_classifier_entry3_U0_ap_ready);
    svm_classifier_svm_classifier_entry3_U0->in_V(in_V);
    svm_classifier_svm_classifier_entry3_U0->in_V_out_din(svm_classifier_svm_classifier_entry3_U0_in_V_out_din);
    svm_classifier_svm_classifier_entry3_U0->in_V_out_full_n(in_V_channel_full_n);
    svm_classifier_svm_classifier_entry3_U0->in_V_out_write(svm_classifier_svm_classifier_entry3_U0_in_V_out_write);
    svm_classifier_Block_proc_U0 = new svm_classifier_Block_proc("svm_classifier_Block_proc_U0");
    svm_classifier_Block_proc_U0->ap_clk(ap_clk);
    svm_classifier_Block_proc_U0->ap_rst(ap_rst_n_inv);
    svm_classifier_Block_proc_U0->ap_start(svm_classifier_Block_proc_U0_ap_start);
    svm_classifier_Block_proc_U0->ap_done(svm_classifier_Block_proc_U0_ap_done);
    svm_classifier_Block_proc_U0->ap_continue(svm_classifier_Block_proc_U0_ap_continue);
    svm_classifier_Block_proc_U0->ap_idle(svm_classifier_Block_proc_U0_ap_idle);
    svm_classifier_Block_proc_U0->ap_ready(svm_classifier_Block_proc_U0_ap_ready);
    svm_classifier_Block_proc_U0->in_V_dout(in_V_channel_dout);
    svm_classifier_Block_proc_U0->in_V_empty_n(in_V_channel_empty_n);
    svm_classifier_Block_proc_U0->in_V_read(svm_classifier_Block_proc_U0_in_V_read);
    svm_classifier_Block_proc_U0->ap_return_0(svm_classifier_Block_proc_U0_ap_return_0);
    svm_classifier_Block_proc_U0->ap_return_1(svm_classifier_Block_proc_U0_ap_return_1);
    svm_classifier_Block_proc_U0->ap_return_2(svm_classifier_Block_proc_U0_ap_return_2);
    svm_classifier_Block_proc_U0->ap_return_3(svm_classifier_Block_proc_U0_ap_return_3);
    svm_classifier_Block_proc_U0->ap_return_4(svm_classifier_Block_proc_U0_ap_return_4);
    svm_classifier_Block_proc_U0->ap_return_5(svm_classifier_Block_proc_U0_ap_return_5);
    svm_classifier_Block_proc_U0->ap_return_6(svm_classifier_Block_proc_U0_ap_return_6);
    svm_classifier_Block_proc_U0->ap_return_7(svm_classifier_Block_proc_U0_ap_return_7);
    svm_classifier_Block_proc_U0->ap_return_8(svm_classifier_Block_proc_U0_ap_return_8);
    svm_classifier_Block_proc_U0->ap_return_9(svm_classifier_Block_proc_U0_ap_return_9);
    svm_classifier_Block_proc_U0->ap_return_10(svm_classifier_Block_proc_U0_ap_return_10);
    svm_classifier_Block_proc_U0->ap_return_11(svm_classifier_Block_proc_U0_ap_return_11);
    svm_classifier_Block_proc_U0->ap_return_12(svm_classifier_Block_proc_U0_ap_return_12);
    svm_classifier_Block_proc_U0->ap_return_13(svm_classifier_Block_proc_U0_ap_return_13);
    svm_classifier_Block_proc_U0->ap_return_14(svm_classifier_Block_proc_U0_ap_return_14);
    svm_classifier_Block_proc_U0->ap_return_15(svm_classifier_Block_proc_U0_ap_return_15);
    svm_classifier_Loop_Sum_loop_proc1_U0 = new svm_classifier_Loop_Sum_loop_proc1("svm_classifier_Loop_Sum_loop_proc1_U0");
    svm_classifier_Loop_Sum_loop_proc1_U0->ap_clk(ap_clk);
    svm_classifier_Loop_Sum_loop_proc1_U0->ap_rst(ap_rst_n_inv);
    svm_classifier_Loop_Sum_loop_proc1_U0->ap_start(svm_classifier_Loop_Sum_loop_proc1_U0_ap_start);
    svm_classifier_Loop_Sum_loop_proc1_U0->ap_done(svm_classifier_Loop_Sum_loop_proc1_U0_ap_done);
    svm_classifier_Loop_Sum_loop_proc1_U0->ap_continue(svm_classifier_Loop_Sum_loop_proc1_U0_ap_continue);
    svm_classifier_Loop_Sum_loop_proc1_U0->ap_idle(svm_classifier_Loop_Sum_loop_proc1_U0_ap_idle);
    svm_classifier_Loop_Sum_loop_proc1_U0->ap_ready(svm_classifier_Loop_Sum_loop_proc1_U0_ap_ready);
    svm_classifier_Loop_Sum_loop_proc1_U0->p_read(s_in_0_V_loc_channel_dout);
    svm_classifier_Loop_Sum_loop_proc1_U0->p_read1(s_in_1_V_loc_channel_dout);
    svm_classifier_Loop_Sum_loop_proc1_U0->p_read2(s_in_2_V_loc_channel_dout);
    svm_classifier_Loop_Sum_loop_proc1_U0->p_read3(s_in_3_V_loc_channel_dout);
    svm_classifier_Loop_Sum_loop_proc1_U0->p_read4(s_in_4_V_loc_channel_dout);
    svm_classifier_Loop_Sum_loop_proc1_U0->p_read5(s_in_5_V_loc_channel_dout);
    svm_classifier_Loop_Sum_loop_proc1_U0->p_read6(s_in_6_V_loc_channel_dout);
    svm_classifier_Loop_Sum_loop_proc1_U0->p_read7(s_in_7_V_loc_channel_dout);
    svm_classifier_Loop_Sum_loop_proc1_U0->p_read8(s_in_8_V_loc_channel_dout);
    svm_classifier_Loop_Sum_loop_proc1_U0->p_read9(s_in_9_V_loc_channel_dout);
    svm_classifier_Loop_Sum_loop_proc1_U0->p_read10(s_in_10_V_loc_channel_dout);
    svm_classifier_Loop_Sum_loop_proc1_U0->p_read11(s_in_11_V_loc_channel_dout);
    svm_classifier_Loop_Sum_loop_proc1_U0->p_read12(s_in_12_V_loc_channel_dout);
    svm_classifier_Loop_Sum_loop_proc1_U0->p_read13(s_in_13_V_loc_channel_dout);
    svm_classifier_Loop_Sum_loop_proc1_U0->p_read14(s_in_14_V_loc_channel_dout);
    svm_classifier_Loop_Sum_loop_proc1_U0->p_read15(s_in_15_V_loc_channel_dout);
    svm_classifier_Loop_Sum_loop_proc1_U0->ap_return_0(svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_0);
    svm_classifier_Loop_Sum_loop_proc1_U0->ap_return_1(svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_1);
    svm_classifier_Loop_Sum_loop_proc1_U0->ap_return_2(svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_2);
    svm_classifier_Loop_Sum_loop_proc1_U0->ap_return_3(svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_3);
    svm_classifier_Loop_Sum_loop_proc1_U0->ap_return_4(svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_4);
    svm_classifier_Loop_Sum_loop_proc1_U0->ap_return_5(svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_5);
    svm_classifier_Loop_Sum_loop_proc1_U0->ap_return_6(svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_6);
    svm_classifier_Loop_Sum_loop_proc1_U0->ap_return_7(svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_7);
    svm_classifier_Loop_Sum_loop_proc1_U0->ap_return_8(svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_8);
    svm_classifier_Block_preheader_0_proc1_U0 = new svm_classifier_Block_preheader_0_proc1("svm_classifier_Block_preheader_0_proc1_U0");
    svm_classifier_Block_preheader_0_proc1_U0->ap_clk(ap_clk);
    svm_classifier_Block_preheader_0_proc1_U0->ap_rst(ap_rst_n_inv);
    svm_classifier_Block_preheader_0_proc1_U0->ap_start(svm_classifier_Block_preheader_0_proc1_U0_ap_start);
    svm_classifier_Block_preheader_0_proc1_U0->ap_done(svm_classifier_Block_preheader_0_proc1_U0_ap_done);
    svm_classifier_Block_preheader_0_proc1_U0->ap_continue(svm_classifier_Block_preheader_0_proc1_U0_ap_continue);
    svm_classifier_Block_preheader_0_proc1_U0->ap_idle(svm_classifier_Block_preheader_0_proc1_U0_ap_idle);
    svm_classifier_Block_preheader_0_proc1_U0->ap_ready(svm_classifier_Block_preheader_0_proc1_U0_ap_ready);
    svm_classifier_Block_preheader_0_proc1_U0->p_read(ch_sums_1_V_loc_channel_dout);
    svm_classifier_Block_preheader_0_proc1_U0->p_read1(ch_sums_0_V_loc_channel_dout);
    svm_classifier_Block_preheader_0_proc1_U0->p_read2(ch_sums_2_V_loc_channel_dout);
    svm_classifier_Block_preheader_0_proc1_U0->p_read3(ch_sums_3_V_loc_channel_dout);
    svm_classifier_Block_preheader_0_proc1_U0->p_read4(ch_sums_4_V_loc_channel_dout);
    svm_classifier_Block_preheader_0_proc1_U0->p_read5(ch_sums_5_V_loc_channel_dout);
    svm_classifier_Block_preheader_0_proc1_U0->p_read6(ch_sums_V_6_loc_channel_dout);
    svm_classifier_Block_preheader_0_proc1_U0->p_read7(ch_sums_V_7_loc_channel_dout);
    svm_classifier_Block_preheader_0_proc1_U0->p_read8(ch_sums_V_8_loc_channel_dout);
    svm_classifier_Block_preheader_0_proc1_U0->out_r(svm_classifier_Block_preheader_0_proc1_U0_out_r);
    svm_classifier_Block_preheader_0_proc1_U0->out_r_ap_vld(svm_classifier_Block_preheader_0_proc1_U0_out_r_ap_vld);
    in_V_channel_U = new FIFO_svm_classifier_in_V_channel("in_V_channel_U");
    in_V_channel_U->clk(ap_clk);
    in_V_channel_U->reset(ap_rst_n_inv);
    in_V_channel_U->if_read_ce(ap_var_for_const0);
    in_V_channel_U->if_write_ce(ap_var_for_const0);
    in_V_channel_U->if_din(svm_classifier_svm_classifier_entry3_U0_in_V_out_din);
    in_V_channel_U->if_full_n(in_V_channel_full_n);
    in_V_channel_U->if_write(svm_classifier_svm_classifier_entry3_U0_in_V_out_write);
    in_V_channel_U->if_dout(in_V_channel_dout);
    in_V_channel_U->if_empty_n(in_V_channel_empty_n);
    in_V_channel_U->if_read(svm_classifier_Block_proc_U0_in_V_read);
    s_in_0_V_loc_channel_U = new FIFO_svm_classifier_s_in_0_V_loc_channel("s_in_0_V_loc_channel_U");
    s_in_0_V_loc_channel_U->clk(ap_clk);
    s_in_0_V_loc_channel_U->reset(ap_rst_n_inv);
    s_in_0_V_loc_channel_U->if_read_ce(ap_var_for_const0);
    s_in_0_V_loc_channel_U->if_write_ce(ap_var_for_const0);
    s_in_0_V_loc_channel_U->if_din(svm_classifier_Block_proc_U0_ap_return_0);
    s_in_0_V_loc_channel_U->if_full_n(s_in_0_V_loc_channel_full_n);
    s_in_0_V_loc_channel_U->if_write(ap_chn_write_svm_classifier_Block_proc_U0_s_in_0_V_loc_channel);
    s_in_0_V_loc_channel_U->if_dout(s_in_0_V_loc_channel_dout);
    s_in_0_V_loc_channel_U->if_empty_n(s_in_0_V_loc_channel_empty_n);
    s_in_0_V_loc_channel_U->if_read(svm_classifier_Loop_Sum_loop_proc1_U0_ap_ready);
    s_in_1_V_loc_channel_U = new FIFO_svm_classifier_s_in_1_V_loc_channel("s_in_1_V_loc_channel_U");
    s_in_1_V_loc_channel_U->clk(ap_clk);
    s_in_1_V_loc_channel_U->reset(ap_rst_n_inv);
    s_in_1_V_loc_channel_U->if_read_ce(ap_var_for_const0);
    s_in_1_V_loc_channel_U->if_write_ce(ap_var_for_const0);
    s_in_1_V_loc_channel_U->if_din(svm_classifier_Block_proc_U0_ap_return_1);
    s_in_1_V_loc_channel_U->if_full_n(s_in_1_V_loc_channel_full_n);
    s_in_1_V_loc_channel_U->if_write(ap_chn_write_svm_classifier_Block_proc_U0_s_in_1_V_loc_channel);
    s_in_1_V_loc_channel_U->if_dout(s_in_1_V_loc_channel_dout);
    s_in_1_V_loc_channel_U->if_empty_n(s_in_1_V_loc_channel_empty_n);
    s_in_1_V_loc_channel_U->if_read(svm_classifier_Loop_Sum_loop_proc1_U0_ap_ready);
    s_in_2_V_loc_channel_U = new FIFO_svm_classifier_s_in_2_V_loc_channel("s_in_2_V_loc_channel_U");
    s_in_2_V_loc_channel_U->clk(ap_clk);
    s_in_2_V_loc_channel_U->reset(ap_rst_n_inv);
    s_in_2_V_loc_channel_U->if_read_ce(ap_var_for_const0);
    s_in_2_V_loc_channel_U->if_write_ce(ap_var_for_const0);
    s_in_2_V_loc_channel_U->if_din(svm_classifier_Block_proc_U0_ap_return_2);
    s_in_2_V_loc_channel_U->if_full_n(s_in_2_V_loc_channel_full_n);
    s_in_2_V_loc_channel_U->if_write(ap_chn_write_svm_classifier_Block_proc_U0_s_in_2_V_loc_channel);
    s_in_2_V_loc_channel_U->if_dout(s_in_2_V_loc_channel_dout);
    s_in_2_V_loc_channel_U->if_empty_n(s_in_2_V_loc_channel_empty_n);
    s_in_2_V_loc_channel_U->if_read(svm_classifier_Loop_Sum_loop_proc1_U0_ap_ready);
    s_in_3_V_loc_channel_U = new FIFO_svm_classifier_s_in_3_V_loc_channel("s_in_3_V_loc_channel_U");
    s_in_3_V_loc_channel_U->clk(ap_clk);
    s_in_3_V_loc_channel_U->reset(ap_rst_n_inv);
    s_in_3_V_loc_channel_U->if_read_ce(ap_var_for_const0);
    s_in_3_V_loc_channel_U->if_write_ce(ap_var_for_const0);
    s_in_3_V_loc_channel_U->if_din(svm_classifier_Block_proc_U0_ap_return_3);
    s_in_3_V_loc_channel_U->if_full_n(s_in_3_V_loc_channel_full_n);
    s_in_3_V_loc_channel_U->if_write(ap_chn_write_svm_classifier_Block_proc_U0_s_in_3_V_loc_channel);
    s_in_3_V_loc_channel_U->if_dout(s_in_3_V_loc_channel_dout);
    s_in_3_V_loc_channel_U->if_empty_n(s_in_3_V_loc_channel_empty_n);
    s_in_3_V_loc_channel_U->if_read(svm_classifier_Loop_Sum_loop_proc1_U0_ap_ready);
    s_in_4_V_loc_channel_U = new FIFO_svm_classifier_s_in_4_V_loc_channel("s_in_4_V_loc_channel_U");
    s_in_4_V_loc_channel_U->clk(ap_clk);
    s_in_4_V_loc_channel_U->reset(ap_rst_n_inv);
    s_in_4_V_loc_channel_U->if_read_ce(ap_var_for_const0);
    s_in_4_V_loc_channel_U->if_write_ce(ap_var_for_const0);
    s_in_4_V_loc_channel_U->if_din(svm_classifier_Block_proc_U0_ap_return_4);
    s_in_4_V_loc_channel_U->if_full_n(s_in_4_V_loc_channel_full_n);
    s_in_4_V_loc_channel_U->if_write(ap_chn_write_svm_classifier_Block_proc_U0_s_in_4_V_loc_channel);
    s_in_4_V_loc_channel_U->if_dout(s_in_4_V_loc_channel_dout);
    s_in_4_V_loc_channel_U->if_empty_n(s_in_4_V_loc_channel_empty_n);
    s_in_4_V_loc_channel_U->if_read(svm_classifier_Loop_Sum_loop_proc1_U0_ap_ready);
    s_in_5_V_loc_channel_U = new FIFO_svm_classifier_s_in_5_V_loc_channel("s_in_5_V_loc_channel_U");
    s_in_5_V_loc_channel_U->clk(ap_clk);
    s_in_5_V_loc_channel_U->reset(ap_rst_n_inv);
    s_in_5_V_loc_channel_U->if_read_ce(ap_var_for_const0);
    s_in_5_V_loc_channel_U->if_write_ce(ap_var_for_const0);
    s_in_5_V_loc_channel_U->if_din(svm_classifier_Block_proc_U0_ap_return_5);
    s_in_5_V_loc_channel_U->if_full_n(s_in_5_V_loc_channel_full_n);
    s_in_5_V_loc_channel_U->if_write(ap_chn_write_svm_classifier_Block_proc_U0_s_in_5_V_loc_channel);
    s_in_5_V_loc_channel_U->if_dout(s_in_5_V_loc_channel_dout);
    s_in_5_V_loc_channel_U->if_empty_n(s_in_5_V_loc_channel_empty_n);
    s_in_5_V_loc_channel_U->if_read(svm_classifier_Loop_Sum_loop_proc1_U0_ap_ready);
    s_in_6_V_loc_channel_U = new FIFO_svm_classifier_s_in_6_V_loc_channel("s_in_6_V_loc_channel_U");
    s_in_6_V_loc_channel_U->clk(ap_clk);
    s_in_6_V_loc_channel_U->reset(ap_rst_n_inv);
    s_in_6_V_loc_channel_U->if_read_ce(ap_var_for_const0);
    s_in_6_V_loc_channel_U->if_write_ce(ap_var_for_const0);
    s_in_6_V_loc_channel_U->if_din(svm_classifier_Block_proc_U0_ap_return_6);
    s_in_6_V_loc_channel_U->if_full_n(s_in_6_V_loc_channel_full_n);
    s_in_6_V_loc_channel_U->if_write(ap_chn_write_svm_classifier_Block_proc_U0_s_in_6_V_loc_channel);
    s_in_6_V_loc_channel_U->if_dout(s_in_6_V_loc_channel_dout);
    s_in_6_V_loc_channel_U->if_empty_n(s_in_6_V_loc_channel_empty_n);
    s_in_6_V_loc_channel_U->if_read(svm_classifier_Loop_Sum_loop_proc1_U0_ap_ready);
    s_in_7_V_loc_channel_U = new FIFO_svm_classifier_s_in_7_V_loc_channel("s_in_7_V_loc_channel_U");
    s_in_7_V_loc_channel_U->clk(ap_clk);
    s_in_7_V_loc_channel_U->reset(ap_rst_n_inv);
    s_in_7_V_loc_channel_U->if_read_ce(ap_var_for_const0);
    s_in_7_V_loc_channel_U->if_write_ce(ap_var_for_const0);
    s_in_7_V_loc_channel_U->if_din(svm_classifier_Block_proc_U0_ap_return_7);
    s_in_7_V_loc_channel_U->if_full_n(s_in_7_V_loc_channel_full_n);
    s_in_7_V_loc_channel_U->if_write(ap_chn_write_svm_classifier_Block_proc_U0_s_in_7_V_loc_channel);
    s_in_7_V_loc_channel_U->if_dout(s_in_7_V_loc_channel_dout);
    s_in_7_V_loc_channel_U->if_empty_n(s_in_7_V_loc_channel_empty_n);
    s_in_7_V_loc_channel_U->if_read(svm_classifier_Loop_Sum_loop_proc1_U0_ap_ready);
    s_in_8_V_loc_channel_U = new FIFO_svm_classifier_s_in_8_V_loc_channel("s_in_8_V_loc_channel_U");
    s_in_8_V_loc_channel_U->clk(ap_clk);
    s_in_8_V_loc_channel_U->reset(ap_rst_n_inv);
    s_in_8_V_loc_channel_U->if_read_ce(ap_var_for_const0);
    s_in_8_V_loc_channel_U->if_write_ce(ap_var_for_const0);
    s_in_8_V_loc_channel_U->if_din(svm_classifier_Block_proc_U0_ap_return_8);
    s_in_8_V_loc_channel_U->if_full_n(s_in_8_V_loc_channel_full_n);
    s_in_8_V_loc_channel_U->if_write(ap_chn_write_svm_classifier_Block_proc_U0_s_in_8_V_loc_channel);
    s_in_8_V_loc_channel_U->if_dout(s_in_8_V_loc_channel_dout);
    s_in_8_V_loc_channel_U->if_empty_n(s_in_8_V_loc_channel_empty_n);
    s_in_8_V_loc_channel_U->if_read(svm_classifier_Loop_Sum_loop_proc1_U0_ap_ready);
    s_in_9_V_loc_channel_U = new FIFO_svm_classifier_s_in_9_V_loc_channel("s_in_9_V_loc_channel_U");
    s_in_9_V_loc_channel_U->clk(ap_clk);
    s_in_9_V_loc_channel_U->reset(ap_rst_n_inv);
    s_in_9_V_loc_channel_U->if_read_ce(ap_var_for_const0);
    s_in_9_V_loc_channel_U->if_write_ce(ap_var_for_const0);
    s_in_9_V_loc_channel_U->if_din(svm_classifier_Block_proc_U0_ap_return_9);
    s_in_9_V_loc_channel_U->if_full_n(s_in_9_V_loc_channel_full_n);
    s_in_9_V_loc_channel_U->if_write(ap_chn_write_svm_classifier_Block_proc_U0_s_in_9_V_loc_channel);
    s_in_9_V_loc_channel_U->if_dout(s_in_9_V_loc_channel_dout);
    s_in_9_V_loc_channel_U->if_empty_n(s_in_9_V_loc_channel_empty_n);
    s_in_9_V_loc_channel_U->if_read(svm_classifier_Loop_Sum_loop_proc1_U0_ap_ready);
    s_in_10_V_loc_channel_U = new FIFO_svm_classifier_s_in_10_V_loc_channel("s_in_10_V_loc_channel_U");
    s_in_10_V_loc_channel_U->clk(ap_clk);
    s_in_10_V_loc_channel_U->reset(ap_rst_n_inv);
    s_in_10_V_loc_channel_U->if_read_ce(ap_var_for_const0);
    s_in_10_V_loc_channel_U->if_write_ce(ap_var_for_const0);
    s_in_10_V_loc_channel_U->if_din(svm_classifier_Block_proc_U0_ap_return_10);
    s_in_10_V_loc_channel_U->if_full_n(s_in_10_V_loc_channel_full_n);
    s_in_10_V_loc_channel_U->if_write(ap_chn_write_svm_classifier_Block_proc_U0_s_in_10_V_loc_channel);
    s_in_10_V_loc_channel_U->if_dout(s_in_10_V_loc_channel_dout);
    s_in_10_V_loc_channel_U->if_empty_n(s_in_10_V_loc_channel_empty_n);
    s_in_10_V_loc_channel_U->if_read(svm_classifier_Loop_Sum_loop_proc1_U0_ap_ready);
    s_in_11_V_loc_channel_U = new FIFO_svm_classifier_s_in_11_V_loc_channel("s_in_11_V_loc_channel_U");
    s_in_11_V_loc_channel_U->clk(ap_clk);
    s_in_11_V_loc_channel_U->reset(ap_rst_n_inv);
    s_in_11_V_loc_channel_U->if_read_ce(ap_var_for_const0);
    s_in_11_V_loc_channel_U->if_write_ce(ap_var_for_const0);
    s_in_11_V_loc_channel_U->if_din(svm_classifier_Block_proc_U0_ap_return_11);
    s_in_11_V_loc_channel_U->if_full_n(s_in_11_V_loc_channel_full_n);
    s_in_11_V_loc_channel_U->if_write(ap_chn_write_svm_classifier_Block_proc_U0_s_in_11_V_loc_channel);
    s_in_11_V_loc_channel_U->if_dout(s_in_11_V_loc_channel_dout);
    s_in_11_V_loc_channel_U->if_empty_n(s_in_11_V_loc_channel_empty_n);
    s_in_11_V_loc_channel_U->if_read(svm_classifier_Loop_Sum_loop_proc1_U0_ap_ready);
    s_in_12_V_loc_channel_U = new FIFO_svm_classifier_s_in_12_V_loc_channel("s_in_12_V_loc_channel_U");
    s_in_12_V_loc_channel_U->clk(ap_clk);
    s_in_12_V_loc_channel_U->reset(ap_rst_n_inv);
    s_in_12_V_loc_channel_U->if_read_ce(ap_var_for_const0);
    s_in_12_V_loc_channel_U->if_write_ce(ap_var_for_const0);
    s_in_12_V_loc_channel_U->if_din(svm_classifier_Block_proc_U0_ap_return_12);
    s_in_12_V_loc_channel_U->if_full_n(s_in_12_V_loc_channel_full_n);
    s_in_12_V_loc_channel_U->if_write(ap_chn_write_svm_classifier_Block_proc_U0_s_in_12_V_loc_channel);
    s_in_12_V_loc_channel_U->if_dout(s_in_12_V_loc_channel_dout);
    s_in_12_V_loc_channel_U->if_empty_n(s_in_12_V_loc_channel_empty_n);
    s_in_12_V_loc_channel_U->if_read(svm_classifier_Loop_Sum_loop_proc1_U0_ap_ready);
    s_in_13_V_loc_channel_U = new FIFO_svm_classifier_s_in_13_V_loc_channel("s_in_13_V_loc_channel_U");
    s_in_13_V_loc_channel_U->clk(ap_clk);
    s_in_13_V_loc_channel_U->reset(ap_rst_n_inv);
    s_in_13_V_loc_channel_U->if_read_ce(ap_var_for_const0);
    s_in_13_V_loc_channel_U->if_write_ce(ap_var_for_const0);
    s_in_13_V_loc_channel_U->if_din(svm_classifier_Block_proc_U0_ap_return_13);
    s_in_13_V_loc_channel_U->if_full_n(s_in_13_V_loc_channel_full_n);
    s_in_13_V_loc_channel_U->if_write(ap_chn_write_svm_classifier_Block_proc_U0_s_in_13_V_loc_channel);
    s_in_13_V_loc_channel_U->if_dout(s_in_13_V_loc_channel_dout);
    s_in_13_V_loc_channel_U->if_empty_n(s_in_13_V_loc_channel_empty_n);
    s_in_13_V_loc_channel_U->if_read(svm_classifier_Loop_Sum_loop_proc1_U0_ap_ready);
    s_in_14_V_loc_channel_U = new FIFO_svm_classifier_s_in_14_V_loc_channel("s_in_14_V_loc_channel_U");
    s_in_14_V_loc_channel_U->clk(ap_clk);
    s_in_14_V_loc_channel_U->reset(ap_rst_n_inv);
    s_in_14_V_loc_channel_U->if_read_ce(ap_var_for_const0);
    s_in_14_V_loc_channel_U->if_write_ce(ap_var_for_const0);
    s_in_14_V_loc_channel_U->if_din(svm_classifier_Block_proc_U0_ap_return_14);
    s_in_14_V_loc_channel_U->if_full_n(s_in_14_V_loc_channel_full_n);
    s_in_14_V_loc_channel_U->if_write(ap_chn_write_svm_classifier_Block_proc_U0_s_in_14_V_loc_channel);
    s_in_14_V_loc_channel_U->if_dout(s_in_14_V_loc_channel_dout);
    s_in_14_V_loc_channel_U->if_empty_n(s_in_14_V_loc_channel_empty_n);
    s_in_14_V_loc_channel_U->if_read(svm_classifier_Loop_Sum_loop_proc1_U0_ap_ready);
    s_in_15_V_loc_channel_U = new FIFO_svm_classifier_s_in_15_V_loc_channel("s_in_15_V_loc_channel_U");
    s_in_15_V_loc_channel_U->clk(ap_clk);
    s_in_15_V_loc_channel_U->reset(ap_rst_n_inv);
    s_in_15_V_loc_channel_U->if_read_ce(ap_var_for_const0);
    s_in_15_V_loc_channel_U->if_write_ce(ap_var_for_const0);
    s_in_15_V_loc_channel_U->if_din(svm_classifier_Block_proc_U0_ap_return_15);
    s_in_15_V_loc_channel_U->if_full_n(s_in_15_V_loc_channel_full_n);
    s_in_15_V_loc_channel_U->if_write(ap_chn_write_svm_classifier_Block_proc_U0_s_in_15_V_loc_channel);
    s_in_15_V_loc_channel_U->if_dout(s_in_15_V_loc_channel_dout);
    s_in_15_V_loc_channel_U->if_empty_n(s_in_15_V_loc_channel_empty_n);
    s_in_15_V_loc_channel_U->if_read(svm_classifier_Loop_Sum_loop_proc1_U0_ap_ready);
    ch_sums_V_8_loc_channel_U = new FIFO_svm_classifier_ch_sums_V_8_loc_channel("ch_sums_V_8_loc_channel_U");
    ch_sums_V_8_loc_channel_U->clk(ap_clk);
    ch_sums_V_8_loc_channel_U->reset(ap_rst_n_inv);
    ch_sums_V_8_loc_channel_U->if_read_ce(ap_var_for_const0);
    ch_sums_V_8_loc_channel_U->if_write_ce(ap_var_for_const0);
    ch_sums_V_8_loc_channel_U->if_din(svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_0);
    ch_sums_V_8_loc_channel_U->if_full_n(ch_sums_V_8_loc_channel_full_n);
    ch_sums_V_8_loc_channel_U->if_write(ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_8_loc_channel);
    ch_sums_V_8_loc_channel_U->if_dout(ch_sums_V_8_loc_channel_dout);
    ch_sums_V_8_loc_channel_U->if_empty_n(ch_sums_V_8_loc_channel_empty_n);
    ch_sums_V_8_loc_channel_U->if_read(svm_classifier_Block_preheader_0_proc1_U0_ap_ready);
    ch_sums_V_7_loc_channel_U = new FIFO_svm_classifier_ch_sums_V_7_loc_channel("ch_sums_V_7_loc_channel_U");
    ch_sums_V_7_loc_channel_U->clk(ap_clk);
    ch_sums_V_7_loc_channel_U->reset(ap_rst_n_inv);
    ch_sums_V_7_loc_channel_U->if_read_ce(ap_var_for_const0);
    ch_sums_V_7_loc_channel_U->if_write_ce(ap_var_for_const0);
    ch_sums_V_7_loc_channel_U->if_din(svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_1);
    ch_sums_V_7_loc_channel_U->if_full_n(ch_sums_V_7_loc_channel_full_n);
    ch_sums_V_7_loc_channel_U->if_write(ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_7_loc_channel);
    ch_sums_V_7_loc_channel_U->if_dout(ch_sums_V_7_loc_channel_dout);
    ch_sums_V_7_loc_channel_U->if_empty_n(ch_sums_V_7_loc_channel_empty_n);
    ch_sums_V_7_loc_channel_U->if_read(svm_classifier_Block_preheader_0_proc1_U0_ap_ready);
    ch_sums_V_6_loc_channel_U = new FIFO_svm_classifier_ch_sums_V_6_loc_channel("ch_sums_V_6_loc_channel_U");
    ch_sums_V_6_loc_channel_U->clk(ap_clk);
    ch_sums_V_6_loc_channel_U->reset(ap_rst_n_inv);
    ch_sums_V_6_loc_channel_U->if_read_ce(ap_var_for_const0);
    ch_sums_V_6_loc_channel_U->if_write_ce(ap_var_for_const0);
    ch_sums_V_6_loc_channel_U->if_din(svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_2);
    ch_sums_V_6_loc_channel_U->if_full_n(ch_sums_V_6_loc_channel_full_n);
    ch_sums_V_6_loc_channel_U->if_write(ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_6_loc_channel);
    ch_sums_V_6_loc_channel_U->if_dout(ch_sums_V_6_loc_channel_dout);
    ch_sums_V_6_loc_channel_U->if_empty_n(ch_sums_V_6_loc_channel_empty_n);
    ch_sums_V_6_loc_channel_U->if_read(svm_classifier_Block_preheader_0_proc1_U0_ap_ready);
    ch_sums_0_V_loc_channel_U = new FIFO_svm_classifier_ch_sums_0_V_loc_channel("ch_sums_0_V_loc_channel_U");
    ch_sums_0_V_loc_channel_U->clk(ap_clk);
    ch_sums_0_V_loc_channel_U->reset(ap_rst_n_inv);
    ch_sums_0_V_loc_channel_U->if_read_ce(ap_var_for_const0);
    ch_sums_0_V_loc_channel_U->if_write_ce(ap_var_for_const0);
    ch_sums_0_V_loc_channel_U->if_din(svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_3);
    ch_sums_0_V_loc_channel_U->if_full_n(ch_sums_0_V_loc_channel_full_n);
    ch_sums_0_V_loc_channel_U->if_write(ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_0_V_loc_channel);
    ch_sums_0_V_loc_channel_U->if_dout(ch_sums_0_V_loc_channel_dout);
    ch_sums_0_V_loc_channel_U->if_empty_n(ch_sums_0_V_loc_channel_empty_n);
    ch_sums_0_V_loc_channel_U->if_read(svm_classifier_Block_preheader_0_proc1_U0_ap_ready);
    ch_sums_1_V_loc_channel_U = new FIFO_svm_classifier_ch_sums_1_V_loc_channel("ch_sums_1_V_loc_channel_U");
    ch_sums_1_V_loc_channel_U->clk(ap_clk);
    ch_sums_1_V_loc_channel_U->reset(ap_rst_n_inv);
    ch_sums_1_V_loc_channel_U->if_read_ce(ap_var_for_const0);
    ch_sums_1_V_loc_channel_U->if_write_ce(ap_var_for_const0);
    ch_sums_1_V_loc_channel_U->if_din(svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_4);
    ch_sums_1_V_loc_channel_U->if_full_n(ch_sums_1_V_loc_channel_full_n);
    ch_sums_1_V_loc_channel_U->if_write(ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_1_V_loc_channel);
    ch_sums_1_V_loc_channel_U->if_dout(ch_sums_1_V_loc_channel_dout);
    ch_sums_1_V_loc_channel_U->if_empty_n(ch_sums_1_V_loc_channel_empty_n);
    ch_sums_1_V_loc_channel_U->if_read(svm_classifier_Block_preheader_0_proc1_U0_ap_ready);
    ch_sums_2_V_loc_channel_U = new FIFO_svm_classifier_ch_sums_2_V_loc_channel("ch_sums_2_V_loc_channel_U");
    ch_sums_2_V_loc_channel_U->clk(ap_clk);
    ch_sums_2_V_loc_channel_U->reset(ap_rst_n_inv);
    ch_sums_2_V_loc_channel_U->if_read_ce(ap_var_for_const0);
    ch_sums_2_V_loc_channel_U->if_write_ce(ap_var_for_const0);
    ch_sums_2_V_loc_channel_U->if_din(svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_5);
    ch_sums_2_V_loc_channel_U->if_full_n(ch_sums_2_V_loc_channel_full_n);
    ch_sums_2_V_loc_channel_U->if_write(ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_2_V_loc_channel);
    ch_sums_2_V_loc_channel_U->if_dout(ch_sums_2_V_loc_channel_dout);
    ch_sums_2_V_loc_channel_U->if_empty_n(ch_sums_2_V_loc_channel_empty_n);
    ch_sums_2_V_loc_channel_U->if_read(svm_classifier_Block_preheader_0_proc1_U0_ap_ready);
    ch_sums_3_V_loc_channel_U = new FIFO_svm_classifier_ch_sums_3_V_loc_channel("ch_sums_3_V_loc_channel_U");
    ch_sums_3_V_loc_channel_U->clk(ap_clk);
    ch_sums_3_V_loc_channel_U->reset(ap_rst_n_inv);
    ch_sums_3_V_loc_channel_U->if_read_ce(ap_var_for_const0);
    ch_sums_3_V_loc_channel_U->if_write_ce(ap_var_for_const0);
    ch_sums_3_V_loc_channel_U->if_din(svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_6);
    ch_sums_3_V_loc_channel_U->if_full_n(ch_sums_3_V_loc_channel_full_n);
    ch_sums_3_V_loc_channel_U->if_write(ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_3_V_loc_channel);
    ch_sums_3_V_loc_channel_U->if_dout(ch_sums_3_V_loc_channel_dout);
    ch_sums_3_V_loc_channel_U->if_empty_n(ch_sums_3_V_loc_channel_empty_n);
    ch_sums_3_V_loc_channel_U->if_read(svm_classifier_Block_preheader_0_proc1_U0_ap_ready);
    ch_sums_4_V_loc_channel_U = new FIFO_svm_classifier_ch_sums_4_V_loc_channel("ch_sums_4_V_loc_channel_U");
    ch_sums_4_V_loc_channel_U->clk(ap_clk);
    ch_sums_4_V_loc_channel_U->reset(ap_rst_n_inv);
    ch_sums_4_V_loc_channel_U->if_read_ce(ap_var_for_const0);
    ch_sums_4_V_loc_channel_U->if_write_ce(ap_var_for_const0);
    ch_sums_4_V_loc_channel_U->if_din(svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_7);
    ch_sums_4_V_loc_channel_U->if_full_n(ch_sums_4_V_loc_channel_full_n);
    ch_sums_4_V_loc_channel_U->if_write(ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_4_V_loc_channel);
    ch_sums_4_V_loc_channel_U->if_dout(ch_sums_4_V_loc_channel_dout);
    ch_sums_4_V_loc_channel_U->if_empty_n(ch_sums_4_V_loc_channel_empty_n);
    ch_sums_4_V_loc_channel_U->if_read(svm_classifier_Block_preheader_0_proc1_U0_ap_ready);
    ch_sums_5_V_loc_channel_U = new FIFO_svm_classifier_ch_sums_5_V_loc_channel("ch_sums_5_V_loc_channel_U");
    ch_sums_5_V_loc_channel_U->clk(ap_clk);
    ch_sums_5_V_loc_channel_U->reset(ap_rst_n_inv);
    ch_sums_5_V_loc_channel_U->if_read_ce(ap_var_for_const0);
    ch_sums_5_V_loc_channel_U->if_write_ce(ap_var_for_const0);
    ch_sums_5_V_loc_channel_U->if_din(svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_8);
    ch_sums_5_V_loc_channel_U->if_full_n(ch_sums_5_V_loc_channel_full_n);
    ch_sums_5_V_loc_channel_U->if_write(ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_5_V_loc_channel);
    ch_sums_5_V_loc_channel_U->if_dout(ch_sums_5_V_loc_channel_dout);
    ch_sums_5_V_loc_channel_U->if_empty_n(ch_sums_5_V_loc_channel_empty_n);
    ch_sums_5_V_loc_channel_U->if_read(svm_classifier_Block_preheader_0_proc1_U0_ap_ready);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_chn_write_svm_classifier_Block_proc_U0_s_in_0_V_loc_channel);
    sensitive << ( svm_classifier_Block_proc_U0_ap_done );
    sensitive << ( ap_reg_s_in_0_V_loc_channel_full_n );

    SC_METHOD(thread_ap_chn_write_svm_classifier_Block_proc_U0_s_in_10_V_loc_channel);
    sensitive << ( svm_classifier_Block_proc_U0_ap_done );
    sensitive << ( ap_reg_s_in_10_V_loc_channel_full_n );

    SC_METHOD(thread_ap_chn_write_svm_classifier_Block_proc_U0_s_in_11_V_loc_channel);
    sensitive << ( svm_classifier_Block_proc_U0_ap_done );
    sensitive << ( ap_reg_s_in_11_V_loc_channel_full_n );

    SC_METHOD(thread_ap_chn_write_svm_classifier_Block_proc_U0_s_in_12_V_loc_channel);
    sensitive << ( svm_classifier_Block_proc_U0_ap_done );
    sensitive << ( ap_reg_s_in_12_V_loc_channel_full_n );

    SC_METHOD(thread_ap_chn_write_svm_classifier_Block_proc_U0_s_in_13_V_loc_channel);
    sensitive << ( svm_classifier_Block_proc_U0_ap_done );
    sensitive << ( ap_reg_s_in_13_V_loc_channel_full_n );

    SC_METHOD(thread_ap_chn_write_svm_classifier_Block_proc_U0_s_in_14_V_loc_channel);
    sensitive << ( svm_classifier_Block_proc_U0_ap_done );
    sensitive << ( ap_reg_s_in_14_V_loc_channel_full_n );

    SC_METHOD(thread_ap_chn_write_svm_classifier_Block_proc_U0_s_in_15_V_loc_channel);
    sensitive << ( svm_classifier_Block_proc_U0_ap_done );
    sensitive << ( ap_reg_s_in_15_V_loc_channel_full_n );

    SC_METHOD(thread_ap_chn_write_svm_classifier_Block_proc_U0_s_in_1_V_loc_channel);
    sensitive << ( svm_classifier_Block_proc_U0_ap_done );
    sensitive << ( ap_reg_s_in_1_V_loc_channel_full_n );

    SC_METHOD(thread_ap_chn_write_svm_classifier_Block_proc_U0_s_in_2_V_loc_channel);
    sensitive << ( svm_classifier_Block_proc_U0_ap_done );
    sensitive << ( ap_reg_s_in_2_V_loc_channel_full_n );

    SC_METHOD(thread_ap_chn_write_svm_classifier_Block_proc_U0_s_in_3_V_loc_channel);
    sensitive << ( svm_classifier_Block_proc_U0_ap_done );
    sensitive << ( ap_reg_s_in_3_V_loc_channel_full_n );

    SC_METHOD(thread_ap_chn_write_svm_classifier_Block_proc_U0_s_in_4_V_loc_channel);
    sensitive << ( svm_classifier_Block_proc_U0_ap_done );
    sensitive << ( ap_reg_s_in_4_V_loc_channel_full_n );

    SC_METHOD(thread_ap_chn_write_svm_classifier_Block_proc_U0_s_in_5_V_loc_channel);
    sensitive << ( svm_classifier_Block_proc_U0_ap_done );
    sensitive << ( ap_reg_s_in_5_V_loc_channel_full_n );

    SC_METHOD(thread_ap_chn_write_svm_classifier_Block_proc_U0_s_in_6_V_loc_channel);
    sensitive << ( svm_classifier_Block_proc_U0_ap_done );
    sensitive << ( ap_reg_s_in_6_V_loc_channel_full_n );

    SC_METHOD(thread_ap_chn_write_svm_classifier_Block_proc_U0_s_in_7_V_loc_channel);
    sensitive << ( svm_classifier_Block_proc_U0_ap_done );
    sensitive << ( ap_reg_s_in_7_V_loc_channel_full_n );

    SC_METHOD(thread_ap_chn_write_svm_classifier_Block_proc_U0_s_in_8_V_loc_channel);
    sensitive << ( svm_classifier_Block_proc_U0_ap_done );
    sensitive << ( ap_reg_s_in_8_V_loc_channel_full_n );

    SC_METHOD(thread_ap_chn_write_svm_classifier_Block_proc_U0_s_in_9_V_loc_channel);
    sensitive << ( svm_classifier_Block_proc_U0_ap_done );
    sensitive << ( ap_reg_s_in_9_V_loc_channel_full_n );

    SC_METHOD(thread_ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_0_V_loc_channel);
    sensitive << ( svm_classifier_Loop_Sum_loop_proc1_U0_ap_done );
    sensitive << ( ap_reg_ch_sums_0_V_loc_channel_full_n );

    SC_METHOD(thread_ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_1_V_loc_channel);
    sensitive << ( svm_classifier_Loop_Sum_loop_proc1_U0_ap_done );
    sensitive << ( ap_reg_ch_sums_1_V_loc_channel_full_n );

    SC_METHOD(thread_ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_2_V_loc_channel);
    sensitive << ( svm_classifier_Loop_Sum_loop_proc1_U0_ap_done );
    sensitive << ( ap_reg_ch_sums_2_V_loc_channel_full_n );

    SC_METHOD(thread_ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_3_V_loc_channel);
    sensitive << ( svm_classifier_Loop_Sum_loop_proc1_U0_ap_done );
    sensitive << ( ap_reg_ch_sums_3_V_loc_channel_full_n );

    SC_METHOD(thread_ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_4_V_loc_channel);
    sensitive << ( svm_classifier_Loop_Sum_loop_proc1_U0_ap_done );
    sensitive << ( ap_reg_ch_sums_4_V_loc_channel_full_n );

    SC_METHOD(thread_ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_5_V_loc_channel);
    sensitive << ( svm_classifier_Loop_Sum_loop_proc1_U0_ap_done );
    sensitive << ( ap_reg_ch_sums_5_V_loc_channel_full_n );

    SC_METHOD(thread_ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_6_loc_channel);
    sensitive << ( svm_classifier_Loop_Sum_loop_proc1_U0_ap_done );
    sensitive << ( ap_reg_ch_sums_V_6_loc_channel_full_n );

    SC_METHOD(thread_ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_7_loc_channel);
    sensitive << ( svm_classifier_Loop_Sum_loop_proc1_U0_ap_done );
    sensitive << ( ap_reg_ch_sums_V_7_loc_channel_full_n );

    SC_METHOD(thread_ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_8_loc_channel);
    sensitive << ( svm_classifier_Loop_Sum_loop_proc1_U0_ap_done );
    sensitive << ( ap_reg_ch_sums_V_8_loc_channel_full_n );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_sig_hs_done );

    SC_METHOD(thread_ap_idle);
    sensitive << ( svm_classifier_svm_classifier_entry3_U0_ap_idle );
    sensitive << ( svm_classifier_Block_proc_U0_ap_idle );
    sensitive << ( svm_classifier_Loop_Sum_loop_proc1_U0_ap_idle );
    sensitive << ( svm_classifier_Block_preheader_0_proc1_U0_ap_idle );
    sensitive << ( s_in_0_V_loc_channel_empty_n );
    sensitive << ( s_in_1_V_loc_channel_empty_n );
    sensitive << ( s_in_2_V_loc_channel_empty_n );
    sensitive << ( s_in_3_V_loc_channel_empty_n );
    sensitive << ( s_in_4_V_loc_channel_empty_n );
    sensitive << ( s_in_5_V_loc_channel_empty_n );
    sensitive << ( s_in_6_V_loc_channel_empty_n );
    sensitive << ( s_in_7_V_loc_channel_empty_n );
    sensitive << ( s_in_8_V_loc_channel_empty_n );
    sensitive << ( s_in_9_V_loc_channel_empty_n );
    sensitive << ( s_in_10_V_loc_channel_empty_n );
    sensitive << ( s_in_11_V_loc_channel_empty_n );
    sensitive << ( s_in_12_V_loc_channel_empty_n );
    sensitive << ( s_in_13_V_loc_channel_empty_n );
    sensitive << ( s_in_14_V_loc_channel_empty_n );
    sensitive << ( s_in_15_V_loc_channel_empty_n );
    sensitive << ( ch_sums_V_8_loc_channel_empty_n );
    sensitive << ( ch_sums_V_7_loc_channel_empty_n );
    sensitive << ( ch_sums_V_6_loc_channel_empty_n );
    sensitive << ( ch_sums_0_V_loc_channel_empty_n );
    sensitive << ( ch_sums_1_V_loc_channel_empty_n );
    sensitive << ( ch_sums_2_V_loc_channel_empty_n );
    sensitive << ( ch_sums_3_V_loc_channel_empty_n );
    sensitive << ( ch_sums_4_V_loc_channel_empty_n );
    sensitive << ( ch_sums_5_V_loc_channel_empty_n );

    SC_METHOD(thread_ap_ready);
    sensitive << ( svm_classifier_svm_classifier_entry3_U0_ap_ready );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sig_ch_sums_0_V_loc_channel_full_n);
    sensitive << ( ch_sums_0_V_loc_channel_full_n );
    sensitive << ( ap_reg_ch_sums_0_V_loc_channel_full_n );

    SC_METHOD(thread_ap_sig_ch_sums_1_V_loc_channel_full_n);
    sensitive << ( ch_sums_1_V_loc_channel_full_n );
    sensitive << ( ap_reg_ch_sums_1_V_loc_channel_full_n );

    SC_METHOD(thread_ap_sig_ch_sums_2_V_loc_channel_full_n);
    sensitive << ( ch_sums_2_V_loc_channel_full_n );
    sensitive << ( ap_reg_ch_sums_2_V_loc_channel_full_n );

    SC_METHOD(thread_ap_sig_ch_sums_3_V_loc_channel_full_n);
    sensitive << ( ch_sums_3_V_loc_channel_full_n );
    sensitive << ( ap_reg_ch_sums_3_V_loc_channel_full_n );

    SC_METHOD(thread_ap_sig_ch_sums_4_V_loc_channel_full_n);
    sensitive << ( ch_sums_4_V_loc_channel_full_n );
    sensitive << ( ap_reg_ch_sums_4_V_loc_channel_full_n );

    SC_METHOD(thread_ap_sig_ch_sums_5_V_loc_channel_full_n);
    sensitive << ( ch_sums_5_V_loc_channel_full_n );
    sensitive << ( ap_reg_ch_sums_5_V_loc_channel_full_n );

    SC_METHOD(thread_ap_sig_ch_sums_V_6_loc_channel_full_n);
    sensitive << ( ch_sums_V_6_loc_channel_full_n );
    sensitive << ( ap_reg_ch_sums_V_6_loc_channel_full_n );

    SC_METHOD(thread_ap_sig_ch_sums_V_7_loc_channel_full_n);
    sensitive << ( ch_sums_V_7_loc_channel_full_n );
    sensitive << ( ap_reg_ch_sums_V_7_loc_channel_full_n );

    SC_METHOD(thread_ap_sig_ch_sums_V_8_loc_channel_full_n);
    sensitive << ( ch_sums_V_8_loc_channel_full_n );
    sensitive << ( ap_reg_ch_sums_V_8_loc_channel_full_n );

    SC_METHOD(thread_ap_sig_hs_continue);

    SC_METHOD(thread_ap_sig_hs_done);
    sensitive << ( svm_classifier_Block_preheader_0_proc1_U0_ap_done );

    SC_METHOD(thread_ap_sig_hs_ready);
    sensitive << ( svm_classifier_svm_classifier_entry3_U0_ap_ready );

    SC_METHOD(thread_ap_sig_s_in_0_V_loc_channel_full_n);
    sensitive << ( s_in_0_V_loc_channel_full_n );
    sensitive << ( ap_reg_s_in_0_V_loc_channel_full_n );

    SC_METHOD(thread_ap_sig_s_in_10_V_loc_channel_full_n);
    sensitive << ( s_in_10_V_loc_channel_full_n );
    sensitive << ( ap_reg_s_in_10_V_loc_channel_full_n );

    SC_METHOD(thread_ap_sig_s_in_11_V_loc_channel_full_n);
    sensitive << ( s_in_11_V_loc_channel_full_n );
    sensitive << ( ap_reg_s_in_11_V_loc_channel_full_n );

    SC_METHOD(thread_ap_sig_s_in_12_V_loc_channel_full_n);
    sensitive << ( s_in_12_V_loc_channel_full_n );
    sensitive << ( ap_reg_s_in_12_V_loc_channel_full_n );

    SC_METHOD(thread_ap_sig_s_in_13_V_loc_channel_full_n);
    sensitive << ( s_in_13_V_loc_channel_full_n );
    sensitive << ( ap_reg_s_in_13_V_loc_channel_full_n );

    SC_METHOD(thread_ap_sig_s_in_14_V_loc_channel_full_n);
    sensitive << ( s_in_14_V_loc_channel_full_n );
    sensitive << ( ap_reg_s_in_14_V_loc_channel_full_n );

    SC_METHOD(thread_ap_sig_s_in_15_V_loc_channel_full_n);
    sensitive << ( s_in_15_V_loc_channel_full_n );
    sensitive << ( ap_reg_s_in_15_V_loc_channel_full_n );

    SC_METHOD(thread_ap_sig_s_in_1_V_loc_channel_full_n);
    sensitive << ( s_in_1_V_loc_channel_full_n );
    sensitive << ( ap_reg_s_in_1_V_loc_channel_full_n );

    SC_METHOD(thread_ap_sig_s_in_2_V_loc_channel_full_n);
    sensitive << ( s_in_2_V_loc_channel_full_n );
    sensitive << ( ap_reg_s_in_2_V_loc_channel_full_n );

    SC_METHOD(thread_ap_sig_s_in_3_V_loc_channel_full_n);
    sensitive << ( s_in_3_V_loc_channel_full_n );
    sensitive << ( ap_reg_s_in_3_V_loc_channel_full_n );

    SC_METHOD(thread_ap_sig_s_in_4_V_loc_channel_full_n);
    sensitive << ( s_in_4_V_loc_channel_full_n );
    sensitive << ( ap_reg_s_in_4_V_loc_channel_full_n );

    SC_METHOD(thread_ap_sig_s_in_5_V_loc_channel_full_n);
    sensitive << ( s_in_5_V_loc_channel_full_n );
    sensitive << ( ap_reg_s_in_5_V_loc_channel_full_n );

    SC_METHOD(thread_ap_sig_s_in_6_V_loc_channel_full_n);
    sensitive << ( s_in_6_V_loc_channel_full_n );
    sensitive << ( ap_reg_s_in_6_V_loc_channel_full_n );

    SC_METHOD(thread_ap_sig_s_in_7_V_loc_channel_full_n);
    sensitive << ( s_in_7_V_loc_channel_full_n );
    sensitive << ( ap_reg_s_in_7_V_loc_channel_full_n );

    SC_METHOD(thread_ap_sig_s_in_8_V_loc_channel_full_n);
    sensitive << ( s_in_8_V_loc_channel_full_n );
    sensitive << ( ap_reg_s_in_8_V_loc_channel_full_n );

    SC_METHOD(thread_ap_sig_s_in_9_V_loc_channel_full_n);
    sensitive << ( s_in_9_V_loc_channel_full_n );
    sensitive << ( ap_reg_s_in_9_V_loc_channel_full_n );

    SC_METHOD(thread_out_r);
    sensitive << ( svm_classifier_Block_preheader_0_proc1_U0_out_r );

    SC_METHOD(thread_svm_classifier_Block_preheader_0_proc1_U0_ap_continue);

    SC_METHOD(thread_svm_classifier_Block_preheader_0_proc1_U0_ap_start);
    sensitive << ( ch_sums_V_8_loc_channel_empty_n );
    sensitive << ( ch_sums_V_7_loc_channel_empty_n );
    sensitive << ( ch_sums_V_6_loc_channel_empty_n );
    sensitive << ( ch_sums_0_V_loc_channel_empty_n );
    sensitive << ( ch_sums_1_V_loc_channel_empty_n );
    sensitive << ( ch_sums_2_V_loc_channel_empty_n );
    sensitive << ( ch_sums_3_V_loc_channel_empty_n );
    sensitive << ( ch_sums_4_V_loc_channel_empty_n );
    sensitive << ( ch_sums_5_V_loc_channel_empty_n );

    SC_METHOD(thread_svm_classifier_Block_proc_U0_ap_continue);
    sensitive << ( ap_sig_s_in_15_V_loc_channel_full_n );
    sensitive << ( ap_sig_s_in_5_V_loc_channel_full_n );
    sensitive << ( ap_sig_s_in_14_V_loc_channel_full_n );
    sensitive << ( ap_sig_s_in_9_V_loc_channel_full_n );
    sensitive << ( ap_sig_s_in_3_V_loc_channel_full_n );
    sensitive << ( ap_sig_s_in_10_V_loc_channel_full_n );
    sensitive << ( ap_sig_s_in_7_V_loc_channel_full_n );
    sensitive << ( ap_sig_s_in_1_V_loc_channel_full_n );
    sensitive << ( ap_sig_s_in_6_V_loc_channel_full_n );
    sensitive << ( ap_sig_s_in_13_V_loc_channel_full_n );
    sensitive << ( ap_sig_s_in_11_V_loc_channel_full_n );
    sensitive << ( ap_sig_s_in_8_V_loc_channel_full_n );
    sensitive << ( ap_sig_s_in_4_V_loc_channel_full_n );
    sensitive << ( ap_sig_s_in_12_V_loc_channel_full_n );
    sensitive << ( ap_sig_s_in_0_V_loc_channel_full_n );
    sensitive << ( ap_sig_s_in_2_V_loc_channel_full_n );

    SC_METHOD(thread_svm_classifier_Loop_Sum_loop_proc1_U0_ap_continue);
    sensitive << ( ap_sig_ch_sums_V_8_loc_channel_full_n );
    sensitive << ( ap_sig_ch_sums_V_6_loc_channel_full_n );
    sensitive << ( ap_sig_ch_sums_3_V_loc_channel_full_n );
    sensitive << ( ap_sig_ch_sums_5_V_loc_channel_full_n );
    sensitive << ( ap_sig_ch_sums_4_V_loc_channel_full_n );
    sensitive << ( ap_sig_ch_sums_2_V_loc_channel_full_n );
    sensitive << ( ap_sig_ch_sums_1_V_loc_channel_full_n );
    sensitive << ( ap_sig_ch_sums_V_7_loc_channel_full_n );
    sensitive << ( ap_sig_ch_sums_0_V_loc_channel_full_n );

    SC_METHOD(thread_svm_classifier_Loop_Sum_loop_proc1_U0_ap_start);
    sensitive << ( s_in_0_V_loc_channel_empty_n );
    sensitive << ( s_in_1_V_loc_channel_empty_n );
    sensitive << ( s_in_2_V_loc_channel_empty_n );
    sensitive << ( s_in_3_V_loc_channel_empty_n );
    sensitive << ( s_in_4_V_loc_channel_empty_n );
    sensitive << ( s_in_5_V_loc_channel_empty_n );
    sensitive << ( s_in_6_V_loc_channel_empty_n );
    sensitive << ( s_in_7_V_loc_channel_empty_n );
    sensitive << ( s_in_8_V_loc_channel_empty_n );
    sensitive << ( s_in_9_V_loc_channel_empty_n );
    sensitive << ( s_in_10_V_loc_channel_empty_n );
    sensitive << ( s_in_11_V_loc_channel_empty_n );
    sensitive << ( s_in_12_V_loc_channel_empty_n );
    sensitive << ( s_in_13_V_loc_channel_empty_n );
    sensitive << ( s_in_14_V_loc_channel_empty_n );
    sensitive << ( s_in_15_V_loc_channel_empty_n );

    SC_METHOD(thread_svm_classifier_svm_classifier_entry3_U0_ap_continue);

    SC_METHOD(thread_svm_classifier_svm_classifier_entry3_U0_ap_start);
    sensitive << ( ap_start );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    svm_classifier_Block_proc_U0_ap_start = SC_LOGIC_0;
    ap_reg_s_in_15_V_loc_channel_full_n = SC_LOGIC_0;
    ap_reg_s_in_5_V_loc_channel_full_n = SC_LOGIC_0;
    ap_reg_s_in_14_V_loc_channel_full_n = SC_LOGIC_0;
    ap_reg_s_in_9_V_loc_channel_full_n = SC_LOGIC_0;
    ap_reg_s_in_3_V_loc_channel_full_n = SC_LOGIC_0;
    ap_reg_s_in_10_V_loc_channel_full_n = SC_LOGIC_0;
    ap_reg_s_in_7_V_loc_channel_full_n = SC_LOGIC_0;
    ap_reg_s_in_1_V_loc_channel_full_n = SC_LOGIC_0;
    ap_reg_s_in_6_V_loc_channel_full_n = SC_LOGIC_0;
    ap_reg_s_in_13_V_loc_channel_full_n = SC_LOGIC_0;
    ap_reg_s_in_11_V_loc_channel_full_n = SC_LOGIC_0;
    ap_reg_s_in_8_V_loc_channel_full_n = SC_LOGIC_0;
    ap_reg_s_in_4_V_loc_channel_full_n = SC_LOGIC_0;
    ap_reg_s_in_12_V_loc_channel_full_n = SC_LOGIC_0;
    ap_reg_s_in_0_V_loc_channel_full_n = SC_LOGIC_0;
    ap_reg_s_in_2_V_loc_channel_full_n = SC_LOGIC_0;
    ap_reg_ch_sums_V_8_loc_channel_full_n = SC_LOGIC_0;
    ap_reg_ch_sums_V_6_loc_channel_full_n = SC_LOGIC_0;
    ap_reg_ch_sums_3_V_loc_channel_full_n = SC_LOGIC_0;
    ap_reg_ch_sums_5_V_loc_channel_full_n = SC_LOGIC_0;
    ap_reg_ch_sums_4_V_loc_channel_full_n = SC_LOGIC_0;
    ap_reg_ch_sums_2_V_loc_channel_full_n = SC_LOGIC_0;
    ap_reg_ch_sums_1_V_loc_channel_full_n = SC_LOGIC_0;
    ap_reg_ch_sums_V_7_loc_channel_full_n = SC_LOGIC_0;
    ap_reg_ch_sums_0_V_loc_channel_full_n = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "svm_classifier_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, s_axi_AXILiteS_AWVALID, "(port)s_axi_AXILiteS_AWVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWREADY, "(port)s_axi_AXILiteS_AWREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWADDR, "(port)s_axi_AXILiteS_AWADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_WVALID, "(port)s_axi_AXILiteS_WVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_WREADY, "(port)s_axi_AXILiteS_WREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_WDATA, "(port)s_axi_AXILiteS_WDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_WSTRB, "(port)s_axi_AXILiteS_WSTRB");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARVALID, "(port)s_axi_AXILiteS_ARVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARREADY, "(port)s_axi_AXILiteS_ARREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARADDR, "(port)s_axi_AXILiteS_ARADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_RVALID, "(port)s_axi_AXILiteS_RVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_RREADY, "(port)s_axi_AXILiteS_RREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_RDATA, "(port)s_axi_AXILiteS_RDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_RRESP, "(port)s_axi_AXILiteS_RRESP");
    sc_trace(mVcdFile, s_axi_AXILiteS_BVALID, "(port)s_axi_AXILiteS_BVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_BREADY, "(port)s_axi_AXILiteS_BREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_BRESP, "(port)s_axi_AXILiteS_BRESP");
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, in_V, "in_V");
    sc_trace(mVcdFile, out_r, "out_r");
    sc_trace(mVcdFile, svm_classifier_svm_classifier_entry3_U0_ap_start, "svm_classifier_svm_classifier_entry3_U0_ap_start");
    sc_trace(mVcdFile, svm_classifier_svm_classifier_entry3_U0_ap_done, "svm_classifier_svm_classifier_entry3_U0_ap_done");
    sc_trace(mVcdFile, svm_classifier_svm_classifier_entry3_U0_ap_continue, "svm_classifier_svm_classifier_entry3_U0_ap_continue");
    sc_trace(mVcdFile, svm_classifier_svm_classifier_entry3_U0_ap_idle, "svm_classifier_svm_classifier_entry3_U0_ap_idle");
    sc_trace(mVcdFile, svm_classifier_svm_classifier_entry3_U0_ap_ready, "svm_classifier_svm_classifier_entry3_U0_ap_ready");
    sc_trace(mVcdFile, svm_classifier_svm_classifier_entry3_U0_in_V_out_din, "svm_classifier_svm_classifier_entry3_U0_in_V_out_din");
    sc_trace(mVcdFile, svm_classifier_svm_classifier_entry3_U0_in_V_out_write, "svm_classifier_svm_classifier_entry3_U0_in_V_out_write");
    sc_trace(mVcdFile, svm_classifier_Block_proc_U0_ap_start, "svm_classifier_Block_proc_U0_ap_start");
    sc_trace(mVcdFile, svm_classifier_Block_proc_U0_ap_done, "svm_classifier_Block_proc_U0_ap_done");
    sc_trace(mVcdFile, svm_classifier_Block_proc_U0_ap_continue, "svm_classifier_Block_proc_U0_ap_continue");
    sc_trace(mVcdFile, svm_classifier_Block_proc_U0_ap_idle, "svm_classifier_Block_proc_U0_ap_idle");
    sc_trace(mVcdFile, svm_classifier_Block_proc_U0_ap_ready, "svm_classifier_Block_proc_U0_ap_ready");
    sc_trace(mVcdFile, svm_classifier_Block_proc_U0_in_V_read, "svm_classifier_Block_proc_U0_in_V_read");
    sc_trace(mVcdFile, svm_classifier_Block_proc_U0_ap_return_0, "svm_classifier_Block_proc_U0_ap_return_0");
    sc_trace(mVcdFile, svm_classifier_Block_proc_U0_ap_return_1, "svm_classifier_Block_proc_U0_ap_return_1");
    sc_trace(mVcdFile, svm_classifier_Block_proc_U0_ap_return_2, "svm_classifier_Block_proc_U0_ap_return_2");
    sc_trace(mVcdFile, svm_classifier_Block_proc_U0_ap_return_3, "svm_classifier_Block_proc_U0_ap_return_3");
    sc_trace(mVcdFile, svm_classifier_Block_proc_U0_ap_return_4, "svm_classifier_Block_proc_U0_ap_return_4");
    sc_trace(mVcdFile, svm_classifier_Block_proc_U0_ap_return_5, "svm_classifier_Block_proc_U0_ap_return_5");
    sc_trace(mVcdFile, svm_classifier_Block_proc_U0_ap_return_6, "svm_classifier_Block_proc_U0_ap_return_6");
    sc_trace(mVcdFile, svm_classifier_Block_proc_U0_ap_return_7, "svm_classifier_Block_proc_U0_ap_return_7");
    sc_trace(mVcdFile, svm_classifier_Block_proc_U0_ap_return_8, "svm_classifier_Block_proc_U0_ap_return_8");
    sc_trace(mVcdFile, svm_classifier_Block_proc_U0_ap_return_9, "svm_classifier_Block_proc_U0_ap_return_9");
    sc_trace(mVcdFile, svm_classifier_Block_proc_U0_ap_return_10, "svm_classifier_Block_proc_U0_ap_return_10");
    sc_trace(mVcdFile, svm_classifier_Block_proc_U0_ap_return_11, "svm_classifier_Block_proc_U0_ap_return_11");
    sc_trace(mVcdFile, svm_classifier_Block_proc_U0_ap_return_12, "svm_classifier_Block_proc_U0_ap_return_12");
    sc_trace(mVcdFile, svm_classifier_Block_proc_U0_ap_return_13, "svm_classifier_Block_proc_U0_ap_return_13");
    sc_trace(mVcdFile, svm_classifier_Block_proc_U0_ap_return_14, "svm_classifier_Block_proc_U0_ap_return_14");
    sc_trace(mVcdFile, svm_classifier_Block_proc_U0_ap_return_15, "svm_classifier_Block_proc_U0_ap_return_15");
    sc_trace(mVcdFile, s_in_15_V_loc_channel_full_n, "s_in_15_V_loc_channel_full_n");
    sc_trace(mVcdFile, ap_reg_s_in_15_V_loc_channel_full_n, "ap_reg_s_in_15_V_loc_channel_full_n");
    sc_trace(mVcdFile, ap_sig_s_in_15_V_loc_channel_full_n, "ap_sig_s_in_15_V_loc_channel_full_n");
    sc_trace(mVcdFile, ap_chn_write_svm_classifier_Block_proc_U0_s_in_15_V_loc_channel, "ap_chn_write_svm_classifier_Block_proc_U0_s_in_15_V_loc_channel");
    sc_trace(mVcdFile, s_in_5_V_loc_channel_full_n, "s_in_5_V_loc_channel_full_n");
    sc_trace(mVcdFile, ap_reg_s_in_5_V_loc_channel_full_n, "ap_reg_s_in_5_V_loc_channel_full_n");
    sc_trace(mVcdFile, ap_sig_s_in_5_V_loc_channel_full_n, "ap_sig_s_in_5_V_loc_channel_full_n");
    sc_trace(mVcdFile, ap_chn_write_svm_classifier_Block_proc_U0_s_in_5_V_loc_channel, "ap_chn_write_svm_classifier_Block_proc_U0_s_in_5_V_loc_channel");
    sc_trace(mVcdFile, s_in_14_V_loc_channel_full_n, "s_in_14_V_loc_channel_full_n");
    sc_trace(mVcdFile, ap_reg_s_in_14_V_loc_channel_full_n, "ap_reg_s_in_14_V_loc_channel_full_n");
    sc_trace(mVcdFile, ap_sig_s_in_14_V_loc_channel_full_n, "ap_sig_s_in_14_V_loc_channel_full_n");
    sc_trace(mVcdFile, ap_chn_write_svm_classifier_Block_proc_U0_s_in_14_V_loc_channel, "ap_chn_write_svm_classifier_Block_proc_U0_s_in_14_V_loc_channel");
    sc_trace(mVcdFile, s_in_9_V_loc_channel_full_n, "s_in_9_V_loc_channel_full_n");
    sc_trace(mVcdFile, ap_reg_s_in_9_V_loc_channel_full_n, "ap_reg_s_in_9_V_loc_channel_full_n");
    sc_trace(mVcdFile, ap_sig_s_in_9_V_loc_channel_full_n, "ap_sig_s_in_9_V_loc_channel_full_n");
    sc_trace(mVcdFile, ap_chn_write_svm_classifier_Block_proc_U0_s_in_9_V_loc_channel, "ap_chn_write_svm_classifier_Block_proc_U0_s_in_9_V_loc_channel");
    sc_trace(mVcdFile, s_in_3_V_loc_channel_full_n, "s_in_3_V_loc_channel_full_n");
    sc_trace(mVcdFile, ap_reg_s_in_3_V_loc_channel_full_n, "ap_reg_s_in_3_V_loc_channel_full_n");
    sc_trace(mVcdFile, ap_sig_s_in_3_V_loc_channel_full_n, "ap_sig_s_in_3_V_loc_channel_full_n");
    sc_trace(mVcdFile, ap_chn_write_svm_classifier_Block_proc_U0_s_in_3_V_loc_channel, "ap_chn_write_svm_classifier_Block_proc_U0_s_in_3_V_loc_channel");
    sc_trace(mVcdFile, s_in_10_V_loc_channel_full_n, "s_in_10_V_loc_channel_full_n");
    sc_trace(mVcdFile, ap_reg_s_in_10_V_loc_channel_full_n, "ap_reg_s_in_10_V_loc_channel_full_n");
    sc_trace(mVcdFile, ap_sig_s_in_10_V_loc_channel_full_n, "ap_sig_s_in_10_V_loc_channel_full_n");
    sc_trace(mVcdFile, ap_chn_write_svm_classifier_Block_proc_U0_s_in_10_V_loc_channel, "ap_chn_write_svm_classifier_Block_proc_U0_s_in_10_V_loc_channel");
    sc_trace(mVcdFile, s_in_7_V_loc_channel_full_n, "s_in_7_V_loc_channel_full_n");
    sc_trace(mVcdFile, ap_reg_s_in_7_V_loc_channel_full_n, "ap_reg_s_in_7_V_loc_channel_full_n");
    sc_trace(mVcdFile, ap_sig_s_in_7_V_loc_channel_full_n, "ap_sig_s_in_7_V_loc_channel_full_n");
    sc_trace(mVcdFile, ap_chn_write_svm_classifier_Block_proc_U0_s_in_7_V_loc_channel, "ap_chn_write_svm_classifier_Block_proc_U0_s_in_7_V_loc_channel");
    sc_trace(mVcdFile, s_in_1_V_loc_channel_full_n, "s_in_1_V_loc_channel_full_n");
    sc_trace(mVcdFile, ap_reg_s_in_1_V_loc_channel_full_n, "ap_reg_s_in_1_V_loc_channel_full_n");
    sc_trace(mVcdFile, ap_sig_s_in_1_V_loc_channel_full_n, "ap_sig_s_in_1_V_loc_channel_full_n");
    sc_trace(mVcdFile, ap_chn_write_svm_classifier_Block_proc_U0_s_in_1_V_loc_channel, "ap_chn_write_svm_classifier_Block_proc_U0_s_in_1_V_loc_channel");
    sc_trace(mVcdFile, s_in_6_V_loc_channel_full_n, "s_in_6_V_loc_channel_full_n");
    sc_trace(mVcdFile, ap_reg_s_in_6_V_loc_channel_full_n, "ap_reg_s_in_6_V_loc_channel_full_n");
    sc_trace(mVcdFile, ap_sig_s_in_6_V_loc_channel_full_n, "ap_sig_s_in_6_V_loc_channel_full_n");
    sc_trace(mVcdFile, ap_chn_write_svm_classifier_Block_proc_U0_s_in_6_V_loc_channel, "ap_chn_write_svm_classifier_Block_proc_U0_s_in_6_V_loc_channel");
    sc_trace(mVcdFile, s_in_13_V_loc_channel_full_n, "s_in_13_V_loc_channel_full_n");
    sc_trace(mVcdFile, ap_reg_s_in_13_V_loc_channel_full_n, "ap_reg_s_in_13_V_loc_channel_full_n");
    sc_trace(mVcdFile, ap_sig_s_in_13_V_loc_channel_full_n, "ap_sig_s_in_13_V_loc_channel_full_n");
    sc_trace(mVcdFile, ap_chn_write_svm_classifier_Block_proc_U0_s_in_13_V_loc_channel, "ap_chn_write_svm_classifier_Block_proc_U0_s_in_13_V_loc_channel");
    sc_trace(mVcdFile, s_in_11_V_loc_channel_full_n, "s_in_11_V_loc_channel_full_n");
    sc_trace(mVcdFile, ap_reg_s_in_11_V_loc_channel_full_n, "ap_reg_s_in_11_V_loc_channel_full_n");
    sc_trace(mVcdFile, ap_sig_s_in_11_V_loc_channel_full_n, "ap_sig_s_in_11_V_loc_channel_full_n");
    sc_trace(mVcdFile, ap_chn_write_svm_classifier_Block_proc_U0_s_in_11_V_loc_channel, "ap_chn_write_svm_classifier_Block_proc_U0_s_in_11_V_loc_channel");
    sc_trace(mVcdFile, s_in_8_V_loc_channel_full_n, "s_in_8_V_loc_channel_full_n");
    sc_trace(mVcdFile, ap_reg_s_in_8_V_loc_channel_full_n, "ap_reg_s_in_8_V_loc_channel_full_n");
    sc_trace(mVcdFile, ap_sig_s_in_8_V_loc_channel_full_n, "ap_sig_s_in_8_V_loc_channel_full_n");
    sc_trace(mVcdFile, ap_chn_write_svm_classifier_Block_proc_U0_s_in_8_V_loc_channel, "ap_chn_write_svm_classifier_Block_proc_U0_s_in_8_V_loc_channel");
    sc_trace(mVcdFile, s_in_4_V_loc_channel_full_n, "s_in_4_V_loc_channel_full_n");
    sc_trace(mVcdFile, ap_reg_s_in_4_V_loc_channel_full_n, "ap_reg_s_in_4_V_loc_channel_full_n");
    sc_trace(mVcdFile, ap_sig_s_in_4_V_loc_channel_full_n, "ap_sig_s_in_4_V_loc_channel_full_n");
    sc_trace(mVcdFile, ap_chn_write_svm_classifier_Block_proc_U0_s_in_4_V_loc_channel, "ap_chn_write_svm_classifier_Block_proc_U0_s_in_4_V_loc_channel");
    sc_trace(mVcdFile, s_in_12_V_loc_channel_full_n, "s_in_12_V_loc_channel_full_n");
    sc_trace(mVcdFile, ap_reg_s_in_12_V_loc_channel_full_n, "ap_reg_s_in_12_V_loc_channel_full_n");
    sc_trace(mVcdFile, ap_sig_s_in_12_V_loc_channel_full_n, "ap_sig_s_in_12_V_loc_channel_full_n");
    sc_trace(mVcdFile, ap_chn_write_svm_classifier_Block_proc_U0_s_in_12_V_loc_channel, "ap_chn_write_svm_classifier_Block_proc_U0_s_in_12_V_loc_channel");
    sc_trace(mVcdFile, s_in_0_V_loc_channel_full_n, "s_in_0_V_loc_channel_full_n");
    sc_trace(mVcdFile, ap_reg_s_in_0_V_loc_channel_full_n, "ap_reg_s_in_0_V_loc_channel_full_n");
    sc_trace(mVcdFile, ap_sig_s_in_0_V_loc_channel_full_n, "ap_sig_s_in_0_V_loc_channel_full_n");
    sc_trace(mVcdFile, ap_chn_write_svm_classifier_Block_proc_U0_s_in_0_V_loc_channel, "ap_chn_write_svm_classifier_Block_proc_U0_s_in_0_V_loc_channel");
    sc_trace(mVcdFile, s_in_2_V_loc_channel_full_n, "s_in_2_V_loc_channel_full_n");
    sc_trace(mVcdFile, ap_reg_s_in_2_V_loc_channel_full_n, "ap_reg_s_in_2_V_loc_channel_full_n");
    sc_trace(mVcdFile, ap_sig_s_in_2_V_loc_channel_full_n, "ap_sig_s_in_2_V_loc_channel_full_n");
    sc_trace(mVcdFile, ap_chn_write_svm_classifier_Block_proc_U0_s_in_2_V_loc_channel, "ap_chn_write_svm_classifier_Block_proc_U0_s_in_2_V_loc_channel");
    sc_trace(mVcdFile, svm_classifier_Loop_Sum_loop_proc1_U0_ap_start, "svm_classifier_Loop_Sum_loop_proc1_U0_ap_start");
    sc_trace(mVcdFile, svm_classifier_Loop_Sum_loop_proc1_U0_ap_done, "svm_classifier_Loop_Sum_loop_proc1_U0_ap_done");
    sc_trace(mVcdFile, svm_classifier_Loop_Sum_loop_proc1_U0_ap_continue, "svm_classifier_Loop_Sum_loop_proc1_U0_ap_continue");
    sc_trace(mVcdFile, svm_classifier_Loop_Sum_loop_proc1_U0_ap_idle, "svm_classifier_Loop_Sum_loop_proc1_U0_ap_idle");
    sc_trace(mVcdFile, svm_classifier_Loop_Sum_loop_proc1_U0_ap_ready, "svm_classifier_Loop_Sum_loop_proc1_U0_ap_ready");
    sc_trace(mVcdFile, svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_0, "svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_0");
    sc_trace(mVcdFile, svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_1, "svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_1");
    sc_trace(mVcdFile, svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_2, "svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_2");
    sc_trace(mVcdFile, svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_3, "svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_3");
    sc_trace(mVcdFile, svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_4, "svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_4");
    sc_trace(mVcdFile, svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_5, "svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_5");
    sc_trace(mVcdFile, svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_6, "svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_6");
    sc_trace(mVcdFile, svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_7, "svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_7");
    sc_trace(mVcdFile, svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_8, "svm_classifier_Loop_Sum_loop_proc1_U0_ap_return_8");
    sc_trace(mVcdFile, ch_sums_V_8_loc_channel_full_n, "ch_sums_V_8_loc_channel_full_n");
    sc_trace(mVcdFile, ap_reg_ch_sums_V_8_loc_channel_full_n, "ap_reg_ch_sums_V_8_loc_channel_full_n");
    sc_trace(mVcdFile, ap_sig_ch_sums_V_8_loc_channel_full_n, "ap_sig_ch_sums_V_8_loc_channel_full_n");
    sc_trace(mVcdFile, ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_8_loc_channel, "ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_8_loc_channel");
    sc_trace(mVcdFile, ch_sums_V_6_loc_channel_full_n, "ch_sums_V_6_loc_channel_full_n");
    sc_trace(mVcdFile, ap_reg_ch_sums_V_6_loc_channel_full_n, "ap_reg_ch_sums_V_6_loc_channel_full_n");
    sc_trace(mVcdFile, ap_sig_ch_sums_V_6_loc_channel_full_n, "ap_sig_ch_sums_V_6_loc_channel_full_n");
    sc_trace(mVcdFile, ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_6_loc_channel, "ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_6_loc_channel");
    sc_trace(mVcdFile, ch_sums_3_V_loc_channel_full_n, "ch_sums_3_V_loc_channel_full_n");
    sc_trace(mVcdFile, ap_reg_ch_sums_3_V_loc_channel_full_n, "ap_reg_ch_sums_3_V_loc_channel_full_n");
    sc_trace(mVcdFile, ap_sig_ch_sums_3_V_loc_channel_full_n, "ap_sig_ch_sums_3_V_loc_channel_full_n");
    sc_trace(mVcdFile, ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_3_V_loc_channel, "ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_3_V_loc_channel");
    sc_trace(mVcdFile, ch_sums_5_V_loc_channel_full_n, "ch_sums_5_V_loc_channel_full_n");
    sc_trace(mVcdFile, ap_reg_ch_sums_5_V_loc_channel_full_n, "ap_reg_ch_sums_5_V_loc_channel_full_n");
    sc_trace(mVcdFile, ap_sig_ch_sums_5_V_loc_channel_full_n, "ap_sig_ch_sums_5_V_loc_channel_full_n");
    sc_trace(mVcdFile, ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_5_V_loc_channel, "ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_5_V_loc_channel");
    sc_trace(mVcdFile, ch_sums_4_V_loc_channel_full_n, "ch_sums_4_V_loc_channel_full_n");
    sc_trace(mVcdFile, ap_reg_ch_sums_4_V_loc_channel_full_n, "ap_reg_ch_sums_4_V_loc_channel_full_n");
    sc_trace(mVcdFile, ap_sig_ch_sums_4_V_loc_channel_full_n, "ap_sig_ch_sums_4_V_loc_channel_full_n");
    sc_trace(mVcdFile, ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_4_V_loc_channel, "ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_4_V_loc_channel");
    sc_trace(mVcdFile, ch_sums_2_V_loc_channel_full_n, "ch_sums_2_V_loc_channel_full_n");
    sc_trace(mVcdFile, ap_reg_ch_sums_2_V_loc_channel_full_n, "ap_reg_ch_sums_2_V_loc_channel_full_n");
    sc_trace(mVcdFile, ap_sig_ch_sums_2_V_loc_channel_full_n, "ap_sig_ch_sums_2_V_loc_channel_full_n");
    sc_trace(mVcdFile, ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_2_V_loc_channel, "ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_2_V_loc_channel");
    sc_trace(mVcdFile, ch_sums_1_V_loc_channel_full_n, "ch_sums_1_V_loc_channel_full_n");
    sc_trace(mVcdFile, ap_reg_ch_sums_1_V_loc_channel_full_n, "ap_reg_ch_sums_1_V_loc_channel_full_n");
    sc_trace(mVcdFile, ap_sig_ch_sums_1_V_loc_channel_full_n, "ap_sig_ch_sums_1_V_loc_channel_full_n");
    sc_trace(mVcdFile, ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_1_V_loc_channel, "ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_1_V_loc_channel");
    sc_trace(mVcdFile, ch_sums_V_7_loc_channel_full_n, "ch_sums_V_7_loc_channel_full_n");
    sc_trace(mVcdFile, ap_reg_ch_sums_V_7_loc_channel_full_n, "ap_reg_ch_sums_V_7_loc_channel_full_n");
    sc_trace(mVcdFile, ap_sig_ch_sums_V_7_loc_channel_full_n, "ap_sig_ch_sums_V_7_loc_channel_full_n");
    sc_trace(mVcdFile, ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_7_loc_channel, "ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_7_loc_channel");
    sc_trace(mVcdFile, ch_sums_0_V_loc_channel_full_n, "ch_sums_0_V_loc_channel_full_n");
    sc_trace(mVcdFile, ap_reg_ch_sums_0_V_loc_channel_full_n, "ap_reg_ch_sums_0_V_loc_channel_full_n");
    sc_trace(mVcdFile, ap_sig_ch_sums_0_V_loc_channel_full_n, "ap_sig_ch_sums_0_V_loc_channel_full_n");
    sc_trace(mVcdFile, ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_0_V_loc_channel, "ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_0_V_loc_channel");
    sc_trace(mVcdFile, svm_classifier_Block_preheader_0_proc1_U0_ap_start, "svm_classifier_Block_preheader_0_proc1_U0_ap_start");
    sc_trace(mVcdFile, svm_classifier_Block_preheader_0_proc1_U0_ap_done, "svm_classifier_Block_preheader_0_proc1_U0_ap_done");
    sc_trace(mVcdFile, svm_classifier_Block_preheader_0_proc1_U0_ap_continue, "svm_classifier_Block_preheader_0_proc1_U0_ap_continue");
    sc_trace(mVcdFile, svm_classifier_Block_preheader_0_proc1_U0_ap_idle, "svm_classifier_Block_preheader_0_proc1_U0_ap_idle");
    sc_trace(mVcdFile, svm_classifier_Block_preheader_0_proc1_U0_ap_ready, "svm_classifier_Block_preheader_0_proc1_U0_ap_ready");
    sc_trace(mVcdFile, svm_classifier_Block_preheader_0_proc1_U0_out_r, "svm_classifier_Block_preheader_0_proc1_U0_out_r");
    sc_trace(mVcdFile, svm_classifier_Block_preheader_0_proc1_U0_out_r_ap_vld, "svm_classifier_Block_preheader_0_proc1_U0_out_r_ap_vld");
    sc_trace(mVcdFile, ap_sig_hs_continue, "ap_sig_hs_continue");
    sc_trace(mVcdFile, in_V_channel_full_n, "in_V_channel_full_n");
    sc_trace(mVcdFile, in_V_channel_dout, "in_V_channel_dout");
    sc_trace(mVcdFile, in_V_channel_empty_n, "in_V_channel_empty_n");
    sc_trace(mVcdFile, s_in_0_V_loc_channel_dout, "s_in_0_V_loc_channel_dout");
    sc_trace(mVcdFile, s_in_0_V_loc_channel_empty_n, "s_in_0_V_loc_channel_empty_n");
    sc_trace(mVcdFile, s_in_1_V_loc_channel_dout, "s_in_1_V_loc_channel_dout");
    sc_trace(mVcdFile, s_in_1_V_loc_channel_empty_n, "s_in_1_V_loc_channel_empty_n");
    sc_trace(mVcdFile, s_in_2_V_loc_channel_dout, "s_in_2_V_loc_channel_dout");
    sc_trace(mVcdFile, s_in_2_V_loc_channel_empty_n, "s_in_2_V_loc_channel_empty_n");
    sc_trace(mVcdFile, s_in_3_V_loc_channel_dout, "s_in_3_V_loc_channel_dout");
    sc_trace(mVcdFile, s_in_3_V_loc_channel_empty_n, "s_in_3_V_loc_channel_empty_n");
    sc_trace(mVcdFile, s_in_4_V_loc_channel_dout, "s_in_4_V_loc_channel_dout");
    sc_trace(mVcdFile, s_in_4_V_loc_channel_empty_n, "s_in_4_V_loc_channel_empty_n");
    sc_trace(mVcdFile, s_in_5_V_loc_channel_dout, "s_in_5_V_loc_channel_dout");
    sc_trace(mVcdFile, s_in_5_V_loc_channel_empty_n, "s_in_5_V_loc_channel_empty_n");
    sc_trace(mVcdFile, s_in_6_V_loc_channel_dout, "s_in_6_V_loc_channel_dout");
    sc_trace(mVcdFile, s_in_6_V_loc_channel_empty_n, "s_in_6_V_loc_channel_empty_n");
    sc_trace(mVcdFile, s_in_7_V_loc_channel_dout, "s_in_7_V_loc_channel_dout");
    sc_trace(mVcdFile, s_in_7_V_loc_channel_empty_n, "s_in_7_V_loc_channel_empty_n");
    sc_trace(mVcdFile, s_in_8_V_loc_channel_dout, "s_in_8_V_loc_channel_dout");
    sc_trace(mVcdFile, s_in_8_V_loc_channel_empty_n, "s_in_8_V_loc_channel_empty_n");
    sc_trace(mVcdFile, s_in_9_V_loc_channel_dout, "s_in_9_V_loc_channel_dout");
    sc_trace(mVcdFile, s_in_9_V_loc_channel_empty_n, "s_in_9_V_loc_channel_empty_n");
    sc_trace(mVcdFile, s_in_10_V_loc_channel_dout, "s_in_10_V_loc_channel_dout");
    sc_trace(mVcdFile, s_in_10_V_loc_channel_empty_n, "s_in_10_V_loc_channel_empty_n");
    sc_trace(mVcdFile, s_in_11_V_loc_channel_dout, "s_in_11_V_loc_channel_dout");
    sc_trace(mVcdFile, s_in_11_V_loc_channel_empty_n, "s_in_11_V_loc_channel_empty_n");
    sc_trace(mVcdFile, s_in_12_V_loc_channel_dout, "s_in_12_V_loc_channel_dout");
    sc_trace(mVcdFile, s_in_12_V_loc_channel_empty_n, "s_in_12_V_loc_channel_empty_n");
    sc_trace(mVcdFile, s_in_13_V_loc_channel_dout, "s_in_13_V_loc_channel_dout");
    sc_trace(mVcdFile, s_in_13_V_loc_channel_empty_n, "s_in_13_V_loc_channel_empty_n");
    sc_trace(mVcdFile, s_in_14_V_loc_channel_dout, "s_in_14_V_loc_channel_dout");
    sc_trace(mVcdFile, s_in_14_V_loc_channel_empty_n, "s_in_14_V_loc_channel_empty_n");
    sc_trace(mVcdFile, s_in_15_V_loc_channel_dout, "s_in_15_V_loc_channel_dout");
    sc_trace(mVcdFile, s_in_15_V_loc_channel_empty_n, "s_in_15_V_loc_channel_empty_n");
    sc_trace(mVcdFile, ch_sums_V_8_loc_channel_dout, "ch_sums_V_8_loc_channel_dout");
    sc_trace(mVcdFile, ch_sums_V_8_loc_channel_empty_n, "ch_sums_V_8_loc_channel_empty_n");
    sc_trace(mVcdFile, ch_sums_V_7_loc_channel_dout, "ch_sums_V_7_loc_channel_dout");
    sc_trace(mVcdFile, ch_sums_V_7_loc_channel_empty_n, "ch_sums_V_7_loc_channel_empty_n");
    sc_trace(mVcdFile, ch_sums_V_6_loc_channel_dout, "ch_sums_V_6_loc_channel_dout");
    sc_trace(mVcdFile, ch_sums_V_6_loc_channel_empty_n, "ch_sums_V_6_loc_channel_empty_n");
    sc_trace(mVcdFile, ch_sums_0_V_loc_channel_dout, "ch_sums_0_V_loc_channel_dout");
    sc_trace(mVcdFile, ch_sums_0_V_loc_channel_empty_n, "ch_sums_0_V_loc_channel_empty_n");
    sc_trace(mVcdFile, ch_sums_1_V_loc_channel_dout, "ch_sums_1_V_loc_channel_dout");
    sc_trace(mVcdFile, ch_sums_1_V_loc_channel_empty_n, "ch_sums_1_V_loc_channel_empty_n");
    sc_trace(mVcdFile, ch_sums_2_V_loc_channel_dout, "ch_sums_2_V_loc_channel_dout");
    sc_trace(mVcdFile, ch_sums_2_V_loc_channel_empty_n, "ch_sums_2_V_loc_channel_empty_n");
    sc_trace(mVcdFile, ch_sums_3_V_loc_channel_dout, "ch_sums_3_V_loc_channel_dout");
    sc_trace(mVcdFile, ch_sums_3_V_loc_channel_empty_n, "ch_sums_3_V_loc_channel_empty_n");
    sc_trace(mVcdFile, ch_sums_4_V_loc_channel_dout, "ch_sums_4_V_loc_channel_dout");
    sc_trace(mVcdFile, ch_sums_4_V_loc_channel_empty_n, "ch_sums_4_V_loc_channel_empty_n");
    sc_trace(mVcdFile, ch_sums_5_V_loc_channel_dout, "ch_sums_5_V_loc_channel_dout");
    sc_trace(mVcdFile, ch_sums_5_V_loc_channel_empty_n, "ch_sums_5_V_loc_channel_empty_n");
    sc_trace(mVcdFile, ap_sig_hs_done, "ap_sig_hs_done");
    sc_trace(mVcdFile, ap_sig_hs_ready, "ap_sig_hs_ready");
#endif

    }
    mHdltvinHandle.open("svm_classifier.hdltvin.dat");
    mHdltvoutHandle.open("svm_classifier.hdltvout.dat");
}

svm_classifier::~svm_classifier() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete svm_classifier_AXILiteS_s_axi_U;
    delete svm_classifier_svm_classifier_entry3_U0;
    delete svm_classifier_Block_proc_U0;
    delete svm_classifier_Loop_Sum_loop_proc1_U0;
    delete svm_classifier_Block_preheader_0_proc1_U0;
    delete in_V_channel_U;
    delete s_in_0_V_loc_channel_U;
    delete s_in_1_V_loc_channel_U;
    delete s_in_2_V_loc_channel_U;
    delete s_in_3_V_loc_channel_U;
    delete s_in_4_V_loc_channel_U;
    delete s_in_5_V_loc_channel_U;
    delete s_in_6_V_loc_channel_U;
    delete s_in_7_V_loc_channel_U;
    delete s_in_8_V_loc_channel_U;
    delete s_in_9_V_loc_channel_U;
    delete s_in_10_V_loc_channel_U;
    delete s_in_11_V_loc_channel_U;
    delete s_in_12_V_loc_channel_U;
    delete s_in_13_V_loc_channel_U;
    delete s_in_14_V_loc_channel_U;
    delete s_in_15_V_loc_channel_U;
    delete ch_sums_V_8_loc_channel_U;
    delete ch_sums_V_7_loc_channel_U;
    delete ch_sums_V_6_loc_channel_U;
    delete ch_sums_0_V_loc_channel_U;
    delete ch_sums_1_V_loc_channel_U;
    delete ch_sums_2_V_loc_channel_U;
    delete ch_sums_3_V_loc_channel_U;
    delete ch_sums_4_V_loc_channel_U;
    delete ch_sums_5_V_loc_channel_U;
}

void svm_classifier::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void svm_classifier::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ch_sums_0_V_loc_channel_full_n = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Loop_Sum_loop_proc1_U0_ap_done.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Loop_Sum_loop_proc1_U0_ap_continue.read()))) {
            ap_reg_ch_sums_0_V_loc_channel_full_n = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Loop_Sum_loop_proc1_U0_ap_done.read()) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ch_sums_0_V_loc_channel_full_n.read()))) {
            ap_reg_ch_sums_0_V_loc_channel_full_n = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ch_sums_1_V_loc_channel_full_n = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Loop_Sum_loop_proc1_U0_ap_done.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Loop_Sum_loop_proc1_U0_ap_continue.read()))) {
            ap_reg_ch_sums_1_V_loc_channel_full_n = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Loop_Sum_loop_proc1_U0_ap_done.read()) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ch_sums_1_V_loc_channel_full_n.read()))) {
            ap_reg_ch_sums_1_V_loc_channel_full_n = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ch_sums_2_V_loc_channel_full_n = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Loop_Sum_loop_proc1_U0_ap_done.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Loop_Sum_loop_proc1_U0_ap_continue.read()))) {
            ap_reg_ch_sums_2_V_loc_channel_full_n = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Loop_Sum_loop_proc1_U0_ap_done.read()) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ch_sums_2_V_loc_channel_full_n.read()))) {
            ap_reg_ch_sums_2_V_loc_channel_full_n = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ch_sums_3_V_loc_channel_full_n = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Loop_Sum_loop_proc1_U0_ap_done.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Loop_Sum_loop_proc1_U0_ap_continue.read()))) {
            ap_reg_ch_sums_3_V_loc_channel_full_n = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Loop_Sum_loop_proc1_U0_ap_done.read()) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ch_sums_3_V_loc_channel_full_n.read()))) {
            ap_reg_ch_sums_3_V_loc_channel_full_n = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ch_sums_4_V_loc_channel_full_n = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Loop_Sum_loop_proc1_U0_ap_done.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Loop_Sum_loop_proc1_U0_ap_continue.read()))) {
            ap_reg_ch_sums_4_V_loc_channel_full_n = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Loop_Sum_loop_proc1_U0_ap_done.read()) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ch_sums_4_V_loc_channel_full_n.read()))) {
            ap_reg_ch_sums_4_V_loc_channel_full_n = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ch_sums_5_V_loc_channel_full_n = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Loop_Sum_loop_proc1_U0_ap_done.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Loop_Sum_loop_proc1_U0_ap_continue.read()))) {
            ap_reg_ch_sums_5_V_loc_channel_full_n = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Loop_Sum_loop_proc1_U0_ap_done.read()) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ch_sums_5_V_loc_channel_full_n.read()))) {
            ap_reg_ch_sums_5_V_loc_channel_full_n = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ch_sums_V_6_loc_channel_full_n = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Loop_Sum_loop_proc1_U0_ap_done.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Loop_Sum_loop_proc1_U0_ap_continue.read()))) {
            ap_reg_ch_sums_V_6_loc_channel_full_n = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Loop_Sum_loop_proc1_U0_ap_done.read()) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ch_sums_V_6_loc_channel_full_n.read()))) {
            ap_reg_ch_sums_V_6_loc_channel_full_n = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ch_sums_V_7_loc_channel_full_n = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Loop_Sum_loop_proc1_U0_ap_done.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Loop_Sum_loop_proc1_U0_ap_continue.read()))) {
            ap_reg_ch_sums_V_7_loc_channel_full_n = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Loop_Sum_loop_proc1_U0_ap_done.read()) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ch_sums_V_7_loc_channel_full_n.read()))) {
            ap_reg_ch_sums_V_7_loc_channel_full_n = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ch_sums_V_8_loc_channel_full_n = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Loop_Sum_loop_proc1_U0_ap_done.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Loop_Sum_loop_proc1_U0_ap_continue.read()))) {
            ap_reg_ch_sums_V_8_loc_channel_full_n = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Loop_Sum_loop_proc1_U0_ap_done.read()) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ch_sums_V_8_loc_channel_full_n.read()))) {
            ap_reg_ch_sums_V_8_loc_channel_full_n = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_s_in_0_V_loc_channel_full_n = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Block_proc_U0_ap_done.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Block_proc_U0_ap_continue.read()))) {
            ap_reg_s_in_0_V_loc_channel_full_n = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Block_proc_U0_ap_done.read()) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, s_in_0_V_loc_channel_full_n.read()))) {
            ap_reg_s_in_0_V_loc_channel_full_n = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_s_in_10_V_loc_channel_full_n = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Block_proc_U0_ap_done.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Block_proc_U0_ap_continue.read()))) {
            ap_reg_s_in_10_V_loc_channel_full_n = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Block_proc_U0_ap_done.read()) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, s_in_10_V_loc_channel_full_n.read()))) {
            ap_reg_s_in_10_V_loc_channel_full_n = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_s_in_11_V_loc_channel_full_n = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Block_proc_U0_ap_done.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Block_proc_U0_ap_continue.read()))) {
            ap_reg_s_in_11_V_loc_channel_full_n = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Block_proc_U0_ap_done.read()) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, s_in_11_V_loc_channel_full_n.read()))) {
            ap_reg_s_in_11_V_loc_channel_full_n = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_s_in_12_V_loc_channel_full_n = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Block_proc_U0_ap_done.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Block_proc_U0_ap_continue.read()))) {
            ap_reg_s_in_12_V_loc_channel_full_n = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Block_proc_U0_ap_done.read()) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, s_in_12_V_loc_channel_full_n.read()))) {
            ap_reg_s_in_12_V_loc_channel_full_n = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_s_in_13_V_loc_channel_full_n = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Block_proc_U0_ap_done.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Block_proc_U0_ap_continue.read()))) {
            ap_reg_s_in_13_V_loc_channel_full_n = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Block_proc_U0_ap_done.read()) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, s_in_13_V_loc_channel_full_n.read()))) {
            ap_reg_s_in_13_V_loc_channel_full_n = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_s_in_14_V_loc_channel_full_n = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Block_proc_U0_ap_done.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Block_proc_U0_ap_continue.read()))) {
            ap_reg_s_in_14_V_loc_channel_full_n = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Block_proc_U0_ap_done.read()) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, s_in_14_V_loc_channel_full_n.read()))) {
            ap_reg_s_in_14_V_loc_channel_full_n = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_s_in_15_V_loc_channel_full_n = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Block_proc_U0_ap_done.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Block_proc_U0_ap_continue.read()))) {
            ap_reg_s_in_15_V_loc_channel_full_n = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Block_proc_U0_ap_done.read()) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, s_in_15_V_loc_channel_full_n.read()))) {
            ap_reg_s_in_15_V_loc_channel_full_n = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_s_in_1_V_loc_channel_full_n = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Block_proc_U0_ap_done.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Block_proc_U0_ap_continue.read()))) {
            ap_reg_s_in_1_V_loc_channel_full_n = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Block_proc_U0_ap_done.read()) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, s_in_1_V_loc_channel_full_n.read()))) {
            ap_reg_s_in_1_V_loc_channel_full_n = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_s_in_2_V_loc_channel_full_n = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Block_proc_U0_ap_done.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Block_proc_U0_ap_continue.read()))) {
            ap_reg_s_in_2_V_loc_channel_full_n = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Block_proc_U0_ap_done.read()) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, s_in_2_V_loc_channel_full_n.read()))) {
            ap_reg_s_in_2_V_loc_channel_full_n = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_s_in_3_V_loc_channel_full_n = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Block_proc_U0_ap_done.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Block_proc_U0_ap_continue.read()))) {
            ap_reg_s_in_3_V_loc_channel_full_n = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Block_proc_U0_ap_done.read()) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, s_in_3_V_loc_channel_full_n.read()))) {
            ap_reg_s_in_3_V_loc_channel_full_n = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_s_in_4_V_loc_channel_full_n = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Block_proc_U0_ap_done.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Block_proc_U0_ap_continue.read()))) {
            ap_reg_s_in_4_V_loc_channel_full_n = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Block_proc_U0_ap_done.read()) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, s_in_4_V_loc_channel_full_n.read()))) {
            ap_reg_s_in_4_V_loc_channel_full_n = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_s_in_5_V_loc_channel_full_n = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Block_proc_U0_ap_done.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Block_proc_U0_ap_continue.read()))) {
            ap_reg_s_in_5_V_loc_channel_full_n = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Block_proc_U0_ap_done.read()) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, s_in_5_V_loc_channel_full_n.read()))) {
            ap_reg_s_in_5_V_loc_channel_full_n = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_s_in_6_V_loc_channel_full_n = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Block_proc_U0_ap_done.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Block_proc_U0_ap_continue.read()))) {
            ap_reg_s_in_6_V_loc_channel_full_n = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Block_proc_U0_ap_done.read()) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, s_in_6_V_loc_channel_full_n.read()))) {
            ap_reg_s_in_6_V_loc_channel_full_n = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_s_in_7_V_loc_channel_full_n = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Block_proc_U0_ap_done.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Block_proc_U0_ap_continue.read()))) {
            ap_reg_s_in_7_V_loc_channel_full_n = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Block_proc_U0_ap_done.read()) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, s_in_7_V_loc_channel_full_n.read()))) {
            ap_reg_s_in_7_V_loc_channel_full_n = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_s_in_8_V_loc_channel_full_n = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Block_proc_U0_ap_done.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Block_proc_U0_ap_continue.read()))) {
            ap_reg_s_in_8_V_loc_channel_full_n = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Block_proc_U0_ap_done.read()) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, s_in_8_V_loc_channel_full_n.read()))) {
            ap_reg_s_in_8_V_loc_channel_full_n = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_s_in_9_V_loc_channel_full_n = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Block_proc_U0_ap_done.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Block_proc_U0_ap_continue.read()))) {
            ap_reg_s_in_9_V_loc_channel_full_n = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Block_proc_U0_ap_done.read()) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, s_in_9_V_loc_channel_full_n.read()))) {
            ap_reg_s_in_9_V_loc_channel_full_n = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        svm_classifier_Block_proc_U0_ap_start = ap_const_logic_0;
    } else {
        svm_classifier_Block_proc_U0_ap_start = ap_const_logic_1;
    }
}

void svm_classifier::thread_ap_chn_write_svm_classifier_Block_proc_U0_s_in_0_V_loc_channel() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_s_in_0_V_loc_channel_full_n.read())) {
        ap_chn_write_svm_classifier_Block_proc_U0_s_in_0_V_loc_channel = ap_const_logic_0;
    } else {
        ap_chn_write_svm_classifier_Block_proc_U0_s_in_0_V_loc_channel = svm_classifier_Block_proc_U0_ap_done.read();
    }
}

void svm_classifier::thread_ap_chn_write_svm_classifier_Block_proc_U0_s_in_10_V_loc_channel() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_s_in_10_V_loc_channel_full_n.read())) {
        ap_chn_write_svm_classifier_Block_proc_U0_s_in_10_V_loc_channel = ap_const_logic_0;
    } else {
        ap_chn_write_svm_classifier_Block_proc_U0_s_in_10_V_loc_channel = svm_classifier_Block_proc_U0_ap_done.read();
    }
}

void svm_classifier::thread_ap_chn_write_svm_classifier_Block_proc_U0_s_in_11_V_loc_channel() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_s_in_11_V_loc_channel_full_n.read())) {
        ap_chn_write_svm_classifier_Block_proc_U0_s_in_11_V_loc_channel = ap_const_logic_0;
    } else {
        ap_chn_write_svm_classifier_Block_proc_U0_s_in_11_V_loc_channel = svm_classifier_Block_proc_U0_ap_done.read();
    }
}

void svm_classifier::thread_ap_chn_write_svm_classifier_Block_proc_U0_s_in_12_V_loc_channel() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_s_in_12_V_loc_channel_full_n.read())) {
        ap_chn_write_svm_classifier_Block_proc_U0_s_in_12_V_loc_channel = ap_const_logic_0;
    } else {
        ap_chn_write_svm_classifier_Block_proc_U0_s_in_12_V_loc_channel = svm_classifier_Block_proc_U0_ap_done.read();
    }
}

void svm_classifier::thread_ap_chn_write_svm_classifier_Block_proc_U0_s_in_13_V_loc_channel() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_s_in_13_V_loc_channel_full_n.read())) {
        ap_chn_write_svm_classifier_Block_proc_U0_s_in_13_V_loc_channel = ap_const_logic_0;
    } else {
        ap_chn_write_svm_classifier_Block_proc_U0_s_in_13_V_loc_channel = svm_classifier_Block_proc_U0_ap_done.read();
    }
}

void svm_classifier::thread_ap_chn_write_svm_classifier_Block_proc_U0_s_in_14_V_loc_channel() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_s_in_14_V_loc_channel_full_n.read())) {
        ap_chn_write_svm_classifier_Block_proc_U0_s_in_14_V_loc_channel = ap_const_logic_0;
    } else {
        ap_chn_write_svm_classifier_Block_proc_U0_s_in_14_V_loc_channel = svm_classifier_Block_proc_U0_ap_done.read();
    }
}

void svm_classifier::thread_ap_chn_write_svm_classifier_Block_proc_U0_s_in_15_V_loc_channel() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_s_in_15_V_loc_channel_full_n.read())) {
        ap_chn_write_svm_classifier_Block_proc_U0_s_in_15_V_loc_channel = ap_const_logic_0;
    } else {
        ap_chn_write_svm_classifier_Block_proc_U0_s_in_15_V_loc_channel = svm_classifier_Block_proc_U0_ap_done.read();
    }
}

void svm_classifier::thread_ap_chn_write_svm_classifier_Block_proc_U0_s_in_1_V_loc_channel() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_s_in_1_V_loc_channel_full_n.read())) {
        ap_chn_write_svm_classifier_Block_proc_U0_s_in_1_V_loc_channel = ap_const_logic_0;
    } else {
        ap_chn_write_svm_classifier_Block_proc_U0_s_in_1_V_loc_channel = svm_classifier_Block_proc_U0_ap_done.read();
    }
}

void svm_classifier::thread_ap_chn_write_svm_classifier_Block_proc_U0_s_in_2_V_loc_channel() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_s_in_2_V_loc_channel_full_n.read())) {
        ap_chn_write_svm_classifier_Block_proc_U0_s_in_2_V_loc_channel = ap_const_logic_0;
    } else {
        ap_chn_write_svm_classifier_Block_proc_U0_s_in_2_V_loc_channel = svm_classifier_Block_proc_U0_ap_done.read();
    }
}

void svm_classifier::thread_ap_chn_write_svm_classifier_Block_proc_U0_s_in_3_V_loc_channel() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_s_in_3_V_loc_channel_full_n.read())) {
        ap_chn_write_svm_classifier_Block_proc_U0_s_in_3_V_loc_channel = ap_const_logic_0;
    } else {
        ap_chn_write_svm_classifier_Block_proc_U0_s_in_3_V_loc_channel = svm_classifier_Block_proc_U0_ap_done.read();
    }
}

void svm_classifier::thread_ap_chn_write_svm_classifier_Block_proc_U0_s_in_4_V_loc_channel() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_s_in_4_V_loc_channel_full_n.read())) {
        ap_chn_write_svm_classifier_Block_proc_U0_s_in_4_V_loc_channel = ap_const_logic_0;
    } else {
        ap_chn_write_svm_classifier_Block_proc_U0_s_in_4_V_loc_channel = svm_classifier_Block_proc_U0_ap_done.read();
    }
}

void svm_classifier::thread_ap_chn_write_svm_classifier_Block_proc_U0_s_in_5_V_loc_channel() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_s_in_5_V_loc_channel_full_n.read())) {
        ap_chn_write_svm_classifier_Block_proc_U0_s_in_5_V_loc_channel = ap_const_logic_0;
    } else {
        ap_chn_write_svm_classifier_Block_proc_U0_s_in_5_V_loc_channel = svm_classifier_Block_proc_U0_ap_done.read();
    }
}

void svm_classifier::thread_ap_chn_write_svm_classifier_Block_proc_U0_s_in_6_V_loc_channel() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_s_in_6_V_loc_channel_full_n.read())) {
        ap_chn_write_svm_classifier_Block_proc_U0_s_in_6_V_loc_channel = ap_const_logic_0;
    } else {
        ap_chn_write_svm_classifier_Block_proc_U0_s_in_6_V_loc_channel = svm_classifier_Block_proc_U0_ap_done.read();
    }
}

void svm_classifier::thread_ap_chn_write_svm_classifier_Block_proc_U0_s_in_7_V_loc_channel() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_s_in_7_V_loc_channel_full_n.read())) {
        ap_chn_write_svm_classifier_Block_proc_U0_s_in_7_V_loc_channel = ap_const_logic_0;
    } else {
        ap_chn_write_svm_classifier_Block_proc_U0_s_in_7_V_loc_channel = svm_classifier_Block_proc_U0_ap_done.read();
    }
}

void svm_classifier::thread_ap_chn_write_svm_classifier_Block_proc_U0_s_in_8_V_loc_channel() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_s_in_8_V_loc_channel_full_n.read())) {
        ap_chn_write_svm_classifier_Block_proc_U0_s_in_8_V_loc_channel = ap_const_logic_0;
    } else {
        ap_chn_write_svm_classifier_Block_proc_U0_s_in_8_V_loc_channel = svm_classifier_Block_proc_U0_ap_done.read();
    }
}

void svm_classifier::thread_ap_chn_write_svm_classifier_Block_proc_U0_s_in_9_V_loc_channel() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_s_in_9_V_loc_channel_full_n.read())) {
        ap_chn_write_svm_classifier_Block_proc_U0_s_in_9_V_loc_channel = ap_const_logic_0;
    } else {
        ap_chn_write_svm_classifier_Block_proc_U0_s_in_9_V_loc_channel = svm_classifier_Block_proc_U0_ap_done.read();
    }
}

void svm_classifier::thread_ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_0_V_loc_channel() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ch_sums_0_V_loc_channel_full_n.read())) {
        ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_0_V_loc_channel = ap_const_logic_0;
    } else {
        ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_0_V_loc_channel = svm_classifier_Loop_Sum_loop_proc1_U0_ap_done.read();
    }
}

void svm_classifier::thread_ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_1_V_loc_channel() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ch_sums_1_V_loc_channel_full_n.read())) {
        ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_1_V_loc_channel = ap_const_logic_0;
    } else {
        ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_1_V_loc_channel = svm_classifier_Loop_Sum_loop_proc1_U0_ap_done.read();
    }
}

void svm_classifier::thread_ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_2_V_loc_channel() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ch_sums_2_V_loc_channel_full_n.read())) {
        ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_2_V_loc_channel = ap_const_logic_0;
    } else {
        ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_2_V_loc_channel = svm_classifier_Loop_Sum_loop_proc1_U0_ap_done.read();
    }
}

void svm_classifier::thread_ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_3_V_loc_channel() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ch_sums_3_V_loc_channel_full_n.read())) {
        ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_3_V_loc_channel = ap_const_logic_0;
    } else {
        ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_3_V_loc_channel = svm_classifier_Loop_Sum_loop_proc1_U0_ap_done.read();
    }
}

void svm_classifier::thread_ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_4_V_loc_channel() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ch_sums_4_V_loc_channel_full_n.read())) {
        ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_4_V_loc_channel = ap_const_logic_0;
    } else {
        ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_4_V_loc_channel = svm_classifier_Loop_Sum_loop_proc1_U0_ap_done.read();
    }
}

void svm_classifier::thread_ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_5_V_loc_channel() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ch_sums_5_V_loc_channel_full_n.read())) {
        ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_5_V_loc_channel = ap_const_logic_0;
    } else {
        ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_5_V_loc_channel = svm_classifier_Loop_Sum_loop_proc1_U0_ap_done.read();
    }
}

void svm_classifier::thread_ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_6_loc_channel() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ch_sums_V_6_loc_channel_full_n.read())) {
        ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_6_loc_channel = ap_const_logic_0;
    } else {
        ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_6_loc_channel = svm_classifier_Loop_Sum_loop_proc1_U0_ap_done.read();
    }
}

void svm_classifier::thread_ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_7_loc_channel() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ch_sums_V_7_loc_channel_full_n.read())) {
        ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_7_loc_channel = ap_const_logic_0;
    } else {
        ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_7_loc_channel = svm_classifier_Loop_Sum_loop_proc1_U0_ap_done.read();
    }
}

void svm_classifier::thread_ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_8_loc_channel() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ch_sums_V_8_loc_channel_full_n.read())) {
        ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_8_loc_channel = ap_const_logic_0;
    } else {
        ap_chn_write_svm_classifier_Loop_Sum_loop_proc1_U0_ch_sums_V_8_loc_channel = svm_classifier_Loop_Sum_loop_proc1_U0_ap_done.read();
    }
}

void svm_classifier::thread_ap_done() {
    ap_done = ap_sig_hs_done.read();
}

void svm_classifier::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_svm_classifier_entry3_U0_ap_idle.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Block_proc_U0_ap_idle.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Loop_Sum_loop_proc1_U0_ap_idle.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Block_preheader_0_proc1_U0_ap_idle.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, s_in_0_V_loc_channel_empty_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, s_in_1_V_loc_channel_empty_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, s_in_2_V_loc_channel_empty_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, s_in_3_V_loc_channel_empty_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, s_in_4_V_loc_channel_empty_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, s_in_5_V_loc_channel_empty_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, s_in_6_V_loc_channel_empty_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, s_in_7_V_loc_channel_empty_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, s_in_8_V_loc_channel_empty_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, s_in_9_V_loc_channel_empty_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, s_in_10_V_loc_channel_empty_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, s_in_11_V_loc_channel_empty_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, s_in_12_V_loc_channel_empty_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, s_in_13_V_loc_channel_empty_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, s_in_14_V_loc_channel_empty_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, s_in_15_V_loc_channel_empty_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ch_sums_V_8_loc_channel_empty_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ch_sums_V_7_loc_channel_empty_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ch_sums_V_6_loc_channel_empty_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ch_sums_0_V_loc_channel_empty_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ch_sums_1_V_loc_channel_empty_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ch_sums_2_V_loc_channel_empty_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ch_sums_3_V_loc_channel_empty_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ch_sums_4_V_loc_channel_empty_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ch_sums_5_V_loc_channel_empty_n.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void svm_classifier::thread_ap_ready() {
    ap_ready = svm_classifier_svm_classifier_entry3_U0_ap_ready.read();
}

void svm_classifier::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void svm_classifier::thread_ap_sig_ch_sums_0_V_loc_channel_full_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ch_sums_0_V_loc_channel_full_n.read())) {
        ap_sig_ch_sums_0_V_loc_channel_full_n = ch_sums_0_V_loc_channel_full_n.read();
    } else {
        ap_sig_ch_sums_0_V_loc_channel_full_n = ap_const_logic_1;
    }
}

void svm_classifier::thread_ap_sig_ch_sums_1_V_loc_channel_full_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ch_sums_1_V_loc_channel_full_n.read())) {
        ap_sig_ch_sums_1_V_loc_channel_full_n = ch_sums_1_V_loc_channel_full_n.read();
    } else {
        ap_sig_ch_sums_1_V_loc_channel_full_n = ap_const_logic_1;
    }
}

void svm_classifier::thread_ap_sig_ch_sums_2_V_loc_channel_full_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ch_sums_2_V_loc_channel_full_n.read())) {
        ap_sig_ch_sums_2_V_loc_channel_full_n = ch_sums_2_V_loc_channel_full_n.read();
    } else {
        ap_sig_ch_sums_2_V_loc_channel_full_n = ap_const_logic_1;
    }
}

void svm_classifier::thread_ap_sig_ch_sums_3_V_loc_channel_full_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ch_sums_3_V_loc_channel_full_n.read())) {
        ap_sig_ch_sums_3_V_loc_channel_full_n = ch_sums_3_V_loc_channel_full_n.read();
    } else {
        ap_sig_ch_sums_3_V_loc_channel_full_n = ap_const_logic_1;
    }
}

void svm_classifier::thread_ap_sig_ch_sums_4_V_loc_channel_full_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ch_sums_4_V_loc_channel_full_n.read())) {
        ap_sig_ch_sums_4_V_loc_channel_full_n = ch_sums_4_V_loc_channel_full_n.read();
    } else {
        ap_sig_ch_sums_4_V_loc_channel_full_n = ap_const_logic_1;
    }
}

void svm_classifier::thread_ap_sig_ch_sums_5_V_loc_channel_full_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ch_sums_5_V_loc_channel_full_n.read())) {
        ap_sig_ch_sums_5_V_loc_channel_full_n = ch_sums_5_V_loc_channel_full_n.read();
    } else {
        ap_sig_ch_sums_5_V_loc_channel_full_n = ap_const_logic_1;
    }
}

void svm_classifier::thread_ap_sig_ch_sums_V_6_loc_channel_full_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ch_sums_V_6_loc_channel_full_n.read())) {
        ap_sig_ch_sums_V_6_loc_channel_full_n = ch_sums_V_6_loc_channel_full_n.read();
    } else {
        ap_sig_ch_sums_V_6_loc_channel_full_n = ap_const_logic_1;
    }
}

void svm_classifier::thread_ap_sig_ch_sums_V_7_loc_channel_full_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ch_sums_V_7_loc_channel_full_n.read())) {
        ap_sig_ch_sums_V_7_loc_channel_full_n = ch_sums_V_7_loc_channel_full_n.read();
    } else {
        ap_sig_ch_sums_V_7_loc_channel_full_n = ap_const_logic_1;
    }
}

void svm_classifier::thread_ap_sig_ch_sums_V_8_loc_channel_full_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ch_sums_V_8_loc_channel_full_n.read())) {
        ap_sig_ch_sums_V_8_loc_channel_full_n = ch_sums_V_8_loc_channel_full_n.read();
    } else {
        ap_sig_ch_sums_V_8_loc_channel_full_n = ap_const_logic_1;
    }
}

void svm_classifier::thread_ap_sig_hs_continue() {
    ap_sig_hs_continue = ap_const_logic_1;
}

void svm_classifier::thread_ap_sig_hs_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, svm_classifier_Block_preheader_0_proc1_U0_ap_done.read())) {
        ap_sig_hs_done = ap_const_logic_1;
    } else {
        ap_sig_hs_done = ap_const_logic_0;
    }
}

void svm_classifier::thread_ap_sig_hs_ready() {
    ap_sig_hs_ready = svm_classifier_svm_classifier_entry3_U0_ap_ready.read();
}

void svm_classifier::thread_ap_sig_s_in_0_V_loc_channel_full_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_s_in_0_V_loc_channel_full_n.read())) {
        ap_sig_s_in_0_V_loc_channel_full_n = s_in_0_V_loc_channel_full_n.read();
    } else {
        ap_sig_s_in_0_V_loc_channel_full_n = ap_const_logic_1;
    }
}

void svm_classifier::thread_ap_sig_s_in_10_V_loc_channel_full_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_s_in_10_V_loc_channel_full_n.read())) {
        ap_sig_s_in_10_V_loc_channel_full_n = s_in_10_V_loc_channel_full_n.read();
    } else {
        ap_sig_s_in_10_V_loc_channel_full_n = ap_const_logic_1;
    }
}

void svm_classifier::thread_ap_sig_s_in_11_V_loc_channel_full_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_s_in_11_V_loc_channel_full_n.read())) {
        ap_sig_s_in_11_V_loc_channel_full_n = s_in_11_V_loc_channel_full_n.read();
    } else {
        ap_sig_s_in_11_V_loc_channel_full_n = ap_const_logic_1;
    }
}

void svm_classifier::thread_ap_sig_s_in_12_V_loc_channel_full_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_s_in_12_V_loc_channel_full_n.read())) {
        ap_sig_s_in_12_V_loc_channel_full_n = s_in_12_V_loc_channel_full_n.read();
    } else {
        ap_sig_s_in_12_V_loc_channel_full_n = ap_const_logic_1;
    }
}

void svm_classifier::thread_ap_sig_s_in_13_V_loc_channel_full_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_s_in_13_V_loc_channel_full_n.read())) {
        ap_sig_s_in_13_V_loc_channel_full_n = s_in_13_V_loc_channel_full_n.read();
    } else {
        ap_sig_s_in_13_V_loc_channel_full_n = ap_const_logic_1;
    }
}

void svm_classifier::thread_ap_sig_s_in_14_V_loc_channel_full_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_s_in_14_V_loc_channel_full_n.read())) {
        ap_sig_s_in_14_V_loc_channel_full_n = s_in_14_V_loc_channel_full_n.read();
    } else {
        ap_sig_s_in_14_V_loc_channel_full_n = ap_const_logic_1;
    }
}

void svm_classifier::thread_ap_sig_s_in_15_V_loc_channel_full_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_s_in_15_V_loc_channel_full_n.read())) {
        ap_sig_s_in_15_V_loc_channel_full_n = s_in_15_V_loc_channel_full_n.read();
    } else {
        ap_sig_s_in_15_V_loc_channel_full_n = ap_const_logic_1;
    }
}

void svm_classifier::thread_ap_sig_s_in_1_V_loc_channel_full_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_s_in_1_V_loc_channel_full_n.read())) {
        ap_sig_s_in_1_V_loc_channel_full_n = s_in_1_V_loc_channel_full_n.read();
    } else {
        ap_sig_s_in_1_V_loc_channel_full_n = ap_const_logic_1;
    }
}

void svm_classifier::thread_ap_sig_s_in_2_V_loc_channel_full_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_s_in_2_V_loc_channel_full_n.read())) {
        ap_sig_s_in_2_V_loc_channel_full_n = s_in_2_V_loc_channel_full_n.read();
    } else {
        ap_sig_s_in_2_V_loc_channel_full_n = ap_const_logic_1;
    }
}

void svm_classifier::thread_ap_sig_s_in_3_V_loc_channel_full_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_s_in_3_V_loc_channel_full_n.read())) {
        ap_sig_s_in_3_V_loc_channel_full_n = s_in_3_V_loc_channel_full_n.read();
    } else {
        ap_sig_s_in_3_V_loc_channel_full_n = ap_const_logic_1;
    }
}

void svm_classifier::thread_ap_sig_s_in_4_V_loc_channel_full_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_s_in_4_V_loc_channel_full_n.read())) {
        ap_sig_s_in_4_V_loc_channel_full_n = s_in_4_V_loc_channel_full_n.read();
    } else {
        ap_sig_s_in_4_V_loc_channel_full_n = ap_const_logic_1;
    }
}

void svm_classifier::thread_ap_sig_s_in_5_V_loc_channel_full_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_s_in_5_V_loc_channel_full_n.read())) {
        ap_sig_s_in_5_V_loc_channel_full_n = s_in_5_V_loc_channel_full_n.read();
    } else {
        ap_sig_s_in_5_V_loc_channel_full_n = ap_const_logic_1;
    }
}

void svm_classifier::thread_ap_sig_s_in_6_V_loc_channel_full_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_s_in_6_V_loc_channel_full_n.read())) {
        ap_sig_s_in_6_V_loc_channel_full_n = s_in_6_V_loc_channel_full_n.read();
    } else {
        ap_sig_s_in_6_V_loc_channel_full_n = ap_const_logic_1;
    }
}

void svm_classifier::thread_ap_sig_s_in_7_V_loc_channel_full_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_s_in_7_V_loc_channel_full_n.read())) {
        ap_sig_s_in_7_V_loc_channel_full_n = s_in_7_V_loc_channel_full_n.read();
    } else {
        ap_sig_s_in_7_V_loc_channel_full_n = ap_const_logic_1;
    }
}

void svm_classifier::thread_ap_sig_s_in_8_V_loc_channel_full_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_s_in_8_V_loc_channel_full_n.read())) {
        ap_sig_s_in_8_V_loc_channel_full_n = s_in_8_V_loc_channel_full_n.read();
    } else {
        ap_sig_s_in_8_V_loc_channel_full_n = ap_const_logic_1;
    }
}

void svm_classifier::thread_ap_sig_s_in_9_V_loc_channel_full_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_s_in_9_V_loc_channel_full_n.read())) {
        ap_sig_s_in_9_V_loc_channel_full_n = s_in_9_V_loc_channel_full_n.read();
    } else {
        ap_sig_s_in_9_V_loc_channel_full_n = ap_const_logic_1;
    }
}

void svm_classifier::thread_out_r() {
    out_r =  (sc_logic) (svm_classifier_Block_preheader_0_proc1_U0_out_r.read()[0]);
}

void svm_classifier::thread_svm_classifier_Block_preheader_0_proc1_U0_ap_continue() {
    svm_classifier_Block_preheader_0_proc1_U0_ap_continue = ap_const_logic_1;
}

void svm_classifier::thread_svm_classifier_Block_preheader_0_proc1_U0_ap_start() {
    svm_classifier_Block_preheader_0_proc1_U0_ap_start = (ch_sums_V_8_loc_channel_empty_n.read() & ch_sums_V_7_loc_channel_empty_n.read() & ch_sums_V_6_loc_channel_empty_n.read() & ch_sums_0_V_loc_channel_empty_n.read() & ch_sums_1_V_loc_channel_empty_n.read() & ch_sums_2_V_loc_channel_empty_n.read() & ch_sums_3_V_loc_channel_empty_n.read() & ch_sums_4_V_loc_channel_empty_n.read() & ch_sums_5_V_loc_channel_empty_n.read());
}

void svm_classifier::thread_svm_classifier_Block_proc_U0_ap_continue() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_s_in_15_V_loc_channel_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_s_in_5_V_loc_channel_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_s_in_14_V_loc_channel_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_s_in_9_V_loc_channel_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_s_in_3_V_loc_channel_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_s_in_10_V_loc_channel_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_s_in_7_V_loc_channel_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_s_in_1_V_loc_channel_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_s_in_6_V_loc_channel_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_s_in_13_V_loc_channel_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_s_in_11_V_loc_channel_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_s_in_8_V_loc_channel_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_s_in_4_V_loc_channel_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_s_in_12_V_loc_channel_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_s_in_0_V_loc_channel_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_s_in_2_V_loc_channel_full_n.read()))) {
        svm_classifier_Block_proc_U0_ap_continue = ap_const_logic_1;
    } else {
        svm_classifier_Block_proc_U0_ap_continue = ap_const_logic_0;
    }
}

void svm_classifier::thread_svm_classifier_Loop_Sum_loop_proc1_U0_ap_continue() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_ch_sums_V_8_loc_channel_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_ch_sums_V_6_loc_channel_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_ch_sums_3_V_loc_channel_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_ch_sums_5_V_loc_channel_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_ch_sums_4_V_loc_channel_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_ch_sums_2_V_loc_channel_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_ch_sums_1_V_loc_channel_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_ch_sums_V_7_loc_channel_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_ch_sums_0_V_loc_channel_full_n.read()))) {
        svm_classifier_Loop_Sum_loop_proc1_U0_ap_continue = ap_const_logic_1;
    } else {
        svm_classifier_Loop_Sum_loop_proc1_U0_ap_continue = ap_const_logic_0;
    }
}

void svm_classifier::thread_svm_classifier_Loop_Sum_loop_proc1_U0_ap_start() {
    svm_classifier_Loop_Sum_loop_proc1_U0_ap_start = (s_in_0_V_loc_channel_empty_n.read() & s_in_1_V_loc_channel_empty_n.read() & s_in_2_V_loc_channel_empty_n.read() & s_in_3_V_loc_channel_empty_n.read() & s_in_4_V_loc_channel_empty_n.read() & s_in_5_V_loc_channel_empty_n.read() & s_in_6_V_loc_channel_empty_n.read() & s_in_7_V_loc_channel_empty_n.read() & s_in_8_V_loc_channel_empty_n.read() & s_in_9_V_loc_channel_empty_n.read() & s_in_10_V_loc_channel_empty_n.read() & s_in_11_V_loc_channel_empty_n.read() & s_in_12_V_loc_channel_empty_n.read() & s_in_13_V_loc_channel_empty_n.read() & s_in_14_V_loc_channel_empty_n.read() & s_in_15_V_loc_channel_empty_n.read());
}

void svm_classifier::thread_svm_classifier_svm_classifier_entry3_U0_ap_continue() {
    svm_classifier_svm_classifier_entry3_U0_ap_continue = ap_const_logic_1;
}

void svm_classifier::thread_svm_classifier_svm_classifier_entry3_U0_ap_start() {
    svm_classifier_svm_classifier_entry3_U0_ap_start = ap_start.read();
}

void svm_classifier::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"s_axi_AXILiteS_AWVALID\" :  \"" << s_axi_AXILiteS_AWVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"s_axi_AXILiteS_AWREADY\" :  \"" << s_axi_AXILiteS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWADDR\" :  \"" << s_axi_AXILiteS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WVALID\" :  \"" << s_axi_AXILiteS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_WREADY\" :  \"" << s_axi_AXILiteS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WDATA\" :  \"" << s_axi_AXILiteS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WSTRB\" :  \"" << s_axi_AXILiteS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARVALID\" :  \"" << s_axi_AXILiteS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_ARREADY\" :  \"" << s_axi_AXILiteS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARADDR\" :  \"" << s_axi_AXILiteS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RVALID\" :  \"" << s_axi_AXILiteS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_RREADY\" :  \"" << s_axi_AXILiteS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RDATA\" :  \"" << s_axi_AXILiteS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RRESP\" :  \"" << s_axi_AXILiteS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BVALID\" :  \"" << s_axi_AXILiteS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_BREADY\" :  \"" << s_axi_AXILiteS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BRESP\" :  \"" << s_axi_AXILiteS_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

