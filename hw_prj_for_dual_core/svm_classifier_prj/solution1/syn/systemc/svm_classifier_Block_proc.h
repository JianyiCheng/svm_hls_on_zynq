// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _svm_classifier_Block_proc_HH_
#define _svm_classifier_Block_proc_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct svm_classifier_Block_proc : public sc_module {
    // Port declarations 26
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<256> > in_V_dout;
    sc_in< sc_logic > in_V_empty_n;
    sc_out< sc_logic > in_V_read;
    sc_out< sc_lv<13> > ap_return_0;
    sc_out< sc_lv<13> > ap_return_1;
    sc_out< sc_lv<13> > ap_return_2;
    sc_out< sc_lv<13> > ap_return_3;
    sc_out< sc_lv<13> > ap_return_4;
    sc_out< sc_lv<13> > ap_return_5;
    sc_out< sc_lv<13> > ap_return_6;
    sc_out< sc_lv<13> > ap_return_7;
    sc_out< sc_lv<13> > ap_return_8;
    sc_out< sc_lv<13> > ap_return_9;
    sc_out< sc_lv<13> > ap_return_10;
    sc_out< sc_lv<13> > ap_return_11;
    sc_out< sc_lv<13> > ap_return_12;
    sc_out< sc_lv<13> > ap_return_13;
    sc_out< sc_lv<13> > ap_return_14;
    sc_out< sc_lv<13> > ap_return_15;


    // Module declarations
    svm_classifier_Block_proc(sc_module_name name);
    SC_HAS_PROCESS(svm_classifier_Block_proc);

    ~svm_classifier_Block_proc();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_19;
    sc_signal< sc_logic > in_V_blk_n;
    sc_signal< bool > ap_sig_54;
    sc_signal< sc_lv<13> > ap_return_0_preg;
    sc_signal< sc_lv<13> > ap_return_1_preg;
    sc_signal< sc_lv<13> > ap_return_2_preg;
    sc_signal< sc_lv<13> > ap_return_3_preg;
    sc_signal< sc_lv<13> > ap_return_4_preg;
    sc_signal< sc_lv<13> > ap_return_5_preg;
    sc_signal< sc_lv<13> > ap_return_6_preg;
    sc_signal< sc_lv<13> > ap_return_7_preg;
    sc_signal< sc_lv<13> > ap_return_8_preg;
    sc_signal< sc_lv<13> > ap_return_9_preg;
    sc_signal< sc_lv<13> > ap_return_10_preg;
    sc_signal< sc_lv<13> > ap_return_11_preg;
    sc_signal< sc_lv<13> > ap_return_12_preg;
    sc_signal< sc_lv<13> > ap_return_13_preg;
    sc_signal< sc_lv<13> > ap_return_14_preg;
    sc_signal< sc_lv<13> > ap_return_15_preg;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_st1_fsm_0;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_23;
    static const sc_lv<32> ap_const_lv32_2F;
    static const sc_lv<32> ap_const_lv32_33;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<32> ap_const_lv32_43;
    static const sc_lv<32> ap_const_lv32_4F;
    static const sc_lv<32> ap_const_lv32_53;
    static const sc_lv<32> ap_const_lv32_5F;
    static const sc_lv<32> ap_const_lv32_63;
    static const sc_lv<32> ap_const_lv32_6F;
    static const sc_lv<32> ap_const_lv32_73;
    static const sc_lv<32> ap_const_lv32_7F;
    static const sc_lv<32> ap_const_lv32_83;
    static const sc_lv<32> ap_const_lv32_8F;
    static const sc_lv<32> ap_const_lv32_93;
    static const sc_lv<32> ap_const_lv32_9F;
    static const sc_lv<32> ap_const_lv32_A3;
    static const sc_lv<32> ap_const_lv32_AF;
    static const sc_lv<32> ap_const_lv32_B3;
    static const sc_lv<32> ap_const_lv32_BF;
    static const sc_lv<32> ap_const_lv32_C3;
    static const sc_lv<32> ap_const_lv32_CF;
    static const sc_lv<32> ap_const_lv32_D3;
    static const sc_lv<32> ap_const_lv32_DF;
    static const sc_lv<32> ap_const_lv32_E3;
    static const sc_lv<32> ap_const_lv32_EF;
    static const sc_lv<32> ap_const_lv32_F3;
    static const sc_lv<32> ap_const_lv32_FF;
    static const sc_lv<13> ap_const_lv13_0;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return_0();
    void thread_ap_return_1();
    void thread_ap_return_10();
    void thread_ap_return_11();
    void thread_ap_return_12();
    void thread_ap_return_13();
    void thread_ap_return_14();
    void thread_ap_return_15();
    void thread_ap_return_2();
    void thread_ap_return_3();
    void thread_ap_return_4();
    void thread_ap_return_5();
    void thread_ap_return_6();
    void thread_ap_return_7();
    void thread_ap_return_8();
    void thread_ap_return_9();
    void thread_ap_sig_19();
    void thread_ap_sig_54();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_in_V_blk_n();
    void thread_in_V_read();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
