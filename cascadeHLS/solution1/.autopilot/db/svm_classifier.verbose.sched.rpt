

================================================================
== Vivado HLS Report for 'svm_classifier'
================================================================
* Date:           Thu Mar 22 11:46:14 2018

* Version:        2016.2 (Build 1577090 on Thu Jun 02 16:59:10 MDT 2016)
* Project:        svm_classifier_cascade_prj
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      8.61|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |   61|  120|   62|  121|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 5
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / (or_cond)
	5  / (!or_cond)
4 --> 
	5  / true
5 --> 
* FSM state operations: 

 <State 1>: 2.04ns
ST_1: in_V_read [1/1] 1.00ns
:8  %in_V_read = call i256 @_ssdm_op_Read.s_axilite.i256P(i256* %in_V)

ST_1: s_in_0_V [1/1] 0.00ns
:9  %s_in_0_V = call i13 @_ssdm_op_PartSelect.i13.i256.i32.i32(i256 %in_V_read, i32 3, i32 15)

ST_1: s_in_1_V [1/1] 0.00ns
:10  %s_in_1_V = call i13 @_ssdm_op_PartSelect.i13.i256.i32.i32(i256 %in_V_read, i32 19, i32 31)

ST_1: s_in_2_V [1/1] 0.00ns
:11  %s_in_2_V = call i13 @_ssdm_op_PartSelect.i13.i256.i32.i32(i256 %in_V_read, i32 35, i32 47)

ST_1: s_in_3_V [1/1] 0.00ns
:12  %s_in_3_V = call i13 @_ssdm_op_PartSelect.i13.i256.i32.i32(i256 %in_V_read, i32 51, i32 63)

ST_1: s_in_4_V [1/1] 0.00ns
:13  %s_in_4_V = call i13 @_ssdm_op_PartSelect.i13.i256.i32.i32(i256 %in_V_read, i32 67, i32 79)

ST_1: s_in_5_V [1/1] 0.00ns
:14  %s_in_5_V = call i13 @_ssdm_op_PartSelect.i13.i256.i32.i32(i256 %in_V_read, i32 83, i32 95)

ST_1: s_in_6_V [1/1] 0.00ns
:15  %s_in_6_V = call i13 @_ssdm_op_PartSelect.i13.i256.i32.i32(i256 %in_V_read, i32 99, i32 111)

ST_1: s_in_7_V [1/1] 0.00ns
:16  %s_in_7_V = call i13 @_ssdm_op_PartSelect.i13.i256.i32.i32(i256 %in_V_read, i32 115, i32 127)

ST_1: s_in_8_V [1/1] 0.00ns
:17  %s_in_8_V = call i13 @_ssdm_op_PartSelect.i13.i256.i32.i32(i256 %in_V_read, i32 131, i32 143)

ST_1: s_in_9_V [1/1] 0.00ns
:18  %s_in_9_V = call i13 @_ssdm_op_PartSelect.i13.i256.i32.i32(i256 %in_V_read, i32 147, i32 159)

ST_1: s_in_10_V [1/1] 0.00ns
:19  %s_in_10_V = call i13 @_ssdm_op_PartSelect.i13.i256.i32.i32(i256 %in_V_read, i32 163, i32 175)

ST_1: s_in_11_V [1/1] 0.00ns
:20  %s_in_11_V = call i13 @_ssdm_op_PartSelect.i13.i256.i32.i32(i256 %in_V_read, i32 179, i32 191)

ST_1: s_in_12_V [1/1] 0.00ns
:21  %s_in_12_V = call i13 @_ssdm_op_PartSelect.i13.i256.i32.i32(i256 %in_V_read, i32 195, i32 207)

ST_1: s_in_13_V [1/1] 0.00ns
:22  %s_in_13_V = call i13 @_ssdm_op_PartSelect.i13.i256.i32.i32(i256 %in_V_read, i32 211, i32 223)

ST_1: s_in_14_V [1/1] 0.00ns
:23  %s_in_14_V = call i13 @_ssdm_op_PartSelect.i13.i256.i32.i32(i256 %in_V_read, i32 227, i32 239)

ST_1: s_in_15_V [1/1] 0.00ns
:24  %s_in_15_V = call i13 @_ssdm_op_PartSelect.i13.i256.i32.i32(i256 %in_V_read, i32 243, i32 255)

ST_1: lp_res_V [2/2] 1.04ns
:25  %lp_res_V = call fastcc i18 @svm_classifier_svm_classifier_process(i13 %s_in_0_V, i13 %s_in_1_V, i13 %s_in_2_V, i13 %s_in_3_V, i13 %s_in_4_V, i13 %s_in_5_V, i13 %s_in_6_V, i13 %s_in_7_V, i13 %s_in_8_V, i13 %s_in_9_V, i13 %s_in_10_V, i13 %s_in_11_V, i13 %s_in_12_V, i13 %s_in_13_V, i13 %s_in_14_V, i13 %s_in_15_V, [30 x i240]* @SVs_l_V_0, [30 x i240]* @SVs_l_V_1, [30 x i240]* @SVs_l_V_2, [29 x i240]* @SVs_l_V_3, [29 x i240]* @SVs_l_V_4, [29 x i240]* @SVs_l_V_5, [29 x i240]* @SVs_l_V_6, [29 x i240]* @SVs_l_V_7, [29 x i240]* @SVs_l_V_8, [29 x i240]* @SVs_l_V_9, [29 x i240]* @SVs_l_V_10, [29 x i240]* @SVs_l_V_11, [29 x i240]* @SVs_l_V_12, [29 x i240]* @SVs_l_V_13, [29 x i240]* @SVs_l_V_14, [29 x i240]* @SVs_l_V_15, [29 x i240]* @SVs_l_V_16, [29 x i240]* @SVs_l_V_17, [30 x i13]* @alpha_l_V_0, [30 x i13]* @alpha_l_V_1, [30 x i13]* @alpha_l_V_2, [29 x i13]* @alpha_l_V_3, [29 x i13]* @alpha_l_V_4, [29 x i13]* @alpha_l_V_5, [29 x i13]* @alpha_l_V_6, [29 x i13]* @alpha_l_V_7, [29 x i13]* @alpha_l_V_8, [29 x i13]* @alpha_l_V_9, [29 x i13]* @alpha_l_V_10, [29 x i13]* @alpha_l_V_11, [29 x i13]* @alpha_l_V_12, [29 x i13]* @alpha_l_V_13, [29 x i13]* @alpha_l_V_14, [29 x i13]* @alpha_l_V_15, [29 x i13]* @alpha_l_V_16, [29 x i13]* @alpha_l_V_17)


 <State 2>: 3.58ns
ST_2: lp_res_V [1/2] 3.58ns
:25  %lp_res_V = call fastcc i18 @svm_classifier_svm_classifier_process(i13 %s_in_0_V, i13 %s_in_1_V, i13 %s_in_2_V, i13 %s_in_3_V, i13 %s_in_4_V, i13 %s_in_5_V, i13 %s_in_6_V, i13 %s_in_7_V, i13 %s_in_8_V, i13 %s_in_9_V, i13 %s_in_10_V, i13 %s_in_11_V, i13 %s_in_12_V, i13 %s_in_13_V, i13 %s_in_14_V, i13 %s_in_15_V, [30 x i240]* @SVs_l_V_0, [30 x i240]* @SVs_l_V_1, [30 x i240]* @SVs_l_V_2, [29 x i240]* @SVs_l_V_3, [29 x i240]* @SVs_l_V_4, [29 x i240]* @SVs_l_V_5, [29 x i240]* @SVs_l_V_6, [29 x i240]* @SVs_l_V_7, [29 x i240]* @SVs_l_V_8, [29 x i240]* @SVs_l_V_9, [29 x i240]* @SVs_l_V_10, [29 x i240]* @SVs_l_V_11, [29 x i240]* @SVs_l_V_12, [29 x i240]* @SVs_l_V_13, [29 x i240]* @SVs_l_V_14, [29 x i240]* @SVs_l_V_15, [29 x i240]* @SVs_l_V_16, [29 x i240]* @SVs_l_V_17, [30 x i13]* @alpha_l_V_0, [30 x i13]* @alpha_l_V_1, [30 x i13]* @alpha_l_V_2, [29 x i13]* @alpha_l_V_3, [29 x i13]* @alpha_l_V_4, [29 x i13]* @alpha_l_V_5, [29 x i13]* @alpha_l_V_6, [29 x i13]* @alpha_l_V_7, [29 x i13]* @alpha_l_V_8, [29 x i13]* @alpha_l_V_9, [29 x i13]* @alpha_l_V_10, [29 x i13]* @alpha_l_V_11, [29 x i13]* @alpha_l_V_12, [29 x i13]* @alpha_l_V_13, [29 x i13]* @alpha_l_V_14, [29 x i13]* @alpha_l_V_15, [29 x i13]* @alpha_l_V_16, [29 x i13]* @alpha_l_V_17)


 <State 3>: 5.78ns
ST_3: stg_25 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap(i256* %in_V), !map !7

ST_3: stg_26 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap(i32* %lp_count), !map !88

ST_3: stg_27 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecBitsMap(i32* %hp_count), !map !94

ST_3: stg_28 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecBitsMap(i1 false) nounwind, !map !98

ST_3: stg_29 [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecTopModule([15 x i8]* @svm_classifier_str) nounwind

ST_3: stg_30 [1/1] 0.00ns
:5  call void (...)* @_ssdm_op_SpecInterface(i32* %lp_count, [10 x i8]* @p_str15, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str916, [1 x i8]* @p_str916, [1 x i8]* @p_str916, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str916) nounwind

ST_3: stg_31 [1/1] 0.00ns
:6  call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str15, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str916, [1 x i8]* @p_str916, [1 x i8]* @p_str916, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str916) nounwind

ST_3: stg_32 [1/1] 0.00ns
:7  call void (...)* @_ssdm_op_SpecInterface(i256* %in_V, [10 x i8]* @p_str15, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str916, [1 x i8]* @p_str916, [1 x i8]* @p_str916, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str916) nounwind

ST_3: tmp_15 [1/1] 0.00ns
:26  %tmp_15 = sext i18 %lp_res_V to i19

ST_3: r_V [1/1] 2.08ns
:27  %r_V = add i19 %tmp_15, 59224

ST_3: tmp_16 [1/1] 2.33ns
:28  %tmp_16 = icmp sgt i19 %r_V, -256

ST_3: tmp_17 [1/1] 2.33ns
:29  %tmp_17 = icmp slt i19 %r_V, 33280

ST_3: or_cond [1/1] 1.37ns
:30  %or_cond = and i1 %tmp_16, %tmp_17

ST_3: stg_38 [1/1] 0.00ns
:31  br i1 %or_cond, label %1, label %._crit_edge

ST_3: out_1 [1/1] 0.00ns
._crit_edge:0  %out_1 = call i1 @_ssdm_op_BitSelect.i1.i19.i32(i19 %r_V, i32 18)

ST_3: stg_40 [1/1] 1.00ns
._crit_edge:1  call void @_ssdm_op_Write.s_axilite.i32P(i32* %lp_count, i32 1)

ST_3: stg_41 [1/1] 0.00ns
._crit_edge:2  call void @_ssdm_op_Write.ap_auto.i32P(i32* %hp_count, i32 0)

ST_3: stg_42 [1/1] 1.57ns
._crit_edge:3  br label %2

ST_3: hp_res_V [2/2] 1.04ns
:0  %hp_res_V = call fastcc i18 @svm_classifier_svm_classifier_process(i13 %s_in_0_V, i13 %s_in_1_V, i13 %s_in_2_V, i13 %s_in_3_V, i13 %s_in_4_V, i13 %s_in_5_V, i13 %s_in_6_V, i13 %s_in_7_V, i13 %s_in_8_V, i13 %s_in_9_V, i13 %s_in_10_V, i13 %s_in_11_V, i13 %s_in_12_V, i13 %s_in_13_V, i13 %s_in_14_V, i13 %s_in_15_V, [30 x i240]* @SVs_h_V_0, [30 x i240]* @SVs_h_V_1, [30 x i240]* @SVs_h_V_2, [29 x i240]* @SVs_h_V_3, [29 x i240]* @SVs_h_V_4, [29 x i240]* @SVs_h_V_5, [29 x i240]* @SVs_h_V_6, [29 x i240]* @SVs_h_V_7, [29 x i240]* @SVs_h_V_8, [29 x i240]* @SVs_h_V_9, [29 x i240]* @SVs_h_V_10, [29 x i240]* @SVs_h_V_11, [29 x i240]* @SVs_h_V_12, [29 x i240]* @SVs_h_V_13, [29 x i240]* @SVs_h_V_14, [29 x i240]* @SVs_h_V_15, [29 x i240]* @SVs_h_V_16, [29 x i240]* @SVs_h_V_17, [30 x i13]* @alpha_h_V_0, [30 x i13]* @alpha_h_V_1, [30 x i13]* @alpha_h_V_2, [29 x i13]* @alpha_h_V_3, [29 x i13]* @alpha_h_V_4, [29 x i13]* @alpha_h_V_5, [29 x i13]* @alpha_h_V_6, [29 x i13]* @alpha_h_V_7, [29 x i13]* @alpha_h_V_8, [29 x i13]* @alpha_h_V_9, [29 x i13]* @alpha_h_V_10, [29 x i13]* @alpha_h_V_11, [29 x i13]* @alpha_h_V_12, [29 x i13]* @alpha_h_V_13, [29 x i13]* @alpha_h_V_14, [29 x i13]* @alpha_h_V_15, [29 x i13]* @alpha_h_V_16, [29 x i13]* @alpha_h_V_17)


 <State 4>: 7.74ns
ST_4: hp_res_V [1/2] 3.58ns
:0  %hp_res_V = call fastcc i18 @svm_classifier_svm_classifier_process(i13 %s_in_0_V, i13 %s_in_1_V, i13 %s_in_2_V, i13 %s_in_3_V, i13 %s_in_4_V, i13 %s_in_5_V, i13 %s_in_6_V, i13 %s_in_7_V, i13 %s_in_8_V, i13 %s_in_9_V, i13 %s_in_10_V, i13 %s_in_11_V, i13 %s_in_12_V, i13 %s_in_13_V, i13 %s_in_14_V, i13 %s_in_15_V, [30 x i240]* @SVs_h_V_0, [30 x i240]* @SVs_h_V_1, [30 x i240]* @SVs_h_V_2, [29 x i240]* @SVs_h_V_3, [29 x i240]* @SVs_h_V_4, [29 x i240]* @SVs_h_V_5, [29 x i240]* @SVs_h_V_6, [29 x i240]* @SVs_h_V_7, [29 x i240]* @SVs_h_V_8, [29 x i240]* @SVs_h_V_9, [29 x i240]* @SVs_h_V_10, [29 x i240]* @SVs_h_V_11, [29 x i240]* @SVs_h_V_12, [29 x i240]* @SVs_h_V_13, [29 x i240]* @SVs_h_V_14, [29 x i240]* @SVs_h_V_15, [29 x i240]* @SVs_h_V_16, [29 x i240]* @SVs_h_V_17, [30 x i13]* @alpha_h_V_0, [30 x i13]* @alpha_h_V_1, [30 x i13]* @alpha_h_V_2, [29 x i13]* @alpha_h_V_3, [29 x i13]* @alpha_h_V_4, [29 x i13]* @alpha_h_V_5, [29 x i13]* @alpha_h_V_6, [29 x i13]* @alpha_h_V_7, [29 x i13]* @alpha_h_V_8, [29 x i13]* @alpha_h_V_9, [29 x i13]* @alpha_h_V_10, [29 x i13]* @alpha_h_V_11, [29 x i13]* @alpha_h_V_12, [29 x i13]* @alpha_h_V_13, [29 x i13]* @alpha_h_V_14, [29 x i13]* @alpha_h_V_15, [29 x i13]* @alpha_h_V_16, [29 x i13]* @alpha_h_V_17)

ST_4: tmp_18 [1/1] 0.00ns
:1  %tmp_18 = sext i18 %hp_res_V to i19

ST_4: p_Val2_2 [1/1] 2.08ns
:2  %p_Val2_2 = add i19 %tmp_18, %tmp_15

ST_4: tmp_19 [1/1] 0.00ns
:3  %tmp_19 = sext i19 %p_Val2_2 to i20

ST_4: r_V_1 [1/1] 2.08ns
:4  %r_V_1 = add i20 %tmp_19, 59224

ST_4: out [1/1] 0.00ns
:5  %out = call i1 @_ssdm_op_BitSelect.i1.i20.i32(i20 %r_V_1, i32 19)


 <State 5>: 1.57ns
ST_5: stg_50 [1/1] 0.00ns
:6  call void @_ssdm_op_Write.ap_auto.i32P(i32* %hp_count, i32 1)

ST_5: stg_51 [1/1] 1.00ns
:7  call void @_ssdm_op_Write.s_axilite.i32P(i32* %lp_count, i32 0)

ST_5: stg_52 [1/1] 1.57ns
:8  br label %2

ST_5: out2 [1/1] 0.00ns
:0  %out2 = phi i1 [ %out_1, %._crit_edge ], [ %out, %1 ]

ST_5: stg_54 [1/1] 0.00ns
:1  ret i1 %out2



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 No timing violations. 


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
